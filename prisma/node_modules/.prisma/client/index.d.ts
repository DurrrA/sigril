
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model artikel
 * 
 */
export type artikel = $Result.DefaultSelection<Prisma.$artikelPayload>
/**
 * Model artikel_comment
 * 
 */
export type artikel_comment = $Result.DefaultSelection<Prisma.$artikel_commentPayload>
/**
 * Model barang
 * 
 */
export type barang = $Result.DefaultSelection<Prisma.$barangPayload>
/**
 * Model kategori
 * 
 */
export type kategori = $Result.DefaultSelection<Prisma.$kategoriPayload>
/**
 * Model keranjang
 * 
 */
export type keranjang = $Result.DefaultSelection<Prisma.$keranjangPayload>
/**
 * Model penalti
 * 
 */
export type penalti = $Result.DefaultSelection<Prisma.$penaltiPayload>
/**
 * Model review
 * 
 */
export type review = $Result.DefaultSelection<Prisma.$reviewPayload>
/**
 * Model role
 * 
 */
export type role = $Result.DefaultSelection<Prisma.$rolePayload>
/**
 * Model sewa_items
 * 
 */
export type sewa_items = $Result.DefaultSelection<Prisma.$sewa_itemsPayload>
/**
 * Model sewa_req
 * 
 */
export type sewa_req = $Result.DefaultSelection<Prisma.$sewa_reqPayload>
/**
 * Model tags
 * 
 */
export type tags = $Result.DefaultSelection<Prisma.$tagsPayload>
/**
 * Model transaksi
 * 
 */
export type transaksi = $Result.DefaultSelection<Prisma.$transaksiPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Artikels
 * const artikels = await prisma.artikel.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Artikels
   * const artikels = await prisma.artikel.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.artikel`: Exposes CRUD operations for the **artikel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Artikels
    * const artikels = await prisma.artikel.findMany()
    * ```
    */
  get artikel(): Prisma.artikelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.artikel_comment`: Exposes CRUD operations for the **artikel_comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Artikel_comments
    * const artikel_comments = await prisma.artikel_comment.findMany()
    * ```
    */
  get artikel_comment(): Prisma.artikel_commentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.barang`: Exposes CRUD operations for the **barang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Barangs
    * const barangs = await prisma.barang.findMany()
    * ```
    */
  get barang(): Prisma.barangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kategori`: Exposes CRUD operations for the **kategori** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kategoris
    * const kategoris = await prisma.kategori.findMany()
    * ```
    */
  get kategori(): Prisma.kategoriDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.keranjang`: Exposes CRUD operations for the **keranjang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Keranjangs
    * const keranjangs = await prisma.keranjang.findMany()
    * ```
    */
  get keranjang(): Prisma.keranjangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.penalti`: Exposes CRUD operations for the **penalti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Penaltis
    * const penaltis = await prisma.penalti.findMany()
    * ```
    */
  get penalti(): Prisma.penaltiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.reviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.roleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sewa_items`: Exposes CRUD operations for the **sewa_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sewa_items
    * const sewa_items = await prisma.sewa_items.findMany()
    * ```
    */
  get sewa_items(): Prisma.sewa_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sewa_req`: Exposes CRUD operations for the **sewa_req** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sewa_reqs
    * const sewa_reqs = await prisma.sewa_req.findMany()
    * ```
    */
  get sewa_req(): Prisma.sewa_reqDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tags`: Exposes CRUD operations for the **tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tags.findMany()
    * ```
    */
  get tags(): Prisma.tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaksi`: Exposes CRUD operations for the **transaksi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaksis
    * const transaksis = await prisma.transaksi.findMany()
    * ```
    */
  get transaksi(): Prisma.transaksiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    artikel: 'artikel',
    artikel_comment: 'artikel_comment',
    barang: 'barang',
    kategori: 'kategori',
    keranjang: 'keranjang',
    penalti: 'penalti',
    review: 'review',
    role: 'role',
    sewa_items: 'sewa_items',
    sewa_req: 'sewa_req',
    tags: 'tags',
    transaksi: 'transaksi',
    user: 'user'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "artikel" | "artikel_comment" | "barang" | "kategori" | "keranjang" | "penalti" | "review" | "role" | "sewa_items" | "sewa_req" | "tags" | "transaksi" | "user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      artikel: {
        payload: Prisma.$artikelPayload<ExtArgs>
        fields: Prisma.artikelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.artikelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.artikelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          findFirst: {
            args: Prisma.artikelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.artikelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          findMany: {
            args: Prisma.artikelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>[]
          }
          create: {
            args: Prisma.artikelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          createMany: {
            args: Prisma.artikelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.artikelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          update: {
            args: Prisma.artikelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          deleteMany: {
            args: Prisma.artikelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.artikelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.artikelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikelPayload>
          }
          aggregate: {
            args: Prisma.ArtikelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArtikel>
          }
          groupBy: {
            args: Prisma.artikelGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArtikelGroupByOutputType>[]
          }
          count: {
            args: Prisma.artikelCountArgs<ExtArgs>
            result: $Utils.Optional<ArtikelCountAggregateOutputType> | number
          }
        }
      }
      artikel_comment: {
        payload: Prisma.$artikel_commentPayload<ExtArgs>
        fields: Prisma.artikel_commentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.artikel_commentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.artikel_commentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          findFirst: {
            args: Prisma.artikel_commentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.artikel_commentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          findMany: {
            args: Prisma.artikel_commentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>[]
          }
          create: {
            args: Prisma.artikel_commentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          createMany: {
            args: Prisma.artikel_commentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.artikel_commentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          update: {
            args: Prisma.artikel_commentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          deleteMany: {
            args: Prisma.artikel_commentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.artikel_commentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.artikel_commentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$artikel_commentPayload>
          }
          aggregate: {
            args: Prisma.Artikel_commentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArtikel_comment>
          }
          groupBy: {
            args: Prisma.artikel_commentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Artikel_commentGroupByOutputType>[]
          }
          count: {
            args: Prisma.artikel_commentCountArgs<ExtArgs>
            result: $Utils.Optional<Artikel_commentCountAggregateOutputType> | number
          }
        }
      }
      barang: {
        payload: Prisma.$barangPayload<ExtArgs>
        fields: Prisma.barangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.barangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.barangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          findFirst: {
            args: Prisma.barangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.barangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          findMany: {
            args: Prisma.barangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>[]
          }
          create: {
            args: Prisma.barangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          createMany: {
            args: Prisma.barangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.barangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          update: {
            args: Prisma.barangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          deleteMany: {
            args: Prisma.barangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.barangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.barangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$barangPayload>
          }
          aggregate: {
            args: Prisma.BarangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBarang>
          }
          groupBy: {
            args: Prisma.barangGroupByArgs<ExtArgs>
            result: $Utils.Optional<BarangGroupByOutputType>[]
          }
          count: {
            args: Prisma.barangCountArgs<ExtArgs>
            result: $Utils.Optional<BarangCountAggregateOutputType> | number
          }
        }
      }
      kategori: {
        payload: Prisma.$kategoriPayload<ExtArgs>
        fields: Prisma.kategoriFieldRefs
        operations: {
          findUnique: {
            args: Prisma.kategoriFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kategoriFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          findFirst: {
            args: Prisma.kategoriFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kategoriFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          findMany: {
            args: Prisma.kategoriFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>[]
          }
          create: {
            args: Prisma.kategoriCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          createMany: {
            args: Prisma.kategoriCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.kategoriDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          update: {
            args: Prisma.kategoriUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          deleteMany: {
            args: Prisma.kategoriDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.kategoriUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.kategoriUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          aggregate: {
            args: Prisma.KategoriAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKategori>
          }
          groupBy: {
            args: Prisma.kategoriGroupByArgs<ExtArgs>
            result: $Utils.Optional<KategoriGroupByOutputType>[]
          }
          count: {
            args: Prisma.kategoriCountArgs<ExtArgs>
            result: $Utils.Optional<KategoriCountAggregateOutputType> | number
          }
        }
      }
      keranjang: {
        payload: Prisma.$keranjangPayload<ExtArgs>
        fields: Prisma.keranjangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.keranjangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.keranjangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          findFirst: {
            args: Prisma.keranjangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.keranjangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          findMany: {
            args: Prisma.keranjangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>[]
          }
          create: {
            args: Prisma.keranjangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          createMany: {
            args: Prisma.keranjangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.keranjangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          update: {
            args: Prisma.keranjangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          deleteMany: {
            args: Prisma.keranjangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.keranjangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.keranjangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keranjangPayload>
          }
          aggregate: {
            args: Prisma.KeranjangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKeranjang>
          }
          groupBy: {
            args: Prisma.keranjangGroupByArgs<ExtArgs>
            result: $Utils.Optional<KeranjangGroupByOutputType>[]
          }
          count: {
            args: Prisma.keranjangCountArgs<ExtArgs>
            result: $Utils.Optional<KeranjangCountAggregateOutputType> | number
          }
        }
      }
      penalti: {
        payload: Prisma.$penaltiPayload<ExtArgs>
        fields: Prisma.penaltiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.penaltiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.penaltiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          findFirst: {
            args: Prisma.penaltiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.penaltiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          findMany: {
            args: Prisma.penaltiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>[]
          }
          create: {
            args: Prisma.penaltiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          createMany: {
            args: Prisma.penaltiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.penaltiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          update: {
            args: Prisma.penaltiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          deleteMany: {
            args: Prisma.penaltiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.penaltiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.penaltiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$penaltiPayload>
          }
          aggregate: {
            args: Prisma.PenaltiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePenalti>
          }
          groupBy: {
            args: Prisma.penaltiGroupByArgs<ExtArgs>
            result: $Utils.Optional<PenaltiGroupByOutputType>[]
          }
          count: {
            args: Prisma.penaltiCountArgs<ExtArgs>
            result: $Utils.Optional<PenaltiCountAggregateOutputType> | number
          }
        }
      }
      review: {
        payload: Prisma.$reviewPayload<ExtArgs>
        fields: Prisma.reviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          findFirst: {
            args: Prisma.reviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          findMany: {
            args: Prisma.reviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>[]
          }
          create: {
            args: Prisma.reviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          createMany: {
            args: Prisma.reviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          update: {
            args: Prisma.reviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          deleteMany: {
            args: Prisma.reviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.reviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.reviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      role: {
        payload: Prisma.$rolePayload<ExtArgs>
        fields: Prisma.roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.roleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.roleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findFirst: {
            args: Prisma.roleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.roleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          findMany: {
            args: Prisma.roleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>[]
          }
          create: {
            args: Prisma.roleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          createMany: {
            args: Prisma.roleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.roleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          update: {
            args: Prisma.roleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          deleteMany: {
            args: Prisma.roleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.roleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.roleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.roleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.roleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      sewa_items: {
        payload: Prisma.$sewa_itemsPayload<ExtArgs>
        fields: Prisma.sewa_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sewa_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sewa_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          findFirst: {
            args: Prisma.sewa_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sewa_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          findMany: {
            args: Prisma.sewa_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>[]
          }
          create: {
            args: Prisma.sewa_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          createMany: {
            args: Prisma.sewa_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sewa_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          update: {
            args: Prisma.sewa_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          deleteMany: {
            args: Prisma.sewa_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sewa_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sewa_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_itemsPayload>
          }
          aggregate: {
            args: Prisma.Sewa_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSewa_items>
          }
          groupBy: {
            args: Prisma.sewa_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sewa_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sewa_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Sewa_itemsCountAggregateOutputType> | number
          }
        }
      }
      sewa_req: {
        payload: Prisma.$sewa_reqPayload<ExtArgs>
        fields: Prisma.sewa_reqFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sewa_reqFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sewa_reqFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          findFirst: {
            args: Prisma.sewa_reqFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sewa_reqFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          findMany: {
            args: Prisma.sewa_reqFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>[]
          }
          create: {
            args: Prisma.sewa_reqCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          createMany: {
            args: Prisma.sewa_reqCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sewa_reqDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          update: {
            args: Prisma.sewa_reqUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          deleteMany: {
            args: Prisma.sewa_reqDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sewa_reqUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sewa_reqUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sewa_reqPayload>
          }
          aggregate: {
            args: Prisma.Sewa_reqAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSewa_req>
          }
          groupBy: {
            args: Prisma.sewa_reqGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sewa_reqGroupByOutputType>[]
          }
          count: {
            args: Prisma.sewa_reqCountArgs<ExtArgs>
            result: $Utils.Optional<Sewa_reqCountAggregateOutputType> | number
          }
        }
      }
      tags: {
        payload: Prisma.$tagsPayload<ExtArgs>
        fields: Prisma.tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findFirst: {
            args: Prisma.tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findMany: {
            args: Prisma.tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          create: {
            args: Prisma.tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          createMany: {
            args: Prisma.tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          update: {
            args: Prisma.tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          deleteMany: {
            args: Prisma.tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          aggregate: {
            args: Prisma.TagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTags>
          }
          groupBy: {
            args: Prisma.tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tagsCountArgs<ExtArgs>
            result: $Utils.Optional<TagsCountAggregateOutputType> | number
          }
        }
      }
      transaksi: {
        payload: Prisma.$transaksiPayload<ExtArgs>
        fields: Prisma.transaksiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transaksiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transaksiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          findFirst: {
            args: Prisma.transaksiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transaksiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          findMany: {
            args: Prisma.transaksiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>[]
          }
          create: {
            args: Prisma.transaksiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          createMany: {
            args: Prisma.transaksiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.transaksiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          update: {
            args: Prisma.transaksiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          deleteMany: {
            args: Prisma.transaksiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transaksiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.transaksiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          aggregate: {
            args: Prisma.TransaksiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaksi>
          }
          groupBy: {
            args: Prisma.transaksiGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaksiGroupByOutputType>[]
          }
          count: {
            args: Prisma.transaksiCountArgs<ExtArgs>
            result: $Utils.Optional<TransaksiCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    artikel?: artikelOmit
    artikel_comment?: artikel_commentOmit
    barang?: barangOmit
    kategori?: kategoriOmit
    keranjang?: keranjangOmit
    penalti?: penaltiOmit
    review?: reviewOmit
    role?: roleOmit
    sewa_items?: sewa_itemsOmit
    sewa_req?: sewa_reqOmit
    tags?: tagsOmit
    transaksi?: transaksiOmit
    user?: userOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ArtikelCountOutputType
   */

  export type ArtikelCountOutputType = {
    artikel_comment: number
  }

  export type ArtikelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel_comment?: boolean | ArtikelCountOutputTypeCountArtikel_commentArgs
  }

  // Custom InputTypes
  /**
   * ArtikelCountOutputType without action
   */
  export type ArtikelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArtikelCountOutputType
     */
    select?: ArtikelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ArtikelCountOutputType without action
   */
  export type ArtikelCountOutputTypeCountArtikel_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: artikel_commentWhereInput
  }


  /**
   * Count Type BarangCountOutputType
   */

  export type BarangCountOutputType = {
    keranjang: number
    penalti: number
    review: number
    sewa_items: number
  }

  export type BarangCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keranjang?: boolean | BarangCountOutputTypeCountKeranjangArgs
    penalti?: boolean | BarangCountOutputTypeCountPenaltiArgs
    review?: boolean | BarangCountOutputTypeCountReviewArgs
    sewa_items?: boolean | BarangCountOutputTypeCountSewa_itemsArgs
  }

  // Custom InputTypes
  /**
   * BarangCountOutputType without action
   */
  export type BarangCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarangCountOutputType
     */
    select?: BarangCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BarangCountOutputType without action
   */
  export type BarangCountOutputTypeCountKeranjangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: keranjangWhereInput
  }

  /**
   * BarangCountOutputType without action
   */
  export type BarangCountOutputTypeCountPenaltiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: penaltiWhereInput
  }

  /**
   * BarangCountOutputType without action
   */
  export type BarangCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewWhereInput
  }

  /**
   * BarangCountOutputType without action
   */
  export type BarangCountOutputTypeCountSewa_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sewa_itemsWhereInput
  }


  /**
   * Count Type KategoriCountOutputType
   */

  export type KategoriCountOutputType = {
    barang: number
  }

  export type KategoriCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | KategoriCountOutputTypeCountBarangArgs
  }

  // Custom InputTypes
  /**
   * KategoriCountOutputType without action
   */
  export type KategoriCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KategoriCountOutputType
     */
    select?: KategoriCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KategoriCountOutputType without action
   */
  export type KategoriCountOutputTypeCountBarangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: barangWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    user: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | RoleCountOutputTypeCountUserArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
  }


  /**
   * Count Type Sewa_reqCountOutputType
   */

  export type Sewa_reqCountOutputType = {
    sewa_items: number
  }

  export type Sewa_reqCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sewa_items?: boolean | Sewa_reqCountOutputTypeCountSewa_itemsArgs
  }

  // Custom InputTypes
  /**
   * Sewa_reqCountOutputType without action
   */
  export type Sewa_reqCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sewa_reqCountOutputType
     */
    select?: Sewa_reqCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Sewa_reqCountOutputType without action
   */
  export type Sewa_reqCountOutputTypeCountSewa_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sewa_itemsWhereInput
  }


  /**
   * Count Type TagsCountOutputType
   */

  export type TagsCountOutputType = {
    artikel: number
  }

  export type TagsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel?: boolean | TagsCountOutputTypeCountArtikelArgs
  }

  // Custom InputTypes
  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagsCountOutputType
     */
    select?: TagsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountArtikelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: artikelWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    artikel_comment: number
    keranjang: number
    penalti: number
    review: number
    sewa_req: number
    transaksi: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel_comment?: boolean | UserCountOutputTypeCountArtikel_commentArgs
    keranjang?: boolean | UserCountOutputTypeCountKeranjangArgs
    penalti?: boolean | UserCountOutputTypeCountPenaltiArgs
    review?: boolean | UserCountOutputTypeCountReviewArgs
    sewa_req?: boolean | UserCountOutputTypeCountSewa_reqArgs
    transaksi?: boolean | UserCountOutputTypeCountTransaksiArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountArtikel_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: artikel_commentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountKeranjangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: keranjangWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPenaltiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: penaltiWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSewa_reqArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sewa_reqWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
  }


  /**
   * Models
   */

  /**
   * Model artikel
   */

  export type AggregateArtikel = {
    _count: ArtikelCountAggregateOutputType | null
    _avg: ArtikelAvgAggregateOutputType | null
    _sum: ArtikelSumAggregateOutputType | null
    _min: ArtikelMinAggregateOutputType | null
    _max: ArtikelMaxAggregateOutputType | null
  }

  export type ArtikelAvgAggregateOutputType = {
    id: number | null
    id_tags: number | null
  }

  export type ArtikelSumAggregateOutputType = {
    id: number | null
    id_tags: number | null
  }

  export type ArtikelMinAggregateOutputType = {
    id: number | null
    judul: string | null
    konten: string | null
    foto: string | null
    id_tags: number | null
    createdAt: Date | null
    is_deleted: boolean | null
    is_published: boolean | null
    publishAt: Date | null
    updatedAt: Date | null
  }

  export type ArtikelMaxAggregateOutputType = {
    id: number | null
    judul: string | null
    konten: string | null
    foto: string | null
    id_tags: number | null
    createdAt: Date | null
    is_deleted: boolean | null
    is_published: boolean | null
    publishAt: Date | null
    updatedAt: Date | null
  }

  export type ArtikelCountAggregateOutputType = {
    id: number
    judul: number
    konten: number
    foto: number
    id_tags: number
    createdAt: number
    is_deleted: number
    is_published: number
    publishAt: number
    updatedAt: number
    _all: number
  }


  export type ArtikelAvgAggregateInputType = {
    id?: true
    id_tags?: true
  }

  export type ArtikelSumAggregateInputType = {
    id?: true
    id_tags?: true
  }

  export type ArtikelMinAggregateInputType = {
    id?: true
    judul?: true
    konten?: true
    foto?: true
    id_tags?: true
    createdAt?: true
    is_deleted?: true
    is_published?: true
    publishAt?: true
    updatedAt?: true
  }

  export type ArtikelMaxAggregateInputType = {
    id?: true
    judul?: true
    konten?: true
    foto?: true
    id_tags?: true
    createdAt?: true
    is_deleted?: true
    is_published?: true
    publishAt?: true
    updatedAt?: true
  }

  export type ArtikelCountAggregateInputType = {
    id?: true
    judul?: true
    konten?: true
    foto?: true
    id_tags?: true
    createdAt?: true
    is_deleted?: true
    is_published?: true
    publishAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ArtikelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which artikel to aggregate.
     */
    where?: artikelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikels to fetch.
     */
    orderBy?: artikelOrderByWithRelationInput | artikelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: artikelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned artikels
    **/
    _count?: true | ArtikelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArtikelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArtikelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArtikelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArtikelMaxAggregateInputType
  }

  export type GetArtikelAggregateType<T extends ArtikelAggregateArgs> = {
        [P in keyof T & keyof AggregateArtikel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArtikel[P]>
      : GetScalarType<T[P], AggregateArtikel[P]>
  }




  export type artikelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: artikelWhereInput
    orderBy?: artikelOrderByWithAggregationInput | artikelOrderByWithAggregationInput[]
    by: ArtikelScalarFieldEnum[] | ArtikelScalarFieldEnum
    having?: artikelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArtikelCountAggregateInputType | true
    _avg?: ArtikelAvgAggregateInputType
    _sum?: ArtikelSumAggregateInputType
    _min?: ArtikelMinAggregateInputType
    _max?: ArtikelMaxAggregateInputType
  }

  export type ArtikelGroupByOutputType = {
    id: number
    judul: string
    konten: string
    foto: string
    id_tags: number
    createdAt: Date
    is_deleted: boolean
    is_published: boolean
    publishAt: Date
    updatedAt: Date | null
    _count: ArtikelCountAggregateOutputType | null
    _avg: ArtikelAvgAggregateOutputType | null
    _sum: ArtikelSumAggregateOutputType | null
    _min: ArtikelMinAggregateOutputType | null
    _max: ArtikelMaxAggregateOutputType | null
  }

  type GetArtikelGroupByPayload<T extends artikelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArtikelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArtikelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArtikelGroupByOutputType[P]>
            : GetScalarType<T[P], ArtikelGroupByOutputType[P]>
        }
      >
    >


  export type artikelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    judul?: boolean
    konten?: boolean
    foto?: boolean
    id_tags?: boolean
    createdAt?: boolean
    is_deleted?: boolean
    is_published?: boolean
    publishAt?: boolean
    updatedAt?: boolean
    tags?: boolean | tagsDefaultArgs<ExtArgs>
    artikel_comment?: boolean | artikel$artikel_commentArgs<ExtArgs>
    _count?: boolean | ArtikelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["artikel"]>



  export type artikelSelectScalar = {
    id?: boolean
    judul?: boolean
    konten?: boolean
    foto?: boolean
    id_tags?: boolean
    createdAt?: boolean
    is_deleted?: boolean
    is_published?: boolean
    publishAt?: boolean
    updatedAt?: boolean
  }

  export type artikelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "judul" | "konten" | "foto" | "id_tags" | "createdAt" | "is_deleted" | "is_published" | "publishAt" | "updatedAt", ExtArgs["result"]["artikel"]>
  export type artikelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | tagsDefaultArgs<ExtArgs>
    artikel_comment?: boolean | artikel$artikel_commentArgs<ExtArgs>
    _count?: boolean | ArtikelCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $artikelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "artikel"
    objects: {
      tags: Prisma.$tagsPayload<ExtArgs>
      artikel_comment: Prisma.$artikel_commentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      judul: string
      konten: string
      foto: string
      id_tags: number
      createdAt: Date
      is_deleted: boolean
      is_published: boolean
      publishAt: Date
      updatedAt: Date | null
    }, ExtArgs["result"]["artikel"]>
    composites: {}
  }

  type artikelGetPayload<S extends boolean | null | undefined | artikelDefaultArgs> = $Result.GetResult<Prisma.$artikelPayload, S>

  type artikelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<artikelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArtikelCountAggregateInputType | true
    }

  export interface artikelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['artikel'], meta: { name: 'artikel' } }
    /**
     * Find zero or one Artikel that matches the filter.
     * @param {artikelFindUniqueArgs} args - Arguments to find a Artikel
     * @example
     * // Get one Artikel
     * const artikel = await prisma.artikel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends artikelFindUniqueArgs>(args: SelectSubset<T, artikelFindUniqueArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Artikel that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {artikelFindUniqueOrThrowArgs} args - Arguments to find a Artikel
     * @example
     * // Get one Artikel
     * const artikel = await prisma.artikel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends artikelFindUniqueOrThrowArgs>(args: SelectSubset<T, artikelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Artikel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelFindFirstArgs} args - Arguments to find a Artikel
     * @example
     * // Get one Artikel
     * const artikel = await prisma.artikel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends artikelFindFirstArgs>(args?: SelectSubset<T, artikelFindFirstArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Artikel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelFindFirstOrThrowArgs} args - Arguments to find a Artikel
     * @example
     * // Get one Artikel
     * const artikel = await prisma.artikel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends artikelFindFirstOrThrowArgs>(args?: SelectSubset<T, artikelFindFirstOrThrowArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Artikels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Artikels
     * const artikels = await prisma.artikel.findMany()
     * 
     * // Get first 10 Artikels
     * const artikels = await prisma.artikel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const artikelWithIdOnly = await prisma.artikel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends artikelFindManyArgs>(args?: SelectSubset<T, artikelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Artikel.
     * @param {artikelCreateArgs} args - Arguments to create a Artikel.
     * @example
     * // Create one Artikel
     * const Artikel = await prisma.artikel.create({
     *   data: {
     *     // ... data to create a Artikel
     *   }
     * })
     * 
     */
    create<T extends artikelCreateArgs>(args: SelectSubset<T, artikelCreateArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Artikels.
     * @param {artikelCreateManyArgs} args - Arguments to create many Artikels.
     * @example
     * // Create many Artikels
     * const artikel = await prisma.artikel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends artikelCreateManyArgs>(args?: SelectSubset<T, artikelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Artikel.
     * @param {artikelDeleteArgs} args - Arguments to delete one Artikel.
     * @example
     * // Delete one Artikel
     * const Artikel = await prisma.artikel.delete({
     *   where: {
     *     // ... filter to delete one Artikel
     *   }
     * })
     * 
     */
    delete<T extends artikelDeleteArgs>(args: SelectSubset<T, artikelDeleteArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Artikel.
     * @param {artikelUpdateArgs} args - Arguments to update one Artikel.
     * @example
     * // Update one Artikel
     * const artikel = await prisma.artikel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends artikelUpdateArgs>(args: SelectSubset<T, artikelUpdateArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Artikels.
     * @param {artikelDeleteManyArgs} args - Arguments to filter Artikels to delete.
     * @example
     * // Delete a few Artikels
     * const { count } = await prisma.artikel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends artikelDeleteManyArgs>(args?: SelectSubset<T, artikelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Artikels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Artikels
     * const artikel = await prisma.artikel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends artikelUpdateManyArgs>(args: SelectSubset<T, artikelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Artikel.
     * @param {artikelUpsertArgs} args - Arguments to update or create a Artikel.
     * @example
     * // Update or create a Artikel
     * const artikel = await prisma.artikel.upsert({
     *   create: {
     *     // ... data to create a Artikel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Artikel we want to update
     *   }
     * })
     */
    upsert<T extends artikelUpsertArgs>(args: SelectSubset<T, artikelUpsertArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Artikels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelCountArgs} args - Arguments to filter Artikels to count.
     * @example
     * // Count the number of Artikels
     * const count = await prisma.artikel.count({
     *   where: {
     *     // ... the filter for the Artikels we want to count
     *   }
     * })
    **/
    count<T extends artikelCountArgs>(
      args?: Subset<T, artikelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArtikelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Artikel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArtikelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArtikelAggregateArgs>(args: Subset<T, ArtikelAggregateArgs>): Prisma.PrismaPromise<GetArtikelAggregateType<T>>

    /**
     * Group by Artikel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends artikelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: artikelGroupByArgs['orderBy'] }
        : { orderBy?: artikelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, artikelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArtikelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the artikel model
   */
  readonly fields: artikelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for artikel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__artikelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tags<T extends tagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagsDefaultArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    artikel_comment<T extends artikel$artikel_commentArgs<ExtArgs> = {}>(args?: Subset<T, artikel$artikel_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the artikel model
   */
  interface artikelFieldRefs {
    readonly id: FieldRef<"artikel", 'Int'>
    readonly judul: FieldRef<"artikel", 'String'>
    readonly konten: FieldRef<"artikel", 'String'>
    readonly foto: FieldRef<"artikel", 'String'>
    readonly id_tags: FieldRef<"artikel", 'Int'>
    readonly createdAt: FieldRef<"artikel", 'DateTime'>
    readonly is_deleted: FieldRef<"artikel", 'Boolean'>
    readonly is_published: FieldRef<"artikel", 'Boolean'>
    readonly publishAt: FieldRef<"artikel", 'DateTime'>
    readonly updatedAt: FieldRef<"artikel", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * artikel findUnique
   */
  export type artikelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter, which artikel to fetch.
     */
    where: artikelWhereUniqueInput
  }

  /**
   * artikel findUniqueOrThrow
   */
  export type artikelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter, which artikel to fetch.
     */
    where: artikelWhereUniqueInput
  }

  /**
   * artikel findFirst
   */
  export type artikelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter, which artikel to fetch.
     */
    where?: artikelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikels to fetch.
     */
    orderBy?: artikelOrderByWithRelationInput | artikelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for artikels.
     */
    cursor?: artikelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of artikels.
     */
    distinct?: ArtikelScalarFieldEnum | ArtikelScalarFieldEnum[]
  }

  /**
   * artikel findFirstOrThrow
   */
  export type artikelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter, which artikel to fetch.
     */
    where?: artikelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikels to fetch.
     */
    orderBy?: artikelOrderByWithRelationInput | artikelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for artikels.
     */
    cursor?: artikelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of artikels.
     */
    distinct?: ArtikelScalarFieldEnum | ArtikelScalarFieldEnum[]
  }

  /**
   * artikel findMany
   */
  export type artikelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter, which artikels to fetch.
     */
    where?: artikelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikels to fetch.
     */
    orderBy?: artikelOrderByWithRelationInput | artikelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing artikels.
     */
    cursor?: artikelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikels.
     */
    skip?: number
    distinct?: ArtikelScalarFieldEnum | ArtikelScalarFieldEnum[]
  }

  /**
   * artikel create
   */
  export type artikelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * The data needed to create a artikel.
     */
    data: XOR<artikelCreateInput, artikelUncheckedCreateInput>
  }

  /**
   * artikel createMany
   */
  export type artikelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many artikels.
     */
    data: artikelCreateManyInput | artikelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * artikel update
   */
  export type artikelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * The data needed to update a artikel.
     */
    data: XOR<artikelUpdateInput, artikelUncheckedUpdateInput>
    /**
     * Choose, which artikel to update.
     */
    where: artikelWhereUniqueInput
  }

  /**
   * artikel updateMany
   */
  export type artikelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update artikels.
     */
    data: XOR<artikelUpdateManyMutationInput, artikelUncheckedUpdateManyInput>
    /**
     * Filter which artikels to update
     */
    where?: artikelWhereInput
    /**
     * Limit how many artikels to update.
     */
    limit?: number
  }

  /**
   * artikel upsert
   */
  export type artikelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * The filter to search for the artikel to update in case it exists.
     */
    where: artikelWhereUniqueInput
    /**
     * In case the artikel found by the `where` argument doesn't exist, create a new artikel with this data.
     */
    create: XOR<artikelCreateInput, artikelUncheckedCreateInput>
    /**
     * In case the artikel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<artikelUpdateInput, artikelUncheckedUpdateInput>
  }

  /**
   * artikel delete
   */
  export type artikelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    /**
     * Filter which artikel to delete.
     */
    where: artikelWhereUniqueInput
  }

  /**
   * artikel deleteMany
   */
  export type artikelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which artikels to delete
     */
    where?: artikelWhereInput
    /**
     * Limit how many artikels to delete.
     */
    limit?: number
  }

  /**
   * artikel.artikel_comment
   */
  export type artikel$artikel_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    where?: artikel_commentWhereInput
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    cursor?: artikel_commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Artikel_commentScalarFieldEnum | Artikel_commentScalarFieldEnum[]
  }

  /**
   * artikel without action
   */
  export type artikelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
  }


  /**
   * Model artikel_comment
   */

  export type AggregateArtikel_comment = {
    _count: Artikel_commentCountAggregateOutputType | null
    _avg: Artikel_commentAvgAggregateOutputType | null
    _sum: Artikel_commentSumAggregateOutputType | null
    _min: Artikel_commentMinAggregateOutputType | null
    _max: Artikel_commentMaxAggregateOutputType | null
  }

  export type Artikel_commentAvgAggregateOutputType = {
    id: number | null
    id_artikel: number | null
    id_user: number | null
  }

  export type Artikel_commentSumAggregateOutputType = {
    id: number | null
    id_artikel: number | null
    id_user: number | null
  }

  export type Artikel_commentMinAggregateOutputType = {
    id: number | null
    id_artikel: number | null
    id_user: number | null
    komen_teks: string | null
  }

  export type Artikel_commentMaxAggregateOutputType = {
    id: number | null
    id_artikel: number | null
    id_user: number | null
    komen_teks: string | null
  }

  export type Artikel_commentCountAggregateOutputType = {
    id: number
    id_artikel: number
    id_user: number
    komen_teks: number
    _all: number
  }


  export type Artikel_commentAvgAggregateInputType = {
    id?: true
    id_artikel?: true
    id_user?: true
  }

  export type Artikel_commentSumAggregateInputType = {
    id?: true
    id_artikel?: true
    id_user?: true
  }

  export type Artikel_commentMinAggregateInputType = {
    id?: true
    id_artikel?: true
    id_user?: true
    komen_teks?: true
  }

  export type Artikel_commentMaxAggregateInputType = {
    id?: true
    id_artikel?: true
    id_user?: true
    komen_teks?: true
  }

  export type Artikel_commentCountAggregateInputType = {
    id?: true
    id_artikel?: true
    id_user?: true
    komen_teks?: true
    _all?: true
  }

  export type Artikel_commentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which artikel_comment to aggregate.
     */
    where?: artikel_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikel_comments to fetch.
     */
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: artikel_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikel_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikel_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned artikel_comments
    **/
    _count?: true | Artikel_commentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Artikel_commentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Artikel_commentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Artikel_commentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Artikel_commentMaxAggregateInputType
  }

  export type GetArtikel_commentAggregateType<T extends Artikel_commentAggregateArgs> = {
        [P in keyof T & keyof AggregateArtikel_comment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArtikel_comment[P]>
      : GetScalarType<T[P], AggregateArtikel_comment[P]>
  }




  export type artikel_commentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: artikel_commentWhereInput
    orderBy?: artikel_commentOrderByWithAggregationInput | artikel_commentOrderByWithAggregationInput[]
    by: Artikel_commentScalarFieldEnum[] | Artikel_commentScalarFieldEnum
    having?: artikel_commentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Artikel_commentCountAggregateInputType | true
    _avg?: Artikel_commentAvgAggregateInputType
    _sum?: Artikel_commentSumAggregateInputType
    _min?: Artikel_commentMinAggregateInputType
    _max?: Artikel_commentMaxAggregateInputType
  }

  export type Artikel_commentGroupByOutputType = {
    id: number
    id_artikel: number
    id_user: number
    komen_teks: string
    _count: Artikel_commentCountAggregateOutputType | null
    _avg: Artikel_commentAvgAggregateOutputType | null
    _sum: Artikel_commentSumAggregateOutputType | null
    _min: Artikel_commentMinAggregateOutputType | null
    _max: Artikel_commentMaxAggregateOutputType | null
  }

  type GetArtikel_commentGroupByPayload<T extends artikel_commentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Artikel_commentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Artikel_commentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Artikel_commentGroupByOutputType[P]>
            : GetScalarType<T[P], Artikel_commentGroupByOutputType[P]>
        }
      >
    >


  export type artikel_commentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_artikel?: boolean
    id_user?: boolean
    komen_teks?: boolean
    artikel?: boolean | artikelDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["artikel_comment"]>



  export type artikel_commentSelectScalar = {
    id?: boolean
    id_artikel?: boolean
    id_user?: boolean
    komen_teks?: boolean
  }

  export type artikel_commentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_artikel" | "id_user" | "komen_teks", ExtArgs["result"]["artikel_comment"]>
  export type artikel_commentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel?: boolean | artikelDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $artikel_commentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "artikel_comment"
    objects: {
      artikel: Prisma.$artikelPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_artikel: number
      id_user: number
      komen_teks: string
    }, ExtArgs["result"]["artikel_comment"]>
    composites: {}
  }

  type artikel_commentGetPayload<S extends boolean | null | undefined | artikel_commentDefaultArgs> = $Result.GetResult<Prisma.$artikel_commentPayload, S>

  type artikel_commentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<artikel_commentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Artikel_commentCountAggregateInputType | true
    }

  export interface artikel_commentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['artikel_comment'], meta: { name: 'artikel_comment' } }
    /**
     * Find zero or one Artikel_comment that matches the filter.
     * @param {artikel_commentFindUniqueArgs} args - Arguments to find a Artikel_comment
     * @example
     * // Get one Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends artikel_commentFindUniqueArgs>(args: SelectSubset<T, artikel_commentFindUniqueArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Artikel_comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {artikel_commentFindUniqueOrThrowArgs} args - Arguments to find a Artikel_comment
     * @example
     * // Get one Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends artikel_commentFindUniqueOrThrowArgs>(args: SelectSubset<T, artikel_commentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Artikel_comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentFindFirstArgs} args - Arguments to find a Artikel_comment
     * @example
     * // Get one Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends artikel_commentFindFirstArgs>(args?: SelectSubset<T, artikel_commentFindFirstArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Artikel_comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentFindFirstOrThrowArgs} args - Arguments to find a Artikel_comment
     * @example
     * // Get one Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends artikel_commentFindFirstOrThrowArgs>(args?: SelectSubset<T, artikel_commentFindFirstOrThrowArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Artikel_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Artikel_comments
     * const artikel_comments = await prisma.artikel_comment.findMany()
     * 
     * // Get first 10 Artikel_comments
     * const artikel_comments = await prisma.artikel_comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const artikel_commentWithIdOnly = await prisma.artikel_comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends artikel_commentFindManyArgs>(args?: SelectSubset<T, artikel_commentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Artikel_comment.
     * @param {artikel_commentCreateArgs} args - Arguments to create a Artikel_comment.
     * @example
     * // Create one Artikel_comment
     * const Artikel_comment = await prisma.artikel_comment.create({
     *   data: {
     *     // ... data to create a Artikel_comment
     *   }
     * })
     * 
     */
    create<T extends artikel_commentCreateArgs>(args: SelectSubset<T, artikel_commentCreateArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Artikel_comments.
     * @param {artikel_commentCreateManyArgs} args - Arguments to create many Artikel_comments.
     * @example
     * // Create many Artikel_comments
     * const artikel_comment = await prisma.artikel_comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends artikel_commentCreateManyArgs>(args?: SelectSubset<T, artikel_commentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Artikel_comment.
     * @param {artikel_commentDeleteArgs} args - Arguments to delete one Artikel_comment.
     * @example
     * // Delete one Artikel_comment
     * const Artikel_comment = await prisma.artikel_comment.delete({
     *   where: {
     *     // ... filter to delete one Artikel_comment
     *   }
     * })
     * 
     */
    delete<T extends artikel_commentDeleteArgs>(args: SelectSubset<T, artikel_commentDeleteArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Artikel_comment.
     * @param {artikel_commentUpdateArgs} args - Arguments to update one Artikel_comment.
     * @example
     * // Update one Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends artikel_commentUpdateArgs>(args: SelectSubset<T, artikel_commentUpdateArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Artikel_comments.
     * @param {artikel_commentDeleteManyArgs} args - Arguments to filter Artikel_comments to delete.
     * @example
     * // Delete a few Artikel_comments
     * const { count } = await prisma.artikel_comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends artikel_commentDeleteManyArgs>(args?: SelectSubset<T, artikel_commentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Artikel_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Artikel_comments
     * const artikel_comment = await prisma.artikel_comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends artikel_commentUpdateManyArgs>(args: SelectSubset<T, artikel_commentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Artikel_comment.
     * @param {artikel_commentUpsertArgs} args - Arguments to update or create a Artikel_comment.
     * @example
     * // Update or create a Artikel_comment
     * const artikel_comment = await prisma.artikel_comment.upsert({
     *   create: {
     *     // ... data to create a Artikel_comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Artikel_comment we want to update
     *   }
     * })
     */
    upsert<T extends artikel_commentUpsertArgs>(args: SelectSubset<T, artikel_commentUpsertArgs<ExtArgs>>): Prisma__artikel_commentClient<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Artikel_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentCountArgs} args - Arguments to filter Artikel_comments to count.
     * @example
     * // Count the number of Artikel_comments
     * const count = await prisma.artikel_comment.count({
     *   where: {
     *     // ... the filter for the Artikel_comments we want to count
     *   }
     * })
    **/
    count<T extends artikel_commentCountArgs>(
      args?: Subset<T, artikel_commentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Artikel_commentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Artikel_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Artikel_commentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Artikel_commentAggregateArgs>(args: Subset<T, Artikel_commentAggregateArgs>): Prisma.PrismaPromise<GetArtikel_commentAggregateType<T>>

    /**
     * Group by Artikel_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {artikel_commentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends artikel_commentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: artikel_commentGroupByArgs['orderBy'] }
        : { orderBy?: artikel_commentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, artikel_commentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArtikel_commentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the artikel_comment model
   */
  readonly fields: artikel_commentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for artikel_comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__artikel_commentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    artikel<T extends artikelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, artikelDefaultArgs<ExtArgs>>): Prisma__artikelClient<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the artikel_comment model
   */
  interface artikel_commentFieldRefs {
    readonly id: FieldRef<"artikel_comment", 'Int'>
    readonly id_artikel: FieldRef<"artikel_comment", 'Int'>
    readonly id_user: FieldRef<"artikel_comment", 'Int'>
    readonly komen_teks: FieldRef<"artikel_comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * artikel_comment findUnique
   */
  export type artikel_commentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter, which artikel_comment to fetch.
     */
    where: artikel_commentWhereUniqueInput
  }

  /**
   * artikel_comment findUniqueOrThrow
   */
  export type artikel_commentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter, which artikel_comment to fetch.
     */
    where: artikel_commentWhereUniqueInput
  }

  /**
   * artikel_comment findFirst
   */
  export type artikel_commentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter, which artikel_comment to fetch.
     */
    where?: artikel_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikel_comments to fetch.
     */
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for artikel_comments.
     */
    cursor?: artikel_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikel_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikel_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of artikel_comments.
     */
    distinct?: Artikel_commentScalarFieldEnum | Artikel_commentScalarFieldEnum[]
  }

  /**
   * artikel_comment findFirstOrThrow
   */
  export type artikel_commentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter, which artikel_comment to fetch.
     */
    where?: artikel_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikel_comments to fetch.
     */
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for artikel_comments.
     */
    cursor?: artikel_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikel_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikel_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of artikel_comments.
     */
    distinct?: Artikel_commentScalarFieldEnum | Artikel_commentScalarFieldEnum[]
  }

  /**
   * artikel_comment findMany
   */
  export type artikel_commentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter, which artikel_comments to fetch.
     */
    where?: artikel_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of artikel_comments to fetch.
     */
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing artikel_comments.
     */
    cursor?: artikel_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` artikel_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` artikel_comments.
     */
    skip?: number
    distinct?: Artikel_commentScalarFieldEnum | Artikel_commentScalarFieldEnum[]
  }

  /**
   * artikel_comment create
   */
  export type artikel_commentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * The data needed to create a artikel_comment.
     */
    data: XOR<artikel_commentCreateInput, artikel_commentUncheckedCreateInput>
  }

  /**
   * artikel_comment createMany
   */
  export type artikel_commentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many artikel_comments.
     */
    data: artikel_commentCreateManyInput | artikel_commentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * artikel_comment update
   */
  export type artikel_commentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * The data needed to update a artikel_comment.
     */
    data: XOR<artikel_commentUpdateInput, artikel_commentUncheckedUpdateInput>
    /**
     * Choose, which artikel_comment to update.
     */
    where: artikel_commentWhereUniqueInput
  }

  /**
   * artikel_comment updateMany
   */
  export type artikel_commentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update artikel_comments.
     */
    data: XOR<artikel_commentUpdateManyMutationInput, artikel_commentUncheckedUpdateManyInput>
    /**
     * Filter which artikel_comments to update
     */
    where?: artikel_commentWhereInput
    /**
     * Limit how many artikel_comments to update.
     */
    limit?: number
  }

  /**
   * artikel_comment upsert
   */
  export type artikel_commentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * The filter to search for the artikel_comment to update in case it exists.
     */
    where: artikel_commentWhereUniqueInput
    /**
     * In case the artikel_comment found by the `where` argument doesn't exist, create a new artikel_comment with this data.
     */
    create: XOR<artikel_commentCreateInput, artikel_commentUncheckedCreateInput>
    /**
     * In case the artikel_comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<artikel_commentUpdateInput, artikel_commentUncheckedUpdateInput>
  }

  /**
   * artikel_comment delete
   */
  export type artikel_commentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    /**
     * Filter which artikel_comment to delete.
     */
    where: artikel_commentWhereUniqueInput
  }

  /**
   * artikel_comment deleteMany
   */
  export type artikel_commentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which artikel_comments to delete
     */
    where?: artikel_commentWhereInput
    /**
     * Limit how many artikel_comments to delete.
     */
    limit?: number
  }

  /**
   * artikel_comment without action
   */
  export type artikel_commentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
  }


  /**
   * Model barang
   */

  export type AggregateBarang = {
    _count: BarangCountAggregateOutputType | null
    _avg: BarangAvgAggregateOutputType | null
    _sum: BarangSumAggregateOutputType | null
    _min: BarangMinAggregateOutputType | null
    _max: BarangMaxAggregateOutputType | null
  }

  export type BarangAvgAggregateOutputType = {
    id: number | null
    stok: number | null
    harga_pinalti_per_jam: number | null
    kategori_id: number | null
    harga: number | null
  }

  export type BarangSumAggregateOutputType = {
    id: number | null
    stok: number | null
    harga_pinalti_per_jam: number | null
    kategori_id: number | null
    harga: number | null
  }

  export type BarangMinAggregateOutputType = {
    id: number | null
    stok: number | null
    foto: string | null
    harga_pinalti_per_jam: number | null
    kategori_id: number | null
    harga: number | null
    nama: string | null
  }

  export type BarangMaxAggregateOutputType = {
    id: number | null
    stok: number | null
    foto: string | null
    harga_pinalti_per_jam: number | null
    kategori_id: number | null
    harga: number | null
    nama: string | null
  }

  export type BarangCountAggregateOutputType = {
    id: number
    stok: number
    foto: number
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: number
    _all: number
  }


  export type BarangAvgAggregateInputType = {
    id?: true
    stok?: true
    harga_pinalti_per_jam?: true
    kategori_id?: true
    harga?: true
  }

  export type BarangSumAggregateInputType = {
    id?: true
    stok?: true
    harga_pinalti_per_jam?: true
    kategori_id?: true
    harga?: true
  }

  export type BarangMinAggregateInputType = {
    id?: true
    stok?: true
    foto?: true
    harga_pinalti_per_jam?: true
    kategori_id?: true
    harga?: true
    nama?: true
  }

  export type BarangMaxAggregateInputType = {
    id?: true
    stok?: true
    foto?: true
    harga_pinalti_per_jam?: true
    kategori_id?: true
    harga?: true
    nama?: true
  }

  export type BarangCountAggregateInputType = {
    id?: true
    stok?: true
    foto?: true
    harga_pinalti_per_jam?: true
    kategori_id?: true
    harga?: true
    nama?: true
    _all?: true
  }

  export type BarangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which barang to aggregate.
     */
    where?: barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of barangs to fetch.
     */
    orderBy?: barangOrderByWithRelationInput | barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned barangs
    **/
    _count?: true | BarangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BarangAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BarangSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BarangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BarangMaxAggregateInputType
  }

  export type GetBarangAggregateType<T extends BarangAggregateArgs> = {
        [P in keyof T & keyof AggregateBarang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBarang[P]>
      : GetScalarType<T[P], AggregateBarang[P]>
  }




  export type barangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: barangWhereInput
    orderBy?: barangOrderByWithAggregationInput | barangOrderByWithAggregationInput[]
    by: BarangScalarFieldEnum[] | BarangScalarFieldEnum
    having?: barangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BarangCountAggregateInputType | true
    _avg?: BarangAvgAggregateInputType
    _sum?: BarangSumAggregateInputType
    _min?: BarangMinAggregateInputType
    _max?: BarangMaxAggregateInputType
  }

  export type BarangGroupByOutputType = {
    id: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    _count: BarangCountAggregateOutputType | null
    _avg: BarangAvgAggregateOutputType | null
    _sum: BarangSumAggregateOutputType | null
    _min: BarangMinAggregateOutputType | null
    _max: BarangMaxAggregateOutputType | null
  }

  type GetBarangGroupByPayload<T extends barangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BarangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BarangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BarangGroupByOutputType[P]>
            : GetScalarType<T[P], BarangGroupByOutputType[P]>
        }
      >
    >


  export type barangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stok?: boolean
    foto?: boolean
    harga_pinalti_per_jam?: boolean
    kategori_id?: boolean
    harga?: boolean
    nama?: boolean
    kategori?: boolean | kategoriDefaultArgs<ExtArgs>
    keranjang?: boolean | barang$keranjangArgs<ExtArgs>
    penalti?: boolean | barang$penaltiArgs<ExtArgs>
    review?: boolean | barang$reviewArgs<ExtArgs>
    sewa_items?: boolean | barang$sewa_itemsArgs<ExtArgs>
    _count?: boolean | BarangCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["barang"]>



  export type barangSelectScalar = {
    id?: boolean
    stok?: boolean
    foto?: boolean
    harga_pinalti_per_jam?: boolean
    kategori_id?: boolean
    harga?: boolean
    nama?: boolean
  }

  export type barangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stok" | "foto" | "harga_pinalti_per_jam" | "kategori_id" | "harga" | "nama", ExtArgs["result"]["barang"]>
  export type barangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kategori?: boolean | kategoriDefaultArgs<ExtArgs>
    keranjang?: boolean | barang$keranjangArgs<ExtArgs>
    penalti?: boolean | barang$penaltiArgs<ExtArgs>
    review?: boolean | barang$reviewArgs<ExtArgs>
    sewa_items?: boolean | barang$sewa_itemsArgs<ExtArgs>
    _count?: boolean | BarangCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $barangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "barang"
    objects: {
      kategori: Prisma.$kategoriPayload<ExtArgs>
      keranjang: Prisma.$keranjangPayload<ExtArgs>[]
      penalti: Prisma.$penaltiPayload<ExtArgs>[]
      review: Prisma.$reviewPayload<ExtArgs>[]
      sewa_items: Prisma.$sewa_itemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      stok: number
      foto: string
      harga_pinalti_per_jam: number
      kategori_id: number
      harga: number
      nama: string
    }, ExtArgs["result"]["barang"]>
    composites: {}
  }

  type barangGetPayload<S extends boolean | null | undefined | barangDefaultArgs> = $Result.GetResult<Prisma.$barangPayload, S>

  type barangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<barangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BarangCountAggregateInputType | true
    }

  export interface barangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['barang'], meta: { name: 'barang' } }
    /**
     * Find zero or one Barang that matches the filter.
     * @param {barangFindUniqueArgs} args - Arguments to find a Barang
     * @example
     * // Get one Barang
     * const barang = await prisma.barang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends barangFindUniqueArgs>(args: SelectSubset<T, barangFindUniqueArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Barang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {barangFindUniqueOrThrowArgs} args - Arguments to find a Barang
     * @example
     * // Get one Barang
     * const barang = await prisma.barang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends barangFindUniqueOrThrowArgs>(args: SelectSubset<T, barangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Barang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangFindFirstArgs} args - Arguments to find a Barang
     * @example
     * // Get one Barang
     * const barang = await prisma.barang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends barangFindFirstArgs>(args?: SelectSubset<T, barangFindFirstArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Barang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangFindFirstOrThrowArgs} args - Arguments to find a Barang
     * @example
     * // Get one Barang
     * const barang = await prisma.barang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends barangFindFirstOrThrowArgs>(args?: SelectSubset<T, barangFindFirstOrThrowArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Barangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Barangs
     * const barangs = await prisma.barang.findMany()
     * 
     * // Get first 10 Barangs
     * const barangs = await prisma.barang.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const barangWithIdOnly = await prisma.barang.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends barangFindManyArgs>(args?: SelectSubset<T, barangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Barang.
     * @param {barangCreateArgs} args - Arguments to create a Barang.
     * @example
     * // Create one Barang
     * const Barang = await prisma.barang.create({
     *   data: {
     *     // ... data to create a Barang
     *   }
     * })
     * 
     */
    create<T extends barangCreateArgs>(args: SelectSubset<T, barangCreateArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Barangs.
     * @param {barangCreateManyArgs} args - Arguments to create many Barangs.
     * @example
     * // Create many Barangs
     * const barang = await prisma.barang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends barangCreateManyArgs>(args?: SelectSubset<T, barangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Barang.
     * @param {barangDeleteArgs} args - Arguments to delete one Barang.
     * @example
     * // Delete one Barang
     * const Barang = await prisma.barang.delete({
     *   where: {
     *     // ... filter to delete one Barang
     *   }
     * })
     * 
     */
    delete<T extends barangDeleteArgs>(args: SelectSubset<T, barangDeleteArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Barang.
     * @param {barangUpdateArgs} args - Arguments to update one Barang.
     * @example
     * // Update one Barang
     * const barang = await prisma.barang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends barangUpdateArgs>(args: SelectSubset<T, barangUpdateArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Barangs.
     * @param {barangDeleteManyArgs} args - Arguments to filter Barangs to delete.
     * @example
     * // Delete a few Barangs
     * const { count } = await prisma.barang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends barangDeleteManyArgs>(args?: SelectSubset<T, barangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Barangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Barangs
     * const barang = await prisma.barang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends barangUpdateManyArgs>(args: SelectSubset<T, barangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Barang.
     * @param {barangUpsertArgs} args - Arguments to update or create a Barang.
     * @example
     * // Update or create a Barang
     * const barang = await prisma.barang.upsert({
     *   create: {
     *     // ... data to create a Barang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Barang we want to update
     *   }
     * })
     */
    upsert<T extends barangUpsertArgs>(args: SelectSubset<T, barangUpsertArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Barangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangCountArgs} args - Arguments to filter Barangs to count.
     * @example
     * // Count the number of Barangs
     * const count = await prisma.barang.count({
     *   where: {
     *     // ... the filter for the Barangs we want to count
     *   }
     * })
    **/
    count<T extends barangCountArgs>(
      args?: Subset<T, barangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BarangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Barang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BarangAggregateArgs>(args: Subset<T, BarangAggregateArgs>): Prisma.PrismaPromise<GetBarangAggregateType<T>>

    /**
     * Group by Barang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {barangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends barangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: barangGroupByArgs['orderBy'] }
        : { orderBy?: barangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, barangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBarangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the barang model
   */
  readonly fields: barangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for barang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__barangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kategori<T extends kategoriDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kategoriDefaultArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    keranjang<T extends barang$keranjangArgs<ExtArgs> = {}>(args?: Subset<T, barang$keranjangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    penalti<T extends barang$penaltiArgs<ExtArgs> = {}>(args?: Subset<T, barang$penaltiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    review<T extends barang$reviewArgs<ExtArgs> = {}>(args?: Subset<T, barang$reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sewa_items<T extends barang$sewa_itemsArgs<ExtArgs> = {}>(args?: Subset<T, barang$sewa_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the barang model
   */
  interface barangFieldRefs {
    readonly id: FieldRef<"barang", 'Int'>
    readonly stok: FieldRef<"barang", 'Int'>
    readonly foto: FieldRef<"barang", 'String'>
    readonly harga_pinalti_per_jam: FieldRef<"barang", 'Float'>
    readonly kategori_id: FieldRef<"barang", 'Int'>
    readonly harga: FieldRef<"barang", 'Float'>
    readonly nama: FieldRef<"barang", 'String'>
  }
    

  // Custom InputTypes
  /**
   * barang findUnique
   */
  export type barangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter, which barang to fetch.
     */
    where: barangWhereUniqueInput
  }

  /**
   * barang findUniqueOrThrow
   */
  export type barangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter, which barang to fetch.
     */
    where: barangWhereUniqueInput
  }

  /**
   * barang findFirst
   */
  export type barangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter, which barang to fetch.
     */
    where?: barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of barangs to fetch.
     */
    orderBy?: barangOrderByWithRelationInput | barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for barangs.
     */
    cursor?: barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of barangs.
     */
    distinct?: BarangScalarFieldEnum | BarangScalarFieldEnum[]
  }

  /**
   * barang findFirstOrThrow
   */
  export type barangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter, which barang to fetch.
     */
    where?: barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of barangs to fetch.
     */
    orderBy?: barangOrderByWithRelationInput | barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for barangs.
     */
    cursor?: barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of barangs.
     */
    distinct?: BarangScalarFieldEnum | BarangScalarFieldEnum[]
  }

  /**
   * barang findMany
   */
  export type barangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter, which barangs to fetch.
     */
    where?: barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of barangs to fetch.
     */
    orderBy?: barangOrderByWithRelationInput | barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing barangs.
     */
    cursor?: barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` barangs.
     */
    skip?: number
    distinct?: BarangScalarFieldEnum | BarangScalarFieldEnum[]
  }

  /**
   * barang create
   */
  export type barangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * The data needed to create a barang.
     */
    data: XOR<barangCreateInput, barangUncheckedCreateInput>
  }

  /**
   * barang createMany
   */
  export type barangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many barangs.
     */
    data: barangCreateManyInput | barangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * barang update
   */
  export type barangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * The data needed to update a barang.
     */
    data: XOR<barangUpdateInput, barangUncheckedUpdateInput>
    /**
     * Choose, which barang to update.
     */
    where: barangWhereUniqueInput
  }

  /**
   * barang updateMany
   */
  export type barangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update barangs.
     */
    data: XOR<barangUpdateManyMutationInput, barangUncheckedUpdateManyInput>
    /**
     * Filter which barangs to update
     */
    where?: barangWhereInput
    /**
     * Limit how many barangs to update.
     */
    limit?: number
  }

  /**
   * barang upsert
   */
  export type barangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * The filter to search for the barang to update in case it exists.
     */
    where: barangWhereUniqueInput
    /**
     * In case the barang found by the `where` argument doesn't exist, create a new barang with this data.
     */
    create: XOR<barangCreateInput, barangUncheckedCreateInput>
    /**
     * In case the barang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<barangUpdateInput, barangUncheckedUpdateInput>
  }

  /**
   * barang delete
   */
  export type barangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    /**
     * Filter which barang to delete.
     */
    where: barangWhereUniqueInput
  }

  /**
   * barang deleteMany
   */
  export type barangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which barangs to delete
     */
    where?: barangWhereInput
    /**
     * Limit how many barangs to delete.
     */
    limit?: number
  }

  /**
   * barang.keranjang
   */
  export type barang$keranjangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    where?: keranjangWhereInput
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    cursor?: keranjangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KeranjangScalarFieldEnum | KeranjangScalarFieldEnum[]
  }

  /**
   * barang.penalti
   */
  export type barang$penaltiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    where?: penaltiWhereInput
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    cursor?: penaltiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PenaltiScalarFieldEnum | PenaltiScalarFieldEnum[]
  }

  /**
   * barang.review
   */
  export type barang$reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    where?: reviewWhereInput
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    cursor?: reviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * barang.sewa_items
   */
  export type barang$sewa_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    where?: sewa_itemsWhereInput
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    cursor?: sewa_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sewa_itemsScalarFieldEnum | Sewa_itemsScalarFieldEnum[]
  }

  /**
   * barang without action
   */
  export type barangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
  }


  /**
   * Model kategori
   */

  export type AggregateKategori = {
    _count: KategoriCountAggregateOutputType | null
    _avg: KategoriAvgAggregateOutputType | null
    _sum: KategoriSumAggregateOutputType | null
    _min: KategoriMinAggregateOutputType | null
    _max: KategoriMaxAggregateOutputType | null
  }

  export type KategoriAvgAggregateOutputType = {
    id: number | null
  }

  export type KategoriSumAggregateOutputType = {
    id: number | null
  }

  export type KategoriMinAggregateOutputType = {
    id: number | null
    nama: string | null
  }

  export type KategoriMaxAggregateOutputType = {
    id: number | null
    nama: string | null
  }

  export type KategoriCountAggregateOutputType = {
    id: number
    nama: number
    _all: number
  }


  export type KategoriAvgAggregateInputType = {
    id?: true
  }

  export type KategoriSumAggregateInputType = {
    id?: true
  }

  export type KategoriMinAggregateInputType = {
    id?: true
    nama?: true
  }

  export type KategoriMaxAggregateInputType = {
    id?: true
    nama?: true
  }

  export type KategoriCountAggregateInputType = {
    id?: true
    nama?: true
    _all?: true
  }

  export type KategoriAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kategori to aggregate.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kategoris
    **/
    _count?: true | KategoriCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KategoriAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KategoriSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KategoriMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KategoriMaxAggregateInputType
  }

  export type GetKategoriAggregateType<T extends KategoriAggregateArgs> = {
        [P in keyof T & keyof AggregateKategori]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKategori[P]>
      : GetScalarType<T[P], AggregateKategori[P]>
  }




  export type kategoriGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kategoriWhereInput
    orderBy?: kategoriOrderByWithAggregationInput | kategoriOrderByWithAggregationInput[]
    by: KategoriScalarFieldEnum[] | KategoriScalarFieldEnum
    having?: kategoriScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KategoriCountAggregateInputType | true
    _avg?: KategoriAvgAggregateInputType
    _sum?: KategoriSumAggregateInputType
    _min?: KategoriMinAggregateInputType
    _max?: KategoriMaxAggregateInputType
  }

  export type KategoriGroupByOutputType = {
    id: number
    nama: string
    _count: KategoriCountAggregateOutputType | null
    _avg: KategoriAvgAggregateOutputType | null
    _sum: KategoriSumAggregateOutputType | null
    _min: KategoriMinAggregateOutputType | null
    _max: KategoriMaxAggregateOutputType | null
  }

  type GetKategoriGroupByPayload<T extends kategoriGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KategoriGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KategoriGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KategoriGroupByOutputType[P]>
            : GetScalarType<T[P], KategoriGroupByOutputType[P]>
        }
      >
    >


  export type kategoriSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    barang?: boolean | kategori$barangArgs<ExtArgs>
    _count?: boolean | KategoriCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kategori"]>



  export type kategoriSelectScalar = {
    id?: boolean
    nama?: boolean
  }

  export type kategoriOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama", ExtArgs["result"]["kategori"]>
  export type kategoriInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | kategori$barangArgs<ExtArgs>
    _count?: boolean | KategoriCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $kategoriPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kategori"
    objects: {
      barang: Prisma.$barangPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
    }, ExtArgs["result"]["kategori"]>
    composites: {}
  }

  type kategoriGetPayload<S extends boolean | null | undefined | kategoriDefaultArgs> = $Result.GetResult<Prisma.$kategoriPayload, S>

  type kategoriCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<kategoriFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KategoriCountAggregateInputType | true
    }

  export interface kategoriDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kategori'], meta: { name: 'kategori' } }
    /**
     * Find zero or one Kategori that matches the filter.
     * @param {kategoriFindUniqueArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends kategoriFindUniqueArgs>(args: SelectSubset<T, kategoriFindUniqueArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Kategori that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {kategoriFindUniqueOrThrowArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends kategoriFindUniqueOrThrowArgs>(args: SelectSubset<T, kategoriFindUniqueOrThrowArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kategori that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindFirstArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends kategoriFindFirstArgs>(args?: SelectSubset<T, kategoriFindFirstArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kategori that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindFirstOrThrowArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends kategoriFindFirstOrThrowArgs>(args?: SelectSubset<T, kategoriFindFirstOrThrowArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Kategoris that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kategoris
     * const kategoris = await prisma.kategori.findMany()
     * 
     * // Get first 10 Kategoris
     * const kategoris = await prisma.kategori.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kategoriWithIdOnly = await prisma.kategori.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends kategoriFindManyArgs>(args?: SelectSubset<T, kategoriFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Kategori.
     * @param {kategoriCreateArgs} args - Arguments to create a Kategori.
     * @example
     * // Create one Kategori
     * const Kategori = await prisma.kategori.create({
     *   data: {
     *     // ... data to create a Kategori
     *   }
     * })
     * 
     */
    create<T extends kategoriCreateArgs>(args: SelectSubset<T, kategoriCreateArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Kategoris.
     * @param {kategoriCreateManyArgs} args - Arguments to create many Kategoris.
     * @example
     * // Create many Kategoris
     * const kategori = await prisma.kategori.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends kategoriCreateManyArgs>(args?: SelectSubset<T, kategoriCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kategori.
     * @param {kategoriDeleteArgs} args - Arguments to delete one Kategori.
     * @example
     * // Delete one Kategori
     * const Kategori = await prisma.kategori.delete({
     *   where: {
     *     // ... filter to delete one Kategori
     *   }
     * })
     * 
     */
    delete<T extends kategoriDeleteArgs>(args: SelectSubset<T, kategoriDeleteArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Kategori.
     * @param {kategoriUpdateArgs} args - Arguments to update one Kategori.
     * @example
     * // Update one Kategori
     * const kategori = await prisma.kategori.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends kategoriUpdateArgs>(args: SelectSubset<T, kategoriUpdateArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Kategoris.
     * @param {kategoriDeleteManyArgs} args - Arguments to filter Kategoris to delete.
     * @example
     * // Delete a few Kategoris
     * const { count } = await prisma.kategori.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends kategoriDeleteManyArgs>(args?: SelectSubset<T, kategoriDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kategoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kategoris
     * const kategori = await prisma.kategori.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends kategoriUpdateManyArgs>(args: SelectSubset<T, kategoriUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kategori.
     * @param {kategoriUpsertArgs} args - Arguments to update or create a Kategori.
     * @example
     * // Update or create a Kategori
     * const kategori = await prisma.kategori.upsert({
     *   create: {
     *     // ... data to create a Kategori
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kategori we want to update
     *   }
     * })
     */
    upsert<T extends kategoriUpsertArgs>(args: SelectSubset<T, kategoriUpsertArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Kategoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriCountArgs} args - Arguments to filter Kategoris to count.
     * @example
     * // Count the number of Kategoris
     * const count = await prisma.kategori.count({
     *   where: {
     *     // ... the filter for the Kategoris we want to count
     *   }
     * })
    **/
    count<T extends kategoriCountArgs>(
      args?: Subset<T, kategoriCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KategoriCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kategori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KategoriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KategoriAggregateArgs>(args: Subset<T, KategoriAggregateArgs>): Prisma.PrismaPromise<GetKategoriAggregateType<T>>

    /**
     * Group by Kategori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kategoriGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kategoriGroupByArgs['orderBy'] }
        : { orderBy?: kategoriGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kategoriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKategoriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kategori model
   */
  readonly fields: kategoriFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kategori.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kategoriClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barang<T extends kategori$barangArgs<ExtArgs> = {}>(args?: Subset<T, kategori$barangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the kategori model
   */
  interface kategoriFieldRefs {
    readonly id: FieldRef<"kategori", 'Int'>
    readonly nama: FieldRef<"kategori", 'String'>
  }
    

  // Custom InputTypes
  /**
   * kategori findUnique
   */
  export type kategoriFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where: kategoriWhereUniqueInput
  }

  /**
   * kategori findUniqueOrThrow
   */
  export type kategoriFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where: kategoriWhereUniqueInput
  }

  /**
   * kategori findFirst
   */
  export type kategoriFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kategoris.
     */
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }

  /**
   * kategori findFirstOrThrow
   */
  export type kategoriFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kategoris.
     */
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }

  /**
   * kategori findMany
   */
  export type kategoriFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategoris to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }

  /**
   * kategori create
   */
  export type kategoriCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The data needed to create a kategori.
     */
    data: XOR<kategoriCreateInput, kategoriUncheckedCreateInput>
  }

  /**
   * kategori createMany
   */
  export type kategoriCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kategoris.
     */
    data: kategoriCreateManyInput | kategoriCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * kategori update
   */
  export type kategoriUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The data needed to update a kategori.
     */
    data: XOR<kategoriUpdateInput, kategoriUncheckedUpdateInput>
    /**
     * Choose, which kategori to update.
     */
    where: kategoriWhereUniqueInput
  }

  /**
   * kategori updateMany
   */
  export type kategoriUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kategoris.
     */
    data: XOR<kategoriUpdateManyMutationInput, kategoriUncheckedUpdateManyInput>
    /**
     * Filter which kategoris to update
     */
    where?: kategoriWhereInput
    /**
     * Limit how many kategoris to update.
     */
    limit?: number
  }

  /**
   * kategori upsert
   */
  export type kategoriUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The filter to search for the kategori to update in case it exists.
     */
    where: kategoriWhereUniqueInput
    /**
     * In case the kategori found by the `where` argument doesn't exist, create a new kategori with this data.
     */
    create: XOR<kategoriCreateInput, kategoriUncheckedCreateInput>
    /**
     * In case the kategori was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kategoriUpdateInput, kategoriUncheckedUpdateInput>
  }

  /**
   * kategori delete
   */
  export type kategoriDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter which kategori to delete.
     */
    where: kategoriWhereUniqueInput
  }

  /**
   * kategori deleteMany
   */
  export type kategoriDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kategoris to delete
     */
    where?: kategoriWhereInput
    /**
     * Limit how many kategoris to delete.
     */
    limit?: number
  }

  /**
   * kategori.barang
   */
  export type kategori$barangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the barang
     */
    select?: barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the barang
     */
    omit?: barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: barangInclude<ExtArgs> | null
    where?: barangWhereInput
    orderBy?: barangOrderByWithRelationInput | barangOrderByWithRelationInput[]
    cursor?: barangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BarangScalarFieldEnum | BarangScalarFieldEnum[]
  }

  /**
   * kategori without action
   */
  export type kategoriDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the kategori
     */
    omit?: kategoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: kategoriInclude<ExtArgs> | null
  }


  /**
   * Model keranjang
   */

  export type AggregateKeranjang = {
    _count: KeranjangCountAggregateOutputType | null
    _avg: KeranjangAvgAggregateOutputType | null
    _sum: KeranjangSumAggregateOutputType | null
    _min: KeranjangMinAggregateOutputType | null
    _max: KeranjangMaxAggregateOutputType | null
  }

  export type KeranjangAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    jumlah: number | null
    subtotal: number | null
  }

  export type KeranjangSumAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    jumlah: number | null
    subtotal: number | null
  }

  export type KeranjangMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    jumlah: number | null
    subtotal: number | null
  }

  export type KeranjangMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    jumlah: number | null
    subtotal: number | null
  }

  export type KeranjangCountAggregateOutputType = {
    id: number
    id_user: number
    id_barang: number
    jumlah: number
    subtotal: number
    _all: number
  }


  export type KeranjangAvgAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    jumlah?: true
    subtotal?: true
  }

  export type KeranjangSumAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    jumlah?: true
    subtotal?: true
  }

  export type KeranjangMinAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    jumlah?: true
    subtotal?: true
  }

  export type KeranjangMaxAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    jumlah?: true
    subtotal?: true
  }

  export type KeranjangCountAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    jumlah?: true
    subtotal?: true
    _all?: true
  }

  export type KeranjangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which keranjang to aggregate.
     */
    where?: keranjangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keranjangs to fetch.
     */
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: keranjangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keranjangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keranjangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned keranjangs
    **/
    _count?: true | KeranjangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KeranjangAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KeranjangSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KeranjangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KeranjangMaxAggregateInputType
  }

  export type GetKeranjangAggregateType<T extends KeranjangAggregateArgs> = {
        [P in keyof T & keyof AggregateKeranjang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKeranjang[P]>
      : GetScalarType<T[P], AggregateKeranjang[P]>
  }




  export type keranjangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: keranjangWhereInput
    orderBy?: keranjangOrderByWithAggregationInput | keranjangOrderByWithAggregationInput[]
    by: KeranjangScalarFieldEnum[] | KeranjangScalarFieldEnum
    having?: keranjangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KeranjangCountAggregateInputType | true
    _avg?: KeranjangAvgAggregateInputType
    _sum?: KeranjangSumAggregateInputType
    _min?: KeranjangMinAggregateInputType
    _max?: KeranjangMaxAggregateInputType
  }

  export type KeranjangGroupByOutputType = {
    id: number
    id_user: number
    id_barang: number
    jumlah: number
    subtotal: number
    _count: KeranjangCountAggregateOutputType | null
    _avg: KeranjangAvgAggregateOutputType | null
    _sum: KeranjangSumAggregateOutputType | null
    _min: KeranjangMinAggregateOutputType | null
    _max: KeranjangMaxAggregateOutputType | null
  }

  type GetKeranjangGroupByPayload<T extends keranjangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KeranjangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KeranjangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KeranjangGroupByOutputType[P]>
            : GetScalarType<T[P], KeranjangGroupByOutputType[P]>
        }
      >
    >


  export type keranjangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    id_barang?: boolean
    jumlah?: boolean
    subtotal?: boolean
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keranjang"]>



  export type keranjangSelectScalar = {
    id?: boolean
    id_user?: boolean
    id_barang?: boolean
    jumlah?: boolean
    subtotal?: boolean
  }

  export type keranjangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_user" | "id_barang" | "jumlah" | "subtotal", ExtArgs["result"]["keranjang"]>
  export type keranjangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $keranjangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "keranjang"
    objects: {
      barang: Prisma.$barangPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      id_barang: number
      jumlah: number
      subtotal: number
    }, ExtArgs["result"]["keranjang"]>
    composites: {}
  }

  type keranjangGetPayload<S extends boolean | null | undefined | keranjangDefaultArgs> = $Result.GetResult<Prisma.$keranjangPayload, S>

  type keranjangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<keranjangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KeranjangCountAggregateInputType | true
    }

  export interface keranjangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['keranjang'], meta: { name: 'keranjang' } }
    /**
     * Find zero or one Keranjang that matches the filter.
     * @param {keranjangFindUniqueArgs} args - Arguments to find a Keranjang
     * @example
     * // Get one Keranjang
     * const keranjang = await prisma.keranjang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends keranjangFindUniqueArgs>(args: SelectSubset<T, keranjangFindUniqueArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Keranjang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {keranjangFindUniqueOrThrowArgs} args - Arguments to find a Keranjang
     * @example
     * // Get one Keranjang
     * const keranjang = await prisma.keranjang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends keranjangFindUniqueOrThrowArgs>(args: SelectSubset<T, keranjangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Keranjang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangFindFirstArgs} args - Arguments to find a Keranjang
     * @example
     * // Get one Keranjang
     * const keranjang = await prisma.keranjang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends keranjangFindFirstArgs>(args?: SelectSubset<T, keranjangFindFirstArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Keranjang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangFindFirstOrThrowArgs} args - Arguments to find a Keranjang
     * @example
     * // Get one Keranjang
     * const keranjang = await prisma.keranjang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends keranjangFindFirstOrThrowArgs>(args?: SelectSubset<T, keranjangFindFirstOrThrowArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Keranjangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Keranjangs
     * const keranjangs = await prisma.keranjang.findMany()
     * 
     * // Get first 10 Keranjangs
     * const keranjangs = await prisma.keranjang.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const keranjangWithIdOnly = await prisma.keranjang.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends keranjangFindManyArgs>(args?: SelectSubset<T, keranjangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Keranjang.
     * @param {keranjangCreateArgs} args - Arguments to create a Keranjang.
     * @example
     * // Create one Keranjang
     * const Keranjang = await prisma.keranjang.create({
     *   data: {
     *     // ... data to create a Keranjang
     *   }
     * })
     * 
     */
    create<T extends keranjangCreateArgs>(args: SelectSubset<T, keranjangCreateArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Keranjangs.
     * @param {keranjangCreateManyArgs} args - Arguments to create many Keranjangs.
     * @example
     * // Create many Keranjangs
     * const keranjang = await prisma.keranjang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends keranjangCreateManyArgs>(args?: SelectSubset<T, keranjangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Keranjang.
     * @param {keranjangDeleteArgs} args - Arguments to delete one Keranjang.
     * @example
     * // Delete one Keranjang
     * const Keranjang = await prisma.keranjang.delete({
     *   where: {
     *     // ... filter to delete one Keranjang
     *   }
     * })
     * 
     */
    delete<T extends keranjangDeleteArgs>(args: SelectSubset<T, keranjangDeleteArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Keranjang.
     * @param {keranjangUpdateArgs} args - Arguments to update one Keranjang.
     * @example
     * // Update one Keranjang
     * const keranjang = await prisma.keranjang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends keranjangUpdateArgs>(args: SelectSubset<T, keranjangUpdateArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Keranjangs.
     * @param {keranjangDeleteManyArgs} args - Arguments to filter Keranjangs to delete.
     * @example
     * // Delete a few Keranjangs
     * const { count } = await prisma.keranjang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends keranjangDeleteManyArgs>(args?: SelectSubset<T, keranjangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Keranjangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Keranjangs
     * const keranjang = await prisma.keranjang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends keranjangUpdateManyArgs>(args: SelectSubset<T, keranjangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Keranjang.
     * @param {keranjangUpsertArgs} args - Arguments to update or create a Keranjang.
     * @example
     * // Update or create a Keranjang
     * const keranjang = await prisma.keranjang.upsert({
     *   create: {
     *     // ... data to create a Keranjang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Keranjang we want to update
     *   }
     * })
     */
    upsert<T extends keranjangUpsertArgs>(args: SelectSubset<T, keranjangUpsertArgs<ExtArgs>>): Prisma__keranjangClient<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Keranjangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangCountArgs} args - Arguments to filter Keranjangs to count.
     * @example
     * // Count the number of Keranjangs
     * const count = await prisma.keranjang.count({
     *   where: {
     *     // ... the filter for the Keranjangs we want to count
     *   }
     * })
    **/
    count<T extends keranjangCountArgs>(
      args?: Subset<T, keranjangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KeranjangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Keranjang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeranjangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KeranjangAggregateArgs>(args: Subset<T, KeranjangAggregateArgs>): Prisma.PrismaPromise<GetKeranjangAggregateType<T>>

    /**
     * Group by Keranjang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keranjangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends keranjangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: keranjangGroupByArgs['orderBy'] }
        : { orderBy?: keranjangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, keranjangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKeranjangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the keranjang model
   */
  readonly fields: keranjangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for keranjang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__keranjangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barang<T extends barangDefaultArgs<ExtArgs> = {}>(args?: Subset<T, barangDefaultArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the keranjang model
   */
  interface keranjangFieldRefs {
    readonly id: FieldRef<"keranjang", 'Int'>
    readonly id_user: FieldRef<"keranjang", 'Int'>
    readonly id_barang: FieldRef<"keranjang", 'Int'>
    readonly jumlah: FieldRef<"keranjang", 'Int'>
    readonly subtotal: FieldRef<"keranjang", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * keranjang findUnique
   */
  export type keranjangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter, which keranjang to fetch.
     */
    where: keranjangWhereUniqueInput
  }

  /**
   * keranjang findUniqueOrThrow
   */
  export type keranjangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter, which keranjang to fetch.
     */
    where: keranjangWhereUniqueInput
  }

  /**
   * keranjang findFirst
   */
  export type keranjangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter, which keranjang to fetch.
     */
    where?: keranjangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keranjangs to fetch.
     */
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for keranjangs.
     */
    cursor?: keranjangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keranjangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keranjangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of keranjangs.
     */
    distinct?: KeranjangScalarFieldEnum | KeranjangScalarFieldEnum[]
  }

  /**
   * keranjang findFirstOrThrow
   */
  export type keranjangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter, which keranjang to fetch.
     */
    where?: keranjangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keranjangs to fetch.
     */
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for keranjangs.
     */
    cursor?: keranjangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keranjangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keranjangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of keranjangs.
     */
    distinct?: KeranjangScalarFieldEnum | KeranjangScalarFieldEnum[]
  }

  /**
   * keranjang findMany
   */
  export type keranjangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter, which keranjangs to fetch.
     */
    where?: keranjangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keranjangs to fetch.
     */
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing keranjangs.
     */
    cursor?: keranjangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keranjangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keranjangs.
     */
    skip?: number
    distinct?: KeranjangScalarFieldEnum | KeranjangScalarFieldEnum[]
  }

  /**
   * keranjang create
   */
  export type keranjangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * The data needed to create a keranjang.
     */
    data: XOR<keranjangCreateInput, keranjangUncheckedCreateInput>
  }

  /**
   * keranjang createMany
   */
  export type keranjangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many keranjangs.
     */
    data: keranjangCreateManyInput | keranjangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * keranjang update
   */
  export type keranjangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * The data needed to update a keranjang.
     */
    data: XOR<keranjangUpdateInput, keranjangUncheckedUpdateInput>
    /**
     * Choose, which keranjang to update.
     */
    where: keranjangWhereUniqueInput
  }

  /**
   * keranjang updateMany
   */
  export type keranjangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update keranjangs.
     */
    data: XOR<keranjangUpdateManyMutationInput, keranjangUncheckedUpdateManyInput>
    /**
     * Filter which keranjangs to update
     */
    where?: keranjangWhereInput
    /**
     * Limit how many keranjangs to update.
     */
    limit?: number
  }

  /**
   * keranjang upsert
   */
  export type keranjangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * The filter to search for the keranjang to update in case it exists.
     */
    where: keranjangWhereUniqueInput
    /**
     * In case the keranjang found by the `where` argument doesn't exist, create a new keranjang with this data.
     */
    create: XOR<keranjangCreateInput, keranjangUncheckedCreateInput>
    /**
     * In case the keranjang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<keranjangUpdateInput, keranjangUncheckedUpdateInput>
  }

  /**
   * keranjang delete
   */
  export type keranjangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    /**
     * Filter which keranjang to delete.
     */
    where: keranjangWhereUniqueInput
  }

  /**
   * keranjang deleteMany
   */
  export type keranjangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which keranjangs to delete
     */
    where?: keranjangWhereInput
    /**
     * Limit how many keranjangs to delete.
     */
    limit?: number
  }

  /**
   * keranjang without action
   */
  export type keranjangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
  }


  /**
   * Model penalti
   */

  export type AggregatePenalti = {
    _count: PenaltiCountAggregateOutputType | null
    _avg: PenaltiAvgAggregateOutputType | null
    _sum: PenaltiSumAggregateOutputType | null
    _min: PenaltiMinAggregateOutputType | null
    _max: PenaltiMaxAggregateOutputType | null
  }

  export type PenaltiAvgAggregateOutputType = {
    id: number | null
    id_barang: number | null
    id_user: number | null
    total_bayar: number | null
  }

  export type PenaltiSumAggregateOutputType = {
    id: number | null
    id_barang: number | null
    id_user: number | null
    total_bayar: number | null
  }

  export type PenaltiMinAggregateOutputType = {
    id: number | null
    id_barang: number | null
    id_user: number | null
    total_bayar: number | null
  }

  export type PenaltiMaxAggregateOutputType = {
    id: number | null
    id_barang: number | null
    id_user: number | null
    total_bayar: number | null
  }

  export type PenaltiCountAggregateOutputType = {
    id: number
    id_barang: number
    id_user: number
    total_bayar: number
    _all: number
  }


  export type PenaltiAvgAggregateInputType = {
    id?: true
    id_barang?: true
    id_user?: true
    total_bayar?: true
  }

  export type PenaltiSumAggregateInputType = {
    id?: true
    id_barang?: true
    id_user?: true
    total_bayar?: true
  }

  export type PenaltiMinAggregateInputType = {
    id?: true
    id_barang?: true
    id_user?: true
    total_bayar?: true
  }

  export type PenaltiMaxAggregateInputType = {
    id?: true
    id_barang?: true
    id_user?: true
    total_bayar?: true
  }

  export type PenaltiCountAggregateInputType = {
    id?: true
    id_barang?: true
    id_user?: true
    total_bayar?: true
    _all?: true
  }

  export type PenaltiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which penalti to aggregate.
     */
    where?: penaltiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of penaltis to fetch.
     */
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: penaltiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` penaltis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` penaltis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned penaltis
    **/
    _count?: true | PenaltiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PenaltiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PenaltiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PenaltiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PenaltiMaxAggregateInputType
  }

  export type GetPenaltiAggregateType<T extends PenaltiAggregateArgs> = {
        [P in keyof T & keyof AggregatePenalti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePenalti[P]>
      : GetScalarType<T[P], AggregatePenalti[P]>
  }




  export type penaltiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: penaltiWhereInput
    orderBy?: penaltiOrderByWithAggregationInput | penaltiOrderByWithAggregationInput[]
    by: PenaltiScalarFieldEnum[] | PenaltiScalarFieldEnum
    having?: penaltiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PenaltiCountAggregateInputType | true
    _avg?: PenaltiAvgAggregateInputType
    _sum?: PenaltiSumAggregateInputType
    _min?: PenaltiMinAggregateInputType
    _max?: PenaltiMaxAggregateInputType
  }

  export type PenaltiGroupByOutputType = {
    id: number
    id_barang: number
    id_user: number
    total_bayar: number
    _count: PenaltiCountAggregateOutputType | null
    _avg: PenaltiAvgAggregateOutputType | null
    _sum: PenaltiSumAggregateOutputType | null
    _min: PenaltiMinAggregateOutputType | null
    _max: PenaltiMaxAggregateOutputType | null
  }

  type GetPenaltiGroupByPayload<T extends penaltiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PenaltiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PenaltiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PenaltiGroupByOutputType[P]>
            : GetScalarType<T[P], PenaltiGroupByOutputType[P]>
        }
      >
    >


  export type penaltiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_barang?: boolean
    id_user?: boolean
    total_bayar?: boolean
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["penalti"]>



  export type penaltiSelectScalar = {
    id?: boolean
    id_barang?: boolean
    id_user?: boolean
    total_bayar?: boolean
  }

  export type penaltiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_barang" | "id_user" | "total_bayar", ExtArgs["result"]["penalti"]>
  export type penaltiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $penaltiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "penalti"
    objects: {
      barang: Prisma.$barangPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_barang: number
      id_user: number
      total_bayar: number
    }, ExtArgs["result"]["penalti"]>
    composites: {}
  }

  type penaltiGetPayload<S extends boolean | null | undefined | penaltiDefaultArgs> = $Result.GetResult<Prisma.$penaltiPayload, S>

  type penaltiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<penaltiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PenaltiCountAggregateInputType | true
    }

  export interface penaltiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['penalti'], meta: { name: 'penalti' } }
    /**
     * Find zero or one Penalti that matches the filter.
     * @param {penaltiFindUniqueArgs} args - Arguments to find a Penalti
     * @example
     * // Get one Penalti
     * const penalti = await prisma.penalti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends penaltiFindUniqueArgs>(args: SelectSubset<T, penaltiFindUniqueArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Penalti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {penaltiFindUniqueOrThrowArgs} args - Arguments to find a Penalti
     * @example
     * // Get one Penalti
     * const penalti = await prisma.penalti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends penaltiFindUniqueOrThrowArgs>(args: SelectSubset<T, penaltiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Penalti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiFindFirstArgs} args - Arguments to find a Penalti
     * @example
     * // Get one Penalti
     * const penalti = await prisma.penalti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends penaltiFindFirstArgs>(args?: SelectSubset<T, penaltiFindFirstArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Penalti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiFindFirstOrThrowArgs} args - Arguments to find a Penalti
     * @example
     * // Get one Penalti
     * const penalti = await prisma.penalti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends penaltiFindFirstOrThrowArgs>(args?: SelectSubset<T, penaltiFindFirstOrThrowArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Penaltis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Penaltis
     * const penaltis = await prisma.penalti.findMany()
     * 
     * // Get first 10 Penaltis
     * const penaltis = await prisma.penalti.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const penaltiWithIdOnly = await prisma.penalti.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends penaltiFindManyArgs>(args?: SelectSubset<T, penaltiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Penalti.
     * @param {penaltiCreateArgs} args - Arguments to create a Penalti.
     * @example
     * // Create one Penalti
     * const Penalti = await prisma.penalti.create({
     *   data: {
     *     // ... data to create a Penalti
     *   }
     * })
     * 
     */
    create<T extends penaltiCreateArgs>(args: SelectSubset<T, penaltiCreateArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Penaltis.
     * @param {penaltiCreateManyArgs} args - Arguments to create many Penaltis.
     * @example
     * // Create many Penaltis
     * const penalti = await prisma.penalti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends penaltiCreateManyArgs>(args?: SelectSubset<T, penaltiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Penalti.
     * @param {penaltiDeleteArgs} args - Arguments to delete one Penalti.
     * @example
     * // Delete one Penalti
     * const Penalti = await prisma.penalti.delete({
     *   where: {
     *     // ... filter to delete one Penalti
     *   }
     * })
     * 
     */
    delete<T extends penaltiDeleteArgs>(args: SelectSubset<T, penaltiDeleteArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Penalti.
     * @param {penaltiUpdateArgs} args - Arguments to update one Penalti.
     * @example
     * // Update one Penalti
     * const penalti = await prisma.penalti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends penaltiUpdateArgs>(args: SelectSubset<T, penaltiUpdateArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Penaltis.
     * @param {penaltiDeleteManyArgs} args - Arguments to filter Penaltis to delete.
     * @example
     * // Delete a few Penaltis
     * const { count } = await prisma.penalti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends penaltiDeleteManyArgs>(args?: SelectSubset<T, penaltiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Penaltis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Penaltis
     * const penalti = await prisma.penalti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends penaltiUpdateManyArgs>(args: SelectSubset<T, penaltiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Penalti.
     * @param {penaltiUpsertArgs} args - Arguments to update or create a Penalti.
     * @example
     * // Update or create a Penalti
     * const penalti = await prisma.penalti.upsert({
     *   create: {
     *     // ... data to create a Penalti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Penalti we want to update
     *   }
     * })
     */
    upsert<T extends penaltiUpsertArgs>(args: SelectSubset<T, penaltiUpsertArgs<ExtArgs>>): Prisma__penaltiClient<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Penaltis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiCountArgs} args - Arguments to filter Penaltis to count.
     * @example
     * // Count the number of Penaltis
     * const count = await prisma.penalti.count({
     *   where: {
     *     // ... the filter for the Penaltis we want to count
     *   }
     * })
    **/
    count<T extends penaltiCountArgs>(
      args?: Subset<T, penaltiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PenaltiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Penalti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PenaltiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PenaltiAggregateArgs>(args: Subset<T, PenaltiAggregateArgs>): Prisma.PrismaPromise<GetPenaltiAggregateType<T>>

    /**
     * Group by Penalti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {penaltiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends penaltiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: penaltiGroupByArgs['orderBy'] }
        : { orderBy?: penaltiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, penaltiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPenaltiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the penalti model
   */
  readonly fields: penaltiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for penalti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__penaltiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barang<T extends barangDefaultArgs<ExtArgs> = {}>(args?: Subset<T, barangDefaultArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the penalti model
   */
  interface penaltiFieldRefs {
    readonly id: FieldRef<"penalti", 'Int'>
    readonly id_barang: FieldRef<"penalti", 'Int'>
    readonly id_user: FieldRef<"penalti", 'Int'>
    readonly total_bayar: FieldRef<"penalti", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * penalti findUnique
   */
  export type penaltiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter, which penalti to fetch.
     */
    where: penaltiWhereUniqueInput
  }

  /**
   * penalti findUniqueOrThrow
   */
  export type penaltiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter, which penalti to fetch.
     */
    where: penaltiWhereUniqueInput
  }

  /**
   * penalti findFirst
   */
  export type penaltiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter, which penalti to fetch.
     */
    where?: penaltiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of penaltis to fetch.
     */
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for penaltis.
     */
    cursor?: penaltiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` penaltis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` penaltis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of penaltis.
     */
    distinct?: PenaltiScalarFieldEnum | PenaltiScalarFieldEnum[]
  }

  /**
   * penalti findFirstOrThrow
   */
  export type penaltiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter, which penalti to fetch.
     */
    where?: penaltiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of penaltis to fetch.
     */
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for penaltis.
     */
    cursor?: penaltiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` penaltis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` penaltis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of penaltis.
     */
    distinct?: PenaltiScalarFieldEnum | PenaltiScalarFieldEnum[]
  }

  /**
   * penalti findMany
   */
  export type penaltiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter, which penaltis to fetch.
     */
    where?: penaltiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of penaltis to fetch.
     */
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing penaltis.
     */
    cursor?: penaltiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` penaltis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` penaltis.
     */
    skip?: number
    distinct?: PenaltiScalarFieldEnum | PenaltiScalarFieldEnum[]
  }

  /**
   * penalti create
   */
  export type penaltiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * The data needed to create a penalti.
     */
    data: XOR<penaltiCreateInput, penaltiUncheckedCreateInput>
  }

  /**
   * penalti createMany
   */
  export type penaltiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many penaltis.
     */
    data: penaltiCreateManyInput | penaltiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * penalti update
   */
  export type penaltiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * The data needed to update a penalti.
     */
    data: XOR<penaltiUpdateInput, penaltiUncheckedUpdateInput>
    /**
     * Choose, which penalti to update.
     */
    where: penaltiWhereUniqueInput
  }

  /**
   * penalti updateMany
   */
  export type penaltiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update penaltis.
     */
    data: XOR<penaltiUpdateManyMutationInput, penaltiUncheckedUpdateManyInput>
    /**
     * Filter which penaltis to update
     */
    where?: penaltiWhereInput
    /**
     * Limit how many penaltis to update.
     */
    limit?: number
  }

  /**
   * penalti upsert
   */
  export type penaltiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * The filter to search for the penalti to update in case it exists.
     */
    where: penaltiWhereUniqueInput
    /**
     * In case the penalti found by the `where` argument doesn't exist, create a new penalti with this data.
     */
    create: XOR<penaltiCreateInput, penaltiUncheckedCreateInput>
    /**
     * In case the penalti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<penaltiUpdateInput, penaltiUncheckedUpdateInput>
  }

  /**
   * penalti delete
   */
  export type penaltiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    /**
     * Filter which penalti to delete.
     */
    where: penaltiWhereUniqueInput
  }

  /**
   * penalti deleteMany
   */
  export type penaltiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which penaltis to delete
     */
    where?: penaltiWhereInput
    /**
     * Limit how many penaltis to delete.
     */
    limit?: number
  }

  /**
   * penalti without action
   */
  export type penaltiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
  }


  /**
   * Model review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    rating: number | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    rating: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    rating: number | null
    createdAt: Date | null
    komentar: string | null
    updatedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    id_barang: number | null
    rating: number | null
    createdAt: Date | null
    komentar: string | null
    updatedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    id_user: number
    id_barang: number
    rating: number
    createdAt: number
    komentar: number
    updatedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    rating?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    rating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    rating?: true
    createdAt?: true
    komentar?: true
    updatedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    rating?: true
    createdAt?: true
    komentar?: true
    updatedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    id_user?: true
    id_barang?: true
    rating?: true
    createdAt?: true
    komentar?: true
    updatedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which review to aggregate.
     */
    where?: reviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type reviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewWhereInput
    orderBy?: reviewOrderByWithAggregationInput | reviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: reviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    id_user: number
    id_barang: number
    rating: number
    createdAt: Date
    komentar: string
    updatedAt: Date | null
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends reviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type reviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    id_barang?: boolean
    rating?: boolean
    createdAt?: boolean
    komentar?: boolean
    updatedAt?: boolean
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>



  export type reviewSelectScalar = {
    id?: boolean
    id_user?: boolean
    id_barang?: boolean
    rating?: boolean
    createdAt?: boolean
    komentar?: boolean
    updatedAt?: boolean
  }

  export type reviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_user" | "id_barang" | "rating" | "createdAt" | "komentar" | "updatedAt", ExtArgs["result"]["review"]>
  export type reviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | barangDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $reviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "review"
    objects: {
      barang: Prisma.$barangPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      id_barang: number
      rating: number
      createdAt: Date
      komentar: string
      updatedAt: Date | null
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type reviewGetPayload<S extends boolean | null | undefined | reviewDefaultArgs> = $Result.GetResult<Prisma.$reviewPayload, S>

  type reviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface reviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['review'], meta: { name: 'review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {reviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reviewFindUniqueArgs>(args: SelectSubset<T, reviewFindUniqueArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reviewFindUniqueOrThrowArgs>(args: SelectSubset<T, reviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reviewFindFirstArgs>(args?: SelectSubset<T, reviewFindFirstArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reviewFindFirstOrThrowArgs>(args?: SelectSubset<T, reviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reviewFindManyArgs>(args?: SelectSubset<T, reviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {reviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends reviewCreateArgs>(args: SelectSubset<T, reviewCreateArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {reviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reviewCreateManyArgs>(args?: SelectSubset<T, reviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review.
     * @param {reviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends reviewDeleteArgs>(args: SelectSubset<T, reviewDeleteArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {reviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reviewUpdateArgs>(args: SelectSubset<T, reviewUpdateArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {reviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reviewDeleteManyArgs>(args?: SelectSubset<T, reviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reviewUpdateManyArgs>(args: SelectSubset<T, reviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {reviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends reviewUpsertArgs>(args: SelectSubset<T, reviewUpsertArgs<ExtArgs>>): Prisma__reviewClient<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends reviewCountArgs>(
      args?: Subset<T, reviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reviewGroupByArgs['orderBy'] }
        : { orderBy?: reviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the review model
   */
  readonly fields: reviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barang<T extends barangDefaultArgs<ExtArgs> = {}>(args?: Subset<T, barangDefaultArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the review model
   */
  interface reviewFieldRefs {
    readonly id: FieldRef<"review", 'Int'>
    readonly id_user: FieldRef<"review", 'Int'>
    readonly id_barang: FieldRef<"review", 'Int'>
    readonly rating: FieldRef<"review", 'Int'>
    readonly createdAt: FieldRef<"review", 'DateTime'>
    readonly komentar: FieldRef<"review", 'String'>
    readonly updatedAt: FieldRef<"review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * review findUnique
   */
  export type reviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter, which review to fetch.
     */
    where: reviewWhereUniqueInput
  }

  /**
   * review findUniqueOrThrow
   */
  export type reviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter, which review to fetch.
     */
    where: reviewWhereUniqueInput
  }

  /**
   * review findFirst
   */
  export type reviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter, which review to fetch.
     */
    where?: reviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * review findFirstOrThrow
   */
  export type reviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter, which review to fetch.
     */
    where?: reviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * review findMany
   */
  export type reviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reviews.
     */
    cursor?: reviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * review create
   */
  export type reviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * The data needed to create a review.
     */
    data: XOR<reviewCreateInput, reviewUncheckedCreateInput>
  }

  /**
   * review createMany
   */
  export type reviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reviews.
     */
    data: reviewCreateManyInput | reviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * review update
   */
  export type reviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * The data needed to update a review.
     */
    data: XOR<reviewUpdateInput, reviewUncheckedUpdateInput>
    /**
     * Choose, which review to update.
     */
    where: reviewWhereUniqueInput
  }

  /**
   * review updateMany
   */
  export type reviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reviews.
     */
    data: XOR<reviewUpdateManyMutationInput, reviewUncheckedUpdateManyInput>
    /**
     * Filter which reviews to update
     */
    where?: reviewWhereInput
    /**
     * Limit how many reviews to update.
     */
    limit?: number
  }

  /**
   * review upsert
   */
  export type reviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * The filter to search for the review to update in case it exists.
     */
    where: reviewWhereUniqueInput
    /**
     * In case the review found by the `where` argument doesn't exist, create a new review with this data.
     */
    create: XOR<reviewCreateInput, reviewUncheckedCreateInput>
    /**
     * In case the review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reviewUpdateInput, reviewUncheckedUpdateInput>
  }

  /**
   * review delete
   */
  export type reviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    /**
     * Filter which review to delete.
     */
    where: reviewWhereUniqueInput
  }

  /**
   * review deleteMany
   */
  export type reviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reviews to delete
     */
    where?: reviewWhereInput
    /**
     * Limit how many reviews to delete.
     */
    limit?: number
  }

  /**
   * review without action
   */
  export type reviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
  }


  /**
   * Model role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    role_name: string | null
    deskripsi: string | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    role_name: string | null
    deskripsi: string | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    role_name: number
    deskripsi: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    role_name?: true
    deskripsi?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    role_name?: true
    deskripsi?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    role_name?: true
    deskripsi?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role to aggregate.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roleWhereInput
    orderBy?: roleOrderByWithAggregationInput | roleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    role_name: string
    deskripsi: string
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role_name?: boolean
    deskripsi?: boolean
    user?: boolean | role$userArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>



  export type roleSelectScalar = {
    id?: boolean
    role_name?: boolean
    deskripsi?: boolean
  }

  export type roleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role_name" | "deskripsi", ExtArgs["result"]["role"]>
  export type roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | role$userArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role"
    objects: {
      user: Prisma.$userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      role_name: string
      deskripsi: string
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type roleGetPayload<S extends boolean | null | undefined | roleDefaultArgs> = $Result.GetResult<Prisma.$rolePayload, S>

  type roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<roleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role'], meta: { name: 'role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {roleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends roleFindUniqueArgs>(args: SelectSubset<T, roleFindUniqueArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {roleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends roleFindUniqueOrThrowArgs>(args: SelectSubset<T, roleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends roleFindFirstArgs>(args?: SelectSubset<T, roleFindFirstArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends roleFindFirstOrThrowArgs>(args?: SelectSubset<T, roleFindFirstOrThrowArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends roleFindManyArgs>(args?: SelectSubset<T, roleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {roleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends roleCreateArgs>(args: SelectSubset<T, roleCreateArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {roleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends roleCreateManyArgs>(args?: SelectSubset<T, roleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {roleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends roleDeleteArgs>(args: SelectSubset<T, roleDeleteArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {roleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends roleUpdateArgs>(args: SelectSubset<T, roleUpdateArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {roleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends roleDeleteManyArgs>(args?: SelectSubset<T, roleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends roleUpdateManyArgs>(args: SelectSubset<T, roleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {roleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends roleUpsertArgs>(args: SelectSubset<T, roleUpsertArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends roleCountArgs>(
      args?: Subset<T, roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: roleGroupByArgs['orderBy'] }
        : { orderBy?: roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role model
   */
  readonly fields: roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends role$userArgs<ExtArgs> = {}>(args?: Subset<T, role$userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role model
   */
  interface roleFieldRefs {
    readonly id: FieldRef<"role", 'Int'>
    readonly role_name: FieldRef<"role", 'String'>
    readonly deskripsi: FieldRef<"role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * role findUnique
   */
  export type roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role findUniqueOrThrow
   */
  export type roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role findFirst
   */
  export type roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role findFirstOrThrow
   */
  export type roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which role to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role findMany
   */
  export type roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: roleOrderByWithRelationInput | roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * role create
   */
  export type roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to create a role.
     */
    data: XOR<roleCreateInput, roleUncheckedCreateInput>
  }

  /**
   * role createMany
   */
  export type roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: roleCreateManyInput | roleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role update
   */
  export type roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The data needed to update a role.
     */
    data: XOR<roleUpdateInput, roleUncheckedUpdateInput>
    /**
     * Choose, which role to update.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role updateMany
   */
  export type roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<roleUpdateManyMutationInput, roleUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: roleWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * role upsert
   */
  export type roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * The filter to search for the role to update in case it exists.
     */
    where: roleWhereUniqueInput
    /**
     * In case the role found by the `where` argument doesn't exist, create a new role with this data.
     */
    create: XOR<roleCreateInput, roleUncheckedCreateInput>
    /**
     * In case the role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<roleUpdateInput, roleUncheckedUpdateInput>
  }

  /**
   * role delete
   */
  export type roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
    /**
     * Filter which role to delete.
     */
    where: roleWhereUniqueInput
  }

  /**
   * role deleteMany
   */
  export type roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: roleWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * role.user
   */
  export type role$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    cursor?: userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * role without action
   */
  export type roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role
     */
    select?: roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role
     */
    omit?: roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roleInclude<ExtArgs> | null
  }


  /**
   * Model sewa_items
   */

  export type AggregateSewa_items = {
    _count: Sewa_itemsCountAggregateOutputType | null
    _avg: Sewa_itemsAvgAggregateOutputType | null
    _sum: Sewa_itemsSumAggregateOutputType | null
    _min: Sewa_itemsMinAggregateOutputType | null
    _max: Sewa_itemsMaxAggregateOutputType | null
  }

  export type Sewa_itemsAvgAggregateOutputType = {
    id: number | null
    id_sewa_req: number | null
    id_barang: number | null
    jumlah: number | null
    harga_total: number | null
  }

  export type Sewa_itemsSumAggregateOutputType = {
    id: number | null
    id_sewa_req: number | null
    id_barang: number | null
    jumlah: number | null
    harga_total: number | null
  }

  export type Sewa_itemsMinAggregateOutputType = {
    id: number | null
    id_sewa_req: number | null
    id_barang: number | null
    jumlah: number | null
    harga_total: number | null
  }

  export type Sewa_itemsMaxAggregateOutputType = {
    id: number | null
    id_sewa_req: number | null
    id_barang: number | null
    jumlah: number | null
    harga_total: number | null
  }

  export type Sewa_itemsCountAggregateOutputType = {
    id: number
    id_sewa_req: number
    id_barang: number
    jumlah: number
    harga_total: number
    _all: number
  }


  export type Sewa_itemsAvgAggregateInputType = {
    id?: true
    id_sewa_req?: true
    id_barang?: true
    jumlah?: true
    harga_total?: true
  }

  export type Sewa_itemsSumAggregateInputType = {
    id?: true
    id_sewa_req?: true
    id_barang?: true
    jumlah?: true
    harga_total?: true
  }

  export type Sewa_itemsMinAggregateInputType = {
    id?: true
    id_sewa_req?: true
    id_barang?: true
    jumlah?: true
    harga_total?: true
  }

  export type Sewa_itemsMaxAggregateInputType = {
    id?: true
    id_sewa_req?: true
    id_barang?: true
    jumlah?: true
    harga_total?: true
  }

  export type Sewa_itemsCountAggregateInputType = {
    id?: true
    id_sewa_req?: true
    id_barang?: true
    jumlah?: true
    harga_total?: true
    _all?: true
  }

  export type Sewa_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sewa_items to aggregate.
     */
    where?: sewa_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_items to fetch.
     */
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sewa_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sewa_items
    **/
    _count?: true | Sewa_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sewa_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sewa_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sewa_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sewa_itemsMaxAggregateInputType
  }

  export type GetSewa_itemsAggregateType<T extends Sewa_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateSewa_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSewa_items[P]>
      : GetScalarType<T[P], AggregateSewa_items[P]>
  }




  export type sewa_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sewa_itemsWhereInput
    orderBy?: sewa_itemsOrderByWithAggregationInput | sewa_itemsOrderByWithAggregationInput[]
    by: Sewa_itemsScalarFieldEnum[] | Sewa_itemsScalarFieldEnum
    having?: sewa_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sewa_itemsCountAggregateInputType | true
    _avg?: Sewa_itemsAvgAggregateInputType
    _sum?: Sewa_itemsSumAggregateInputType
    _min?: Sewa_itemsMinAggregateInputType
    _max?: Sewa_itemsMaxAggregateInputType
  }

  export type Sewa_itemsGroupByOutputType = {
    id: number
    id_sewa_req: number
    id_barang: number
    jumlah: number
    harga_total: number
    _count: Sewa_itemsCountAggregateOutputType | null
    _avg: Sewa_itemsAvgAggregateOutputType | null
    _sum: Sewa_itemsSumAggregateOutputType | null
    _min: Sewa_itemsMinAggregateOutputType | null
    _max: Sewa_itemsMaxAggregateOutputType | null
  }

  type GetSewa_itemsGroupByPayload<T extends sewa_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sewa_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sewa_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sewa_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Sewa_itemsGroupByOutputType[P]>
        }
      >
    >


  export type sewa_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_sewa_req?: boolean
    id_barang?: boolean
    jumlah?: boolean
    harga_total?: boolean
    barang?: boolean | barangDefaultArgs<ExtArgs>
    sewa_req?: boolean | sewa_reqDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sewa_items"]>



  export type sewa_itemsSelectScalar = {
    id?: boolean
    id_sewa_req?: boolean
    id_barang?: boolean
    jumlah?: boolean
    harga_total?: boolean
  }

  export type sewa_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_sewa_req" | "id_barang" | "jumlah" | "harga_total", ExtArgs["result"]["sewa_items"]>
  export type sewa_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barang?: boolean | barangDefaultArgs<ExtArgs>
    sewa_req?: boolean | sewa_reqDefaultArgs<ExtArgs>
  }

  export type $sewa_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sewa_items"
    objects: {
      barang: Prisma.$barangPayload<ExtArgs>
      sewa_req: Prisma.$sewa_reqPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_sewa_req: number
      id_barang: number
      jumlah: number
      harga_total: number
    }, ExtArgs["result"]["sewa_items"]>
    composites: {}
  }

  type sewa_itemsGetPayload<S extends boolean | null | undefined | sewa_itemsDefaultArgs> = $Result.GetResult<Prisma.$sewa_itemsPayload, S>

  type sewa_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sewa_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sewa_itemsCountAggregateInputType | true
    }

  export interface sewa_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sewa_items'], meta: { name: 'sewa_items' } }
    /**
     * Find zero or one Sewa_items that matches the filter.
     * @param {sewa_itemsFindUniqueArgs} args - Arguments to find a Sewa_items
     * @example
     * // Get one Sewa_items
     * const sewa_items = await prisma.sewa_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sewa_itemsFindUniqueArgs>(args: SelectSubset<T, sewa_itemsFindUniqueArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sewa_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sewa_itemsFindUniqueOrThrowArgs} args - Arguments to find a Sewa_items
     * @example
     * // Get one Sewa_items
     * const sewa_items = await prisma.sewa_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sewa_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, sewa_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sewa_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsFindFirstArgs} args - Arguments to find a Sewa_items
     * @example
     * // Get one Sewa_items
     * const sewa_items = await prisma.sewa_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sewa_itemsFindFirstArgs>(args?: SelectSubset<T, sewa_itemsFindFirstArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sewa_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsFindFirstOrThrowArgs} args - Arguments to find a Sewa_items
     * @example
     * // Get one Sewa_items
     * const sewa_items = await prisma.sewa_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sewa_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, sewa_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sewa_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sewa_items
     * const sewa_items = await prisma.sewa_items.findMany()
     * 
     * // Get first 10 Sewa_items
     * const sewa_items = await prisma.sewa_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sewa_itemsWithIdOnly = await prisma.sewa_items.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sewa_itemsFindManyArgs>(args?: SelectSubset<T, sewa_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sewa_items.
     * @param {sewa_itemsCreateArgs} args - Arguments to create a Sewa_items.
     * @example
     * // Create one Sewa_items
     * const Sewa_items = await prisma.sewa_items.create({
     *   data: {
     *     // ... data to create a Sewa_items
     *   }
     * })
     * 
     */
    create<T extends sewa_itemsCreateArgs>(args: SelectSubset<T, sewa_itemsCreateArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sewa_items.
     * @param {sewa_itemsCreateManyArgs} args - Arguments to create many Sewa_items.
     * @example
     * // Create many Sewa_items
     * const sewa_items = await prisma.sewa_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sewa_itemsCreateManyArgs>(args?: SelectSubset<T, sewa_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sewa_items.
     * @param {sewa_itemsDeleteArgs} args - Arguments to delete one Sewa_items.
     * @example
     * // Delete one Sewa_items
     * const Sewa_items = await prisma.sewa_items.delete({
     *   where: {
     *     // ... filter to delete one Sewa_items
     *   }
     * })
     * 
     */
    delete<T extends sewa_itemsDeleteArgs>(args: SelectSubset<T, sewa_itemsDeleteArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sewa_items.
     * @param {sewa_itemsUpdateArgs} args - Arguments to update one Sewa_items.
     * @example
     * // Update one Sewa_items
     * const sewa_items = await prisma.sewa_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sewa_itemsUpdateArgs>(args: SelectSubset<T, sewa_itemsUpdateArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sewa_items.
     * @param {sewa_itemsDeleteManyArgs} args - Arguments to filter Sewa_items to delete.
     * @example
     * // Delete a few Sewa_items
     * const { count } = await prisma.sewa_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sewa_itemsDeleteManyArgs>(args?: SelectSubset<T, sewa_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sewa_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sewa_items
     * const sewa_items = await prisma.sewa_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sewa_itemsUpdateManyArgs>(args: SelectSubset<T, sewa_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sewa_items.
     * @param {sewa_itemsUpsertArgs} args - Arguments to update or create a Sewa_items.
     * @example
     * // Update or create a Sewa_items
     * const sewa_items = await prisma.sewa_items.upsert({
     *   create: {
     *     // ... data to create a Sewa_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sewa_items we want to update
     *   }
     * })
     */
    upsert<T extends sewa_itemsUpsertArgs>(args: SelectSubset<T, sewa_itemsUpsertArgs<ExtArgs>>): Prisma__sewa_itemsClient<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sewa_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsCountArgs} args - Arguments to filter Sewa_items to count.
     * @example
     * // Count the number of Sewa_items
     * const count = await prisma.sewa_items.count({
     *   where: {
     *     // ... the filter for the Sewa_items we want to count
     *   }
     * })
    **/
    count<T extends sewa_itemsCountArgs>(
      args?: Subset<T, sewa_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sewa_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sewa_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sewa_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sewa_itemsAggregateArgs>(args: Subset<T, Sewa_itemsAggregateArgs>): Prisma.PrismaPromise<GetSewa_itemsAggregateType<T>>

    /**
     * Group by Sewa_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sewa_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sewa_itemsGroupByArgs['orderBy'] }
        : { orderBy?: sewa_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sewa_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSewa_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sewa_items model
   */
  readonly fields: sewa_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sewa_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sewa_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barang<T extends barangDefaultArgs<ExtArgs> = {}>(args?: Subset<T, barangDefaultArgs<ExtArgs>>): Prisma__barangClient<$Result.GetResult<Prisma.$barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sewa_req<T extends sewa_reqDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sewa_reqDefaultArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sewa_items model
   */
  interface sewa_itemsFieldRefs {
    readonly id: FieldRef<"sewa_items", 'Int'>
    readonly id_sewa_req: FieldRef<"sewa_items", 'Int'>
    readonly id_barang: FieldRef<"sewa_items", 'Int'>
    readonly jumlah: FieldRef<"sewa_items", 'Int'>
    readonly harga_total: FieldRef<"sewa_items", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * sewa_items findUnique
   */
  export type sewa_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter, which sewa_items to fetch.
     */
    where: sewa_itemsWhereUniqueInput
  }

  /**
   * sewa_items findUniqueOrThrow
   */
  export type sewa_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter, which sewa_items to fetch.
     */
    where: sewa_itemsWhereUniqueInput
  }

  /**
   * sewa_items findFirst
   */
  export type sewa_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter, which sewa_items to fetch.
     */
    where?: sewa_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_items to fetch.
     */
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sewa_items.
     */
    cursor?: sewa_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sewa_items.
     */
    distinct?: Sewa_itemsScalarFieldEnum | Sewa_itemsScalarFieldEnum[]
  }

  /**
   * sewa_items findFirstOrThrow
   */
  export type sewa_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter, which sewa_items to fetch.
     */
    where?: sewa_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_items to fetch.
     */
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sewa_items.
     */
    cursor?: sewa_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sewa_items.
     */
    distinct?: Sewa_itemsScalarFieldEnum | Sewa_itemsScalarFieldEnum[]
  }

  /**
   * sewa_items findMany
   */
  export type sewa_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter, which sewa_items to fetch.
     */
    where?: sewa_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_items to fetch.
     */
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sewa_items.
     */
    cursor?: sewa_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_items.
     */
    skip?: number
    distinct?: Sewa_itemsScalarFieldEnum | Sewa_itemsScalarFieldEnum[]
  }

  /**
   * sewa_items create
   */
  export type sewa_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a sewa_items.
     */
    data: XOR<sewa_itemsCreateInput, sewa_itemsUncheckedCreateInput>
  }

  /**
   * sewa_items createMany
   */
  export type sewa_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sewa_items.
     */
    data: sewa_itemsCreateManyInput | sewa_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sewa_items update
   */
  export type sewa_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a sewa_items.
     */
    data: XOR<sewa_itemsUpdateInput, sewa_itemsUncheckedUpdateInput>
    /**
     * Choose, which sewa_items to update.
     */
    where: sewa_itemsWhereUniqueInput
  }

  /**
   * sewa_items updateMany
   */
  export type sewa_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sewa_items.
     */
    data: XOR<sewa_itemsUpdateManyMutationInput, sewa_itemsUncheckedUpdateManyInput>
    /**
     * Filter which sewa_items to update
     */
    where?: sewa_itemsWhereInput
    /**
     * Limit how many sewa_items to update.
     */
    limit?: number
  }

  /**
   * sewa_items upsert
   */
  export type sewa_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the sewa_items to update in case it exists.
     */
    where: sewa_itemsWhereUniqueInput
    /**
     * In case the sewa_items found by the `where` argument doesn't exist, create a new sewa_items with this data.
     */
    create: XOR<sewa_itemsCreateInput, sewa_itemsUncheckedCreateInput>
    /**
     * In case the sewa_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sewa_itemsUpdateInput, sewa_itemsUncheckedUpdateInput>
  }

  /**
   * sewa_items delete
   */
  export type sewa_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    /**
     * Filter which sewa_items to delete.
     */
    where: sewa_itemsWhereUniqueInput
  }

  /**
   * sewa_items deleteMany
   */
  export type sewa_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sewa_items to delete
     */
    where?: sewa_itemsWhereInput
    /**
     * Limit how many sewa_items to delete.
     */
    limit?: number
  }

  /**
   * sewa_items without action
   */
  export type sewa_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
  }


  /**
   * Model sewa_req
   */

  export type AggregateSewa_req = {
    _count: Sewa_reqCountAggregateOutputType | null
    _avg: Sewa_reqAvgAggregateOutputType | null
    _sum: Sewa_reqSumAggregateOutputType | null
    _min: Sewa_reqMinAggregateOutputType | null
    _max: Sewa_reqMaxAggregateOutputType | null
  }

  export type Sewa_reqAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Sewa_reqSumAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Sewa_reqMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    start_date: Date | null
    end_date: Date | null
    status: string | null
    dikembalikan_pada: Date | null
  }

  export type Sewa_reqMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    start_date: Date | null
    end_date: Date | null
    status: string | null
    dikembalikan_pada: Date | null
  }

  export type Sewa_reqCountAggregateOutputType = {
    id: number
    id_user: number
    start_date: number
    end_date: number
    status: number
    dikembalikan_pada: number
    _all: number
  }


  export type Sewa_reqAvgAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Sewa_reqSumAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Sewa_reqMinAggregateInputType = {
    id?: true
    id_user?: true
    start_date?: true
    end_date?: true
    status?: true
    dikembalikan_pada?: true
  }

  export type Sewa_reqMaxAggregateInputType = {
    id?: true
    id_user?: true
    start_date?: true
    end_date?: true
    status?: true
    dikembalikan_pada?: true
  }

  export type Sewa_reqCountAggregateInputType = {
    id?: true
    id_user?: true
    start_date?: true
    end_date?: true
    status?: true
    dikembalikan_pada?: true
    _all?: true
  }

  export type Sewa_reqAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sewa_req to aggregate.
     */
    where?: sewa_reqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_reqs to fetch.
     */
    orderBy?: sewa_reqOrderByWithRelationInput | sewa_reqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sewa_reqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_reqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_reqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sewa_reqs
    **/
    _count?: true | Sewa_reqCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sewa_reqAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sewa_reqSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sewa_reqMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sewa_reqMaxAggregateInputType
  }

  export type GetSewa_reqAggregateType<T extends Sewa_reqAggregateArgs> = {
        [P in keyof T & keyof AggregateSewa_req]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSewa_req[P]>
      : GetScalarType<T[P], AggregateSewa_req[P]>
  }




  export type sewa_reqGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sewa_reqWhereInput
    orderBy?: sewa_reqOrderByWithAggregationInput | sewa_reqOrderByWithAggregationInput[]
    by: Sewa_reqScalarFieldEnum[] | Sewa_reqScalarFieldEnum
    having?: sewa_reqScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sewa_reqCountAggregateInputType | true
    _avg?: Sewa_reqAvgAggregateInputType
    _sum?: Sewa_reqSumAggregateInputType
    _min?: Sewa_reqMinAggregateInputType
    _max?: Sewa_reqMaxAggregateInputType
  }

  export type Sewa_reqGroupByOutputType = {
    id: number
    id_user: number
    start_date: Date
    end_date: Date
    status: string
    dikembalikan_pada: Date | null
    _count: Sewa_reqCountAggregateOutputType | null
    _avg: Sewa_reqAvgAggregateOutputType | null
    _sum: Sewa_reqSumAggregateOutputType | null
    _min: Sewa_reqMinAggregateOutputType | null
    _max: Sewa_reqMaxAggregateOutputType | null
  }

  type GetSewa_reqGroupByPayload<T extends sewa_reqGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sewa_reqGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sewa_reqGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sewa_reqGroupByOutputType[P]>
            : GetScalarType<T[P], Sewa_reqGroupByOutputType[P]>
        }
      >
    >


  export type sewa_reqSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    dikembalikan_pada?: boolean
    sewa_items?: boolean | sewa_req$sewa_itemsArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | Sewa_reqCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sewa_req"]>



  export type sewa_reqSelectScalar = {
    id?: boolean
    id_user?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    dikembalikan_pada?: boolean
  }

  export type sewa_reqOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_user" | "start_date" | "end_date" | "status" | "dikembalikan_pada", ExtArgs["result"]["sewa_req"]>
  export type sewa_reqInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sewa_items?: boolean | sewa_req$sewa_itemsArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | Sewa_reqCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $sewa_reqPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sewa_req"
    objects: {
      sewa_items: Prisma.$sewa_itemsPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      start_date: Date
      end_date: Date
      status: string
      dikembalikan_pada: Date | null
    }, ExtArgs["result"]["sewa_req"]>
    composites: {}
  }

  type sewa_reqGetPayload<S extends boolean | null | undefined | sewa_reqDefaultArgs> = $Result.GetResult<Prisma.$sewa_reqPayload, S>

  type sewa_reqCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sewa_reqFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sewa_reqCountAggregateInputType | true
    }

  export interface sewa_reqDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sewa_req'], meta: { name: 'sewa_req' } }
    /**
     * Find zero or one Sewa_req that matches the filter.
     * @param {sewa_reqFindUniqueArgs} args - Arguments to find a Sewa_req
     * @example
     * // Get one Sewa_req
     * const sewa_req = await prisma.sewa_req.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sewa_reqFindUniqueArgs>(args: SelectSubset<T, sewa_reqFindUniqueArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sewa_req that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sewa_reqFindUniqueOrThrowArgs} args - Arguments to find a Sewa_req
     * @example
     * // Get one Sewa_req
     * const sewa_req = await prisma.sewa_req.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sewa_reqFindUniqueOrThrowArgs>(args: SelectSubset<T, sewa_reqFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sewa_req that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqFindFirstArgs} args - Arguments to find a Sewa_req
     * @example
     * // Get one Sewa_req
     * const sewa_req = await prisma.sewa_req.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sewa_reqFindFirstArgs>(args?: SelectSubset<T, sewa_reqFindFirstArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sewa_req that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqFindFirstOrThrowArgs} args - Arguments to find a Sewa_req
     * @example
     * // Get one Sewa_req
     * const sewa_req = await prisma.sewa_req.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sewa_reqFindFirstOrThrowArgs>(args?: SelectSubset<T, sewa_reqFindFirstOrThrowArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sewa_reqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sewa_reqs
     * const sewa_reqs = await prisma.sewa_req.findMany()
     * 
     * // Get first 10 Sewa_reqs
     * const sewa_reqs = await prisma.sewa_req.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sewa_reqWithIdOnly = await prisma.sewa_req.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sewa_reqFindManyArgs>(args?: SelectSubset<T, sewa_reqFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sewa_req.
     * @param {sewa_reqCreateArgs} args - Arguments to create a Sewa_req.
     * @example
     * // Create one Sewa_req
     * const Sewa_req = await prisma.sewa_req.create({
     *   data: {
     *     // ... data to create a Sewa_req
     *   }
     * })
     * 
     */
    create<T extends sewa_reqCreateArgs>(args: SelectSubset<T, sewa_reqCreateArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sewa_reqs.
     * @param {sewa_reqCreateManyArgs} args - Arguments to create many Sewa_reqs.
     * @example
     * // Create many Sewa_reqs
     * const sewa_req = await prisma.sewa_req.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sewa_reqCreateManyArgs>(args?: SelectSubset<T, sewa_reqCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sewa_req.
     * @param {sewa_reqDeleteArgs} args - Arguments to delete one Sewa_req.
     * @example
     * // Delete one Sewa_req
     * const Sewa_req = await prisma.sewa_req.delete({
     *   where: {
     *     // ... filter to delete one Sewa_req
     *   }
     * })
     * 
     */
    delete<T extends sewa_reqDeleteArgs>(args: SelectSubset<T, sewa_reqDeleteArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sewa_req.
     * @param {sewa_reqUpdateArgs} args - Arguments to update one Sewa_req.
     * @example
     * // Update one Sewa_req
     * const sewa_req = await prisma.sewa_req.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sewa_reqUpdateArgs>(args: SelectSubset<T, sewa_reqUpdateArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sewa_reqs.
     * @param {sewa_reqDeleteManyArgs} args - Arguments to filter Sewa_reqs to delete.
     * @example
     * // Delete a few Sewa_reqs
     * const { count } = await prisma.sewa_req.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sewa_reqDeleteManyArgs>(args?: SelectSubset<T, sewa_reqDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sewa_reqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sewa_reqs
     * const sewa_req = await prisma.sewa_req.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sewa_reqUpdateManyArgs>(args: SelectSubset<T, sewa_reqUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sewa_req.
     * @param {sewa_reqUpsertArgs} args - Arguments to update or create a Sewa_req.
     * @example
     * // Update or create a Sewa_req
     * const sewa_req = await prisma.sewa_req.upsert({
     *   create: {
     *     // ... data to create a Sewa_req
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sewa_req we want to update
     *   }
     * })
     */
    upsert<T extends sewa_reqUpsertArgs>(args: SelectSubset<T, sewa_reqUpsertArgs<ExtArgs>>): Prisma__sewa_reqClient<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sewa_reqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqCountArgs} args - Arguments to filter Sewa_reqs to count.
     * @example
     * // Count the number of Sewa_reqs
     * const count = await prisma.sewa_req.count({
     *   where: {
     *     // ... the filter for the Sewa_reqs we want to count
     *   }
     * })
    **/
    count<T extends sewa_reqCountArgs>(
      args?: Subset<T, sewa_reqCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sewa_reqCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sewa_req.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sewa_reqAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sewa_reqAggregateArgs>(args: Subset<T, Sewa_reqAggregateArgs>): Prisma.PrismaPromise<GetSewa_reqAggregateType<T>>

    /**
     * Group by Sewa_req.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sewa_reqGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sewa_reqGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sewa_reqGroupByArgs['orderBy'] }
        : { orderBy?: sewa_reqGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sewa_reqGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSewa_reqGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sewa_req model
   */
  readonly fields: sewa_reqFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sewa_req.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sewa_reqClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sewa_items<T extends sewa_req$sewa_itemsArgs<ExtArgs> = {}>(args?: Subset<T, sewa_req$sewa_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sewa_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sewa_req model
   */
  interface sewa_reqFieldRefs {
    readonly id: FieldRef<"sewa_req", 'Int'>
    readonly id_user: FieldRef<"sewa_req", 'Int'>
    readonly start_date: FieldRef<"sewa_req", 'DateTime'>
    readonly end_date: FieldRef<"sewa_req", 'DateTime'>
    readonly status: FieldRef<"sewa_req", 'String'>
    readonly dikembalikan_pada: FieldRef<"sewa_req", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sewa_req findUnique
   */
  export type sewa_reqFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter, which sewa_req to fetch.
     */
    where: sewa_reqWhereUniqueInput
  }

  /**
   * sewa_req findUniqueOrThrow
   */
  export type sewa_reqFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter, which sewa_req to fetch.
     */
    where: sewa_reqWhereUniqueInput
  }

  /**
   * sewa_req findFirst
   */
  export type sewa_reqFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter, which sewa_req to fetch.
     */
    where?: sewa_reqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_reqs to fetch.
     */
    orderBy?: sewa_reqOrderByWithRelationInput | sewa_reqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sewa_reqs.
     */
    cursor?: sewa_reqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_reqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_reqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sewa_reqs.
     */
    distinct?: Sewa_reqScalarFieldEnum | Sewa_reqScalarFieldEnum[]
  }

  /**
   * sewa_req findFirstOrThrow
   */
  export type sewa_reqFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter, which sewa_req to fetch.
     */
    where?: sewa_reqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_reqs to fetch.
     */
    orderBy?: sewa_reqOrderByWithRelationInput | sewa_reqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sewa_reqs.
     */
    cursor?: sewa_reqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_reqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_reqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sewa_reqs.
     */
    distinct?: Sewa_reqScalarFieldEnum | Sewa_reqScalarFieldEnum[]
  }

  /**
   * sewa_req findMany
   */
  export type sewa_reqFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter, which sewa_reqs to fetch.
     */
    where?: sewa_reqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sewa_reqs to fetch.
     */
    orderBy?: sewa_reqOrderByWithRelationInput | sewa_reqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sewa_reqs.
     */
    cursor?: sewa_reqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sewa_reqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sewa_reqs.
     */
    skip?: number
    distinct?: Sewa_reqScalarFieldEnum | Sewa_reqScalarFieldEnum[]
  }

  /**
   * sewa_req create
   */
  export type sewa_reqCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * The data needed to create a sewa_req.
     */
    data: XOR<sewa_reqCreateInput, sewa_reqUncheckedCreateInput>
  }

  /**
   * sewa_req createMany
   */
  export type sewa_reqCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sewa_reqs.
     */
    data: sewa_reqCreateManyInput | sewa_reqCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sewa_req update
   */
  export type sewa_reqUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * The data needed to update a sewa_req.
     */
    data: XOR<sewa_reqUpdateInput, sewa_reqUncheckedUpdateInput>
    /**
     * Choose, which sewa_req to update.
     */
    where: sewa_reqWhereUniqueInput
  }

  /**
   * sewa_req updateMany
   */
  export type sewa_reqUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sewa_reqs.
     */
    data: XOR<sewa_reqUpdateManyMutationInput, sewa_reqUncheckedUpdateManyInput>
    /**
     * Filter which sewa_reqs to update
     */
    where?: sewa_reqWhereInput
    /**
     * Limit how many sewa_reqs to update.
     */
    limit?: number
  }

  /**
   * sewa_req upsert
   */
  export type sewa_reqUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * The filter to search for the sewa_req to update in case it exists.
     */
    where: sewa_reqWhereUniqueInput
    /**
     * In case the sewa_req found by the `where` argument doesn't exist, create a new sewa_req with this data.
     */
    create: XOR<sewa_reqCreateInput, sewa_reqUncheckedCreateInput>
    /**
     * In case the sewa_req was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sewa_reqUpdateInput, sewa_reqUncheckedUpdateInput>
  }

  /**
   * sewa_req delete
   */
  export type sewa_reqDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    /**
     * Filter which sewa_req to delete.
     */
    where: sewa_reqWhereUniqueInput
  }

  /**
   * sewa_req deleteMany
   */
  export type sewa_reqDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sewa_reqs to delete
     */
    where?: sewa_reqWhereInput
    /**
     * Limit how many sewa_reqs to delete.
     */
    limit?: number
  }

  /**
   * sewa_req.sewa_items
   */
  export type sewa_req$sewa_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_items
     */
    select?: sewa_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_items
     */
    omit?: sewa_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_itemsInclude<ExtArgs> | null
    where?: sewa_itemsWhereInput
    orderBy?: sewa_itemsOrderByWithRelationInput | sewa_itemsOrderByWithRelationInput[]
    cursor?: sewa_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sewa_itemsScalarFieldEnum | Sewa_itemsScalarFieldEnum[]
  }

  /**
   * sewa_req without action
   */
  export type sewa_reqDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
  }


  /**
   * Model tags
   */

  export type AggregateTags = {
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  export type TagsAvgAggregateOutputType = {
    id: number | null
  }

  export type TagsSumAggregateOutputType = {
    id: number | null
  }

  export type TagsMinAggregateOutputType = {
    nama: string | null
    id: number | null
  }

  export type TagsMaxAggregateOutputType = {
    nama: string | null
    id: number | null
  }

  export type TagsCountAggregateOutputType = {
    nama: number
    id: number
    _all: number
  }


  export type TagsAvgAggregateInputType = {
    id?: true
  }

  export type TagsSumAggregateInputType = {
    id?: true
  }

  export type TagsMinAggregateInputType = {
    nama?: true
    id?: true
  }

  export type TagsMaxAggregateInputType = {
    nama?: true
    id?: true
  }

  export type TagsCountAggregateInputType = {
    nama?: true
    id?: true
    _all?: true
  }

  export type TagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to aggregate.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tags
    **/
    _count?: true | TagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagsMaxAggregateInputType
  }

  export type GetTagsAggregateType<T extends TagsAggregateArgs> = {
        [P in keyof T & keyof AggregateTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTags[P]>
      : GetScalarType<T[P], AggregateTags[P]>
  }




  export type tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tagsWhereInput
    orderBy?: tagsOrderByWithAggregationInput | tagsOrderByWithAggregationInput[]
    by: TagsScalarFieldEnum[] | TagsScalarFieldEnum
    having?: tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagsCountAggregateInputType | true
    _avg?: TagsAvgAggregateInputType
    _sum?: TagsSumAggregateInputType
    _min?: TagsMinAggregateInputType
    _max?: TagsMaxAggregateInputType
  }

  export type TagsGroupByOutputType = {
    nama: string
    id: number
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  type GetTagsGroupByPayload<T extends tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagsGroupByOutputType[P]>
            : GetScalarType<T[P], TagsGroupByOutputType[P]>
        }
      >
    >


  export type tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nama?: boolean
    id?: boolean
    artikel?: boolean | tags$artikelArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tags"]>



  export type tagsSelectScalar = {
    nama?: boolean
    id?: boolean
  }

  export type tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"nama" | "id", ExtArgs["result"]["tags"]>
  export type tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel?: boolean | tags$artikelArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tags"
    objects: {
      artikel: Prisma.$artikelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nama: string
      id: number
    }, ExtArgs["result"]["tags"]>
    composites: {}
  }

  type tagsGetPayload<S extends boolean | null | undefined | tagsDefaultArgs> = $Result.GetResult<Prisma.$tagsPayload, S>

  type tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagsCountAggregateInputType | true
    }

  export interface tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tags'], meta: { name: 'tags' } }
    /**
     * Find zero or one Tags that matches the filter.
     * @param {tagsFindUniqueArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tagsFindUniqueArgs>(args: SelectSubset<T, tagsFindUniqueArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tagsFindUniqueOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tagsFindFirstArgs>(args?: SelectSubset<T, tagsFindFirstArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tags.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tags.findMany({ take: 10 })
     * 
     * // Only select the `nama`
     * const tagsWithNamaOnly = await prisma.tags.findMany({ select: { nama: true } })
     * 
     */
    findMany<T extends tagsFindManyArgs>(args?: SelectSubset<T, tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tags.
     * @param {tagsCreateArgs} args - Arguments to create a Tags.
     * @example
     * // Create one Tags
     * const Tags = await prisma.tags.create({
     *   data: {
     *     // ... data to create a Tags
     *   }
     * })
     * 
     */
    create<T extends tagsCreateArgs>(args: SelectSubset<T, tagsCreateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {tagsCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tagsCreateManyArgs>(args?: SelectSubset<T, tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tags.
     * @param {tagsDeleteArgs} args - Arguments to delete one Tags.
     * @example
     * // Delete one Tags
     * const Tags = await prisma.tags.delete({
     *   where: {
     *     // ... filter to delete one Tags
     *   }
     * })
     * 
     */
    delete<T extends tagsDeleteArgs>(args: SelectSubset<T, tagsDeleteArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tags.
     * @param {tagsUpdateArgs} args - Arguments to update one Tags.
     * @example
     * // Update one Tags
     * const tags = await prisma.tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tagsUpdateArgs>(args: SelectSubset<T, tagsUpdateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {tagsDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tagsDeleteManyArgs>(args?: SelectSubset<T, tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tagsUpdateManyArgs>(args: SelectSubset<T, tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tags.
     * @param {tagsUpsertArgs} args - Arguments to update or create a Tags.
     * @example
     * // Update or create a Tags
     * const tags = await prisma.tags.upsert({
     *   create: {
     *     // ... data to create a Tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tags we want to update
     *   }
     * })
     */
    upsert<T extends tagsUpsertArgs>(args: SelectSubset<T, tagsUpsertArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tags.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends tagsCountArgs>(
      args?: Subset<T, tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagsAggregateArgs>(args: Subset<T, TagsAggregateArgs>): Prisma.PrismaPromise<GetTagsAggregateType<T>>

    /**
     * Group by Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tagsGroupByArgs['orderBy'] }
        : { orderBy?: tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tags model
   */
  readonly fields: tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    artikel<T extends tags$artikelArgs<ExtArgs> = {}>(args?: Subset<T, tags$artikelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$artikelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tags model
   */
  interface tagsFieldRefs {
    readonly nama: FieldRef<"tags", 'String'>
    readonly id: FieldRef<"tags", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tags findUnique
   */
  export type tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findUniqueOrThrow
   */
  export type tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findFirst
   */
  export type tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findFirstOrThrow
   */
  export type tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findMany
   */
  export type tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags create
   */
  export type tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a tags.
     */
    data: XOR<tagsCreateInput, tagsUncheckedCreateInput>
  }

  /**
   * tags createMany
   */
  export type tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tags.
     */
    data: tagsCreateManyInput | tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tags update
   */
  export type tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a tags.
     */
    data: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
    /**
     * Choose, which tags to update.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags updateMany
   */
  export type tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tags.
     */
    data: XOR<tagsUpdateManyMutationInput, tagsUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tags upsert
   */
  export type tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the tags to update in case it exists.
     */
    where: tagsWhereUniqueInput
    /**
     * In case the tags found by the `where` argument doesn't exist, create a new tags with this data.
     */
    create: XOR<tagsCreateInput, tagsUncheckedCreateInput>
    /**
     * In case the tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
  }

  /**
   * tags delete
   */
  export type tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter which tags to delete.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags deleteMany
   */
  export type tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to delete
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to delete.
     */
    limit?: number
  }

  /**
   * tags.artikel
   */
  export type tags$artikelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel
     */
    select?: artikelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel
     */
    omit?: artikelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikelInclude<ExtArgs> | null
    where?: artikelWhereInput
    orderBy?: artikelOrderByWithRelationInput | artikelOrderByWithRelationInput[]
    cursor?: artikelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArtikelScalarFieldEnum | ArtikelScalarFieldEnum[]
  }

  /**
   * tags without action
   */
  export type tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
  }


  /**
   * Model transaksi
   */

  export type AggregateTransaksi = {
    _count: TransaksiCountAggregateOutputType | null
    _avg: TransaksiAvgAggregateOutputType | null
    _sum: TransaksiSumAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  export type TransaksiAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
    total_pembayaran: number | null
  }

  export type TransaksiSumAggregateOutputType = {
    id: number | null
    id_user: number | null
    total_pembayaran: number | null
  }

  export type TransaksiMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    total_pembayaran: number | null
    tanggal_transaksi: Date | null
    status: string | null
  }

  export type TransaksiMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    total_pembayaran: number | null
    tanggal_transaksi: Date | null
    status: string | null
  }

  export type TransaksiCountAggregateOutputType = {
    id: number
    id_user: number
    total_pembayaran: number
    tanggal_transaksi: number
    status: number
    _all: number
  }


  export type TransaksiAvgAggregateInputType = {
    id?: true
    id_user?: true
    total_pembayaran?: true
  }

  export type TransaksiSumAggregateInputType = {
    id?: true
    id_user?: true
    total_pembayaran?: true
  }

  export type TransaksiMinAggregateInputType = {
    id?: true
    id_user?: true
    total_pembayaran?: true
    tanggal_transaksi?: true
    status?: true
  }

  export type TransaksiMaxAggregateInputType = {
    id?: true
    id_user?: true
    total_pembayaran?: true
    tanggal_transaksi?: true
    status?: true
  }

  export type TransaksiCountAggregateInputType = {
    id?: true
    id_user?: true
    total_pembayaran?: true
    tanggal_transaksi?: true
    status?: true
    _all?: true
  }

  export type TransaksiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaksi to aggregate.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transaksis
    **/
    _count?: true | TransaksiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaksiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaksiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaksiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaksiMaxAggregateInputType
  }

  export type GetTransaksiAggregateType<T extends TransaksiAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaksi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaksi[P]>
      : GetScalarType<T[P], AggregateTransaksi[P]>
  }




  export type transaksiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithAggregationInput | transaksiOrderByWithAggregationInput[]
    by: TransaksiScalarFieldEnum[] | TransaksiScalarFieldEnum
    having?: transaksiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaksiCountAggregateInputType | true
    _avg?: TransaksiAvgAggregateInputType
    _sum?: TransaksiSumAggregateInputType
    _min?: TransaksiMinAggregateInputType
    _max?: TransaksiMaxAggregateInputType
  }

  export type TransaksiGroupByOutputType = {
    id: number
    id_user: number
    total_pembayaran: number
    tanggal_transaksi: Date
    status: string
    _count: TransaksiCountAggregateOutputType | null
    _avg: TransaksiAvgAggregateOutputType | null
    _sum: TransaksiSumAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  type GetTransaksiGroupByPayload<T extends transaksiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaksiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaksiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
            : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
        }
      >
    >


  export type transaksiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    total_pembayaran?: boolean
    tanggal_transaksi?: boolean
    status?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi"]>



  export type transaksiSelectScalar = {
    id?: boolean
    id_user?: boolean
    total_pembayaran?: boolean
    tanggal_transaksi?: boolean
    status?: boolean
  }

  export type transaksiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_user" | "total_pembayaran" | "tanggal_transaksi" | "status", ExtArgs["result"]["transaksi"]>
  export type transaksiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $transaksiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaksi"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      total_pembayaran: number
      tanggal_transaksi: Date
      status: string
    }, ExtArgs["result"]["transaksi"]>
    composites: {}
  }

  type transaksiGetPayload<S extends boolean | null | undefined | transaksiDefaultArgs> = $Result.GetResult<Prisma.$transaksiPayload, S>

  type transaksiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transaksiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaksiCountAggregateInputType | true
    }

  export interface transaksiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaksi'], meta: { name: 'transaksi' } }
    /**
     * Find zero or one Transaksi that matches the filter.
     * @param {transaksiFindUniqueArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transaksiFindUniqueArgs>(args: SelectSubset<T, transaksiFindUniqueArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaksi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transaksiFindUniqueOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transaksiFindUniqueOrThrowArgs>(args: SelectSubset<T, transaksiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaksi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindFirstArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transaksiFindFirstArgs>(args?: SelectSubset<T, transaksiFindFirstArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaksi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindFirstOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transaksiFindFirstOrThrowArgs>(args?: SelectSubset<T, transaksiFindFirstOrThrowArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaksis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaksis
     * const transaksis = await prisma.transaksi.findMany()
     * 
     * // Get first 10 Transaksis
     * const transaksis = await prisma.transaksi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaksiWithIdOnly = await prisma.transaksi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transaksiFindManyArgs>(args?: SelectSubset<T, transaksiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaksi.
     * @param {transaksiCreateArgs} args - Arguments to create a Transaksi.
     * @example
     * // Create one Transaksi
     * const Transaksi = await prisma.transaksi.create({
     *   data: {
     *     // ... data to create a Transaksi
     *   }
     * })
     * 
     */
    create<T extends transaksiCreateArgs>(args: SelectSubset<T, transaksiCreateArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaksis.
     * @param {transaksiCreateManyArgs} args - Arguments to create many Transaksis.
     * @example
     * // Create many Transaksis
     * const transaksi = await prisma.transaksi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transaksiCreateManyArgs>(args?: SelectSubset<T, transaksiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Transaksi.
     * @param {transaksiDeleteArgs} args - Arguments to delete one Transaksi.
     * @example
     * // Delete one Transaksi
     * const Transaksi = await prisma.transaksi.delete({
     *   where: {
     *     // ... filter to delete one Transaksi
     *   }
     * })
     * 
     */
    delete<T extends transaksiDeleteArgs>(args: SelectSubset<T, transaksiDeleteArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaksi.
     * @param {transaksiUpdateArgs} args - Arguments to update one Transaksi.
     * @example
     * // Update one Transaksi
     * const transaksi = await prisma.transaksi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transaksiUpdateArgs>(args: SelectSubset<T, transaksiUpdateArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaksis.
     * @param {transaksiDeleteManyArgs} args - Arguments to filter Transaksis to delete.
     * @example
     * // Delete a few Transaksis
     * const { count } = await prisma.transaksi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transaksiDeleteManyArgs>(args?: SelectSubset<T, transaksiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaksis
     * const transaksi = await prisma.transaksi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transaksiUpdateManyArgs>(args: SelectSubset<T, transaksiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transaksi.
     * @param {transaksiUpsertArgs} args - Arguments to update or create a Transaksi.
     * @example
     * // Update or create a Transaksi
     * const transaksi = await prisma.transaksi.upsert({
     *   create: {
     *     // ... data to create a Transaksi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaksi we want to update
     *   }
     * })
     */
    upsert<T extends transaksiUpsertArgs>(args: SelectSubset<T, transaksiUpsertArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiCountArgs} args - Arguments to filter Transaksis to count.
     * @example
     * // Count the number of Transaksis
     * const count = await prisma.transaksi.count({
     *   where: {
     *     // ... the filter for the Transaksis we want to count
     *   }
     * })
    **/
    count<T extends transaksiCountArgs>(
      args?: Subset<T, transaksiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaksiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaksiAggregateArgs>(args: Subset<T, TransaksiAggregateArgs>): Prisma.PrismaPromise<GetTransaksiAggregateType<T>>

    /**
     * Group by Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transaksiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transaksiGroupByArgs['orderBy'] }
        : { orderBy?: transaksiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transaksiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaksiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaksi model
   */
  readonly fields: transaksiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaksi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transaksiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transaksi model
   */
  interface transaksiFieldRefs {
    readonly id: FieldRef<"transaksi", 'Int'>
    readonly id_user: FieldRef<"transaksi", 'Int'>
    readonly total_pembayaran: FieldRef<"transaksi", 'Float'>
    readonly tanggal_transaksi: FieldRef<"transaksi", 'DateTime'>
    readonly status: FieldRef<"transaksi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * transaksi findUnique
   */
  export type transaksiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi findUniqueOrThrow
   */
  export type transaksiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi findFirst
   */
  export type transaksiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi findFirstOrThrow
   */
  export type transaksiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi findMany
   */
  export type transaksiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksis to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi create
   */
  export type transaksiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The data needed to create a transaksi.
     */
    data: XOR<transaksiCreateInput, transaksiUncheckedCreateInput>
  }

  /**
   * transaksi createMany
   */
  export type transaksiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transaksis.
     */
    data: transaksiCreateManyInput | transaksiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaksi update
   */
  export type transaksiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The data needed to update a transaksi.
     */
    data: XOR<transaksiUpdateInput, transaksiUncheckedUpdateInput>
    /**
     * Choose, which transaksi to update.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi updateMany
   */
  export type transaksiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transaksis.
     */
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyInput>
    /**
     * Filter which transaksis to update
     */
    where?: transaksiWhereInput
    /**
     * Limit how many transaksis to update.
     */
    limit?: number
  }

  /**
   * transaksi upsert
   */
  export type transaksiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The filter to search for the transaksi to update in case it exists.
     */
    where: transaksiWhereUniqueInput
    /**
     * In case the transaksi found by the `where` argument doesn't exist, create a new transaksi with this data.
     */
    create: XOR<transaksiCreateInput, transaksiUncheckedCreateInput>
    /**
     * In case the transaksi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transaksiUpdateInput, transaksiUncheckedUpdateInput>
  }

  /**
   * transaksi delete
   */
  export type transaksiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter which transaksi to delete.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi deleteMany
   */
  export type transaksiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaksis to delete
     */
    where?: transaksiWhereInput
    /**
     * Limit how many transaksis to delete.
     */
    limit?: number
  }

  /**
   * transaksi without action
   */
  export type transaksiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    no_telp: string | null
    alamat: string | null
    is_blacklisted: boolean | null
    role_id: number | null
    email: string | null
    remember_token: string | null
    avatar: string | null
    createdAt: Date | null
    date_of_birth: Date | null
    full_name: string | null
    provider: string | null
    provider_id: string | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    no_telp: string | null
    alamat: string | null
    is_blacklisted: boolean | null
    role_id: number | null
    email: string | null
    remember_token: string | null
    avatar: string | null
    createdAt: Date | null
    date_of_birth: Date | null
    full_name: string | null
    provider: string | null
    provider_id: string | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    no_telp: number
    alamat: number
    is_blacklisted: number
    role_id: number
    email: number
    remember_token: number
    avatar: number
    createdAt: number
    date_of_birth: number
    full_name: number
    provider: number
    provider_id: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    no_telp?: true
    alamat?: true
    is_blacklisted?: true
    role_id?: true
    email?: true
    remember_token?: true
    avatar?: true
    createdAt?: true
    date_of_birth?: true
    full_name?: true
    provider?: true
    provider_id?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    no_telp?: true
    alamat?: true
    is_blacklisted?: true
    role_id?: true
    email?: true
    remember_token?: true
    avatar?: true
    createdAt?: true
    date_of_birth?: true
    full_name?: true
    provider?: true
    provider_id?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    no_telp?: true
    alamat?: true
    is_blacklisted?: true
    role_id?: true
    email?: true
    remember_token?: true
    avatar?: true
    createdAt?: true
    date_of_birth?: true
    full_name?: true
    provider?: true
    provider_id?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    password: string
    no_telp: string | null
    alamat: string | null
    is_blacklisted: boolean
    role_id: number
    email: string
    remember_token: string | null
    avatar: string | null
    createdAt: Date
    date_of_birth: Date | null
    full_name: string | null
    provider: string | null
    provider_id: string | null
    updatedAt: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    no_telp?: boolean
    alamat?: boolean
    is_blacklisted?: boolean
    role_id?: boolean
    email?: boolean
    remember_token?: boolean
    avatar?: boolean
    createdAt?: boolean
    date_of_birth?: boolean
    full_name?: boolean
    provider?: boolean
    provider_id?: boolean
    updatedAt?: boolean
    artikel_comment?: boolean | user$artikel_commentArgs<ExtArgs>
    keranjang?: boolean | user$keranjangArgs<ExtArgs>
    penalti?: boolean | user$penaltiArgs<ExtArgs>
    review?: boolean | user$reviewArgs<ExtArgs>
    sewa_req?: boolean | user$sewa_reqArgs<ExtArgs>
    transaksi?: boolean | user$transaksiArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type userSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    no_telp?: boolean
    alamat?: boolean
    is_blacklisted?: boolean
    role_id?: boolean
    email?: boolean
    remember_token?: boolean
    avatar?: boolean
    createdAt?: boolean
    date_of_birth?: boolean
    full_name?: boolean
    provider?: boolean
    provider_id?: boolean
    updatedAt?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "no_telp" | "alamat" | "is_blacklisted" | "role_id" | "email" | "remember_token" | "avatar" | "createdAt" | "date_of_birth" | "full_name" | "provider" | "provider_id" | "updatedAt", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    artikel_comment?: boolean | user$artikel_commentArgs<ExtArgs>
    keranjang?: boolean | user$keranjangArgs<ExtArgs>
    penalti?: boolean | user$penaltiArgs<ExtArgs>
    review?: boolean | user$reviewArgs<ExtArgs>
    sewa_req?: boolean | user$sewa_reqArgs<ExtArgs>
    transaksi?: boolean | user$transaksiArgs<ExtArgs>
    role?: boolean | roleDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      artikel_comment: Prisma.$artikel_commentPayload<ExtArgs>[]
      keranjang: Prisma.$keranjangPayload<ExtArgs>[]
      penalti: Prisma.$penaltiPayload<ExtArgs>[]
      review: Prisma.$reviewPayload<ExtArgs>[]
      sewa_req: Prisma.$sewa_reqPayload<ExtArgs>[]
      transaksi: Prisma.$transaksiPayload<ExtArgs>[]
      role: Prisma.$rolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      no_telp: string | null
      alamat: string | null
      is_blacklisted: boolean
      role_id: number
      email: string
      remember_token: string | null
      avatar: string | null
      createdAt: Date
      date_of_birth: Date | null
      full_name: string | null
      provider: string | null
      provider_id: string | null
      updatedAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    artikel_comment<T extends user$artikel_commentArgs<ExtArgs> = {}>(args?: Subset<T, user$artikel_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$artikel_commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    keranjang<T extends user$keranjangArgs<ExtArgs> = {}>(args?: Subset<T, user$keranjangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keranjangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    penalti<T extends user$penaltiArgs<ExtArgs> = {}>(args?: Subset<T, user$penaltiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$penaltiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    review<T extends user$reviewArgs<ExtArgs> = {}>(args?: Subset<T, user$reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sewa_req<T extends user$sewa_reqArgs<ExtArgs> = {}>(args?: Subset<T, user$sewa_reqArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sewa_reqPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaksi<T extends user$transaksiArgs<ExtArgs> = {}>(args?: Subset<T, user$transaksiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role<T extends roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, roleDefaultArgs<ExtArgs>>): Prisma__roleClient<$Result.GetResult<Prisma.$rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly username: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly no_telp: FieldRef<"user", 'String'>
    readonly alamat: FieldRef<"user", 'String'>
    readonly is_blacklisted: FieldRef<"user", 'Boolean'>
    readonly role_id: FieldRef<"user", 'Int'>
    readonly email: FieldRef<"user", 'String'>
    readonly remember_token: FieldRef<"user", 'String'>
    readonly avatar: FieldRef<"user", 'String'>
    readonly createdAt: FieldRef<"user", 'DateTime'>
    readonly date_of_birth: FieldRef<"user", 'DateTime'>
    readonly full_name: FieldRef<"user", 'String'>
    readonly provider: FieldRef<"user", 'String'>
    readonly provider_id: FieldRef<"user", 'String'>
    readonly updatedAt: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * user.artikel_comment
   */
  export type user$artikel_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the artikel_comment
     */
    select?: artikel_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the artikel_comment
     */
    omit?: artikel_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: artikel_commentInclude<ExtArgs> | null
    where?: artikel_commentWhereInput
    orderBy?: artikel_commentOrderByWithRelationInput | artikel_commentOrderByWithRelationInput[]
    cursor?: artikel_commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Artikel_commentScalarFieldEnum | Artikel_commentScalarFieldEnum[]
  }

  /**
   * user.keranjang
   */
  export type user$keranjangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keranjang
     */
    select?: keranjangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keranjang
     */
    omit?: keranjangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keranjangInclude<ExtArgs> | null
    where?: keranjangWhereInput
    orderBy?: keranjangOrderByWithRelationInput | keranjangOrderByWithRelationInput[]
    cursor?: keranjangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KeranjangScalarFieldEnum | KeranjangScalarFieldEnum[]
  }

  /**
   * user.penalti
   */
  export type user$penaltiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the penalti
     */
    select?: penaltiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the penalti
     */
    omit?: penaltiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: penaltiInclude<ExtArgs> | null
    where?: penaltiWhereInput
    orderBy?: penaltiOrderByWithRelationInput | penaltiOrderByWithRelationInput[]
    cursor?: penaltiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PenaltiScalarFieldEnum | PenaltiScalarFieldEnum[]
  }

  /**
   * user.review
   */
  export type user$reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the review
     */
    select?: reviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the review
     */
    omit?: reviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewInclude<ExtArgs> | null
    where?: reviewWhereInput
    orderBy?: reviewOrderByWithRelationInput | reviewOrderByWithRelationInput[]
    cursor?: reviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * user.sewa_req
   */
  export type user$sewa_reqArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sewa_req
     */
    select?: sewa_reqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sewa_req
     */
    omit?: sewa_reqOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sewa_reqInclude<ExtArgs> | null
    where?: sewa_reqWhereInput
    orderBy?: sewa_reqOrderByWithRelationInput | sewa_reqOrderByWithRelationInput[]
    cursor?: sewa_reqWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sewa_reqScalarFieldEnum | Sewa_reqScalarFieldEnum[]
  }

  /**
   * user.transaksi
   */
  export type user$transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaksi
     */
    omit?: transaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    cursor?: transaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ArtikelScalarFieldEnum: {
    id: 'id',
    judul: 'judul',
    konten: 'konten',
    foto: 'foto',
    id_tags: 'id_tags',
    createdAt: 'createdAt',
    is_deleted: 'is_deleted',
    is_published: 'is_published',
    publishAt: 'publishAt',
    updatedAt: 'updatedAt'
  };

  export type ArtikelScalarFieldEnum = (typeof ArtikelScalarFieldEnum)[keyof typeof ArtikelScalarFieldEnum]


  export const Artikel_commentScalarFieldEnum: {
    id: 'id',
    id_artikel: 'id_artikel',
    id_user: 'id_user',
    komen_teks: 'komen_teks'
  };

  export type Artikel_commentScalarFieldEnum = (typeof Artikel_commentScalarFieldEnum)[keyof typeof Artikel_commentScalarFieldEnum]


  export const BarangScalarFieldEnum: {
    id: 'id',
    stok: 'stok',
    foto: 'foto',
    harga_pinalti_per_jam: 'harga_pinalti_per_jam',
    kategori_id: 'kategori_id',
    harga: 'harga',
    nama: 'nama'
  };

  export type BarangScalarFieldEnum = (typeof BarangScalarFieldEnum)[keyof typeof BarangScalarFieldEnum]


  export const KategoriScalarFieldEnum: {
    id: 'id',
    nama: 'nama'
  };

  export type KategoriScalarFieldEnum = (typeof KategoriScalarFieldEnum)[keyof typeof KategoriScalarFieldEnum]


  export const KeranjangScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    id_barang: 'id_barang',
    jumlah: 'jumlah',
    subtotal: 'subtotal'
  };

  export type KeranjangScalarFieldEnum = (typeof KeranjangScalarFieldEnum)[keyof typeof KeranjangScalarFieldEnum]


  export const PenaltiScalarFieldEnum: {
    id: 'id',
    id_barang: 'id_barang',
    id_user: 'id_user',
    total_bayar: 'total_bayar'
  };

  export type PenaltiScalarFieldEnum = (typeof PenaltiScalarFieldEnum)[keyof typeof PenaltiScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    id_barang: 'id_barang',
    rating: 'rating',
    createdAt: 'createdAt',
    komentar: 'komentar',
    updatedAt: 'updatedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    role_name: 'role_name',
    deskripsi: 'deskripsi'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const Sewa_itemsScalarFieldEnum: {
    id: 'id',
    id_sewa_req: 'id_sewa_req',
    id_barang: 'id_barang',
    jumlah: 'jumlah',
    harga_total: 'harga_total'
  };

  export type Sewa_itemsScalarFieldEnum = (typeof Sewa_itemsScalarFieldEnum)[keyof typeof Sewa_itemsScalarFieldEnum]


  export const Sewa_reqScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    start_date: 'start_date',
    end_date: 'end_date',
    status: 'status',
    dikembalikan_pada: 'dikembalikan_pada'
  };

  export type Sewa_reqScalarFieldEnum = (typeof Sewa_reqScalarFieldEnum)[keyof typeof Sewa_reqScalarFieldEnum]


  export const TagsScalarFieldEnum: {
    nama: 'nama',
    id: 'id'
  };

  export type TagsScalarFieldEnum = (typeof TagsScalarFieldEnum)[keyof typeof TagsScalarFieldEnum]


  export const TransaksiScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    total_pembayaran: 'total_pembayaran',
    tanggal_transaksi: 'tanggal_transaksi',
    status: 'status'
  };

  export type TransaksiScalarFieldEnum = (typeof TransaksiScalarFieldEnum)[keyof typeof TransaksiScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    no_telp: 'no_telp',
    alamat: 'alamat',
    is_blacklisted: 'is_blacklisted',
    role_id: 'role_id',
    email: 'email',
    remember_token: 'remember_token',
    avatar: 'avatar',
    createdAt: 'createdAt',
    date_of_birth: 'date_of_birth',
    full_name: 'full_name',
    provider: 'provider',
    provider_id: 'provider_id',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const artikelOrderByRelevanceFieldEnum: {
    judul: 'judul',
    konten: 'konten',
    foto: 'foto'
  };

  export type artikelOrderByRelevanceFieldEnum = (typeof artikelOrderByRelevanceFieldEnum)[keyof typeof artikelOrderByRelevanceFieldEnum]


  export const artikel_commentOrderByRelevanceFieldEnum: {
    komen_teks: 'komen_teks'
  };

  export type artikel_commentOrderByRelevanceFieldEnum = (typeof artikel_commentOrderByRelevanceFieldEnum)[keyof typeof artikel_commentOrderByRelevanceFieldEnum]


  export const barangOrderByRelevanceFieldEnum: {
    foto: 'foto',
    nama: 'nama'
  };

  export type barangOrderByRelevanceFieldEnum = (typeof barangOrderByRelevanceFieldEnum)[keyof typeof barangOrderByRelevanceFieldEnum]


  export const kategoriOrderByRelevanceFieldEnum: {
    nama: 'nama'
  };

  export type kategoriOrderByRelevanceFieldEnum = (typeof kategoriOrderByRelevanceFieldEnum)[keyof typeof kategoriOrderByRelevanceFieldEnum]


  export const reviewOrderByRelevanceFieldEnum: {
    komentar: 'komentar'
  };

  export type reviewOrderByRelevanceFieldEnum = (typeof reviewOrderByRelevanceFieldEnum)[keyof typeof reviewOrderByRelevanceFieldEnum]


  export const roleOrderByRelevanceFieldEnum: {
    role_name: 'role_name',
    deskripsi: 'deskripsi'
  };

  export type roleOrderByRelevanceFieldEnum = (typeof roleOrderByRelevanceFieldEnum)[keyof typeof roleOrderByRelevanceFieldEnum]


  export const sewa_reqOrderByRelevanceFieldEnum: {
    status: 'status'
  };

  export type sewa_reqOrderByRelevanceFieldEnum = (typeof sewa_reqOrderByRelevanceFieldEnum)[keyof typeof sewa_reqOrderByRelevanceFieldEnum]


  export const tagsOrderByRelevanceFieldEnum: {
    nama: 'nama'
  };

  export type tagsOrderByRelevanceFieldEnum = (typeof tagsOrderByRelevanceFieldEnum)[keyof typeof tagsOrderByRelevanceFieldEnum]


  export const transaksiOrderByRelevanceFieldEnum: {
    status: 'status'
  };

  export type transaksiOrderByRelevanceFieldEnum = (typeof transaksiOrderByRelevanceFieldEnum)[keyof typeof transaksiOrderByRelevanceFieldEnum]


  export const userOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password',
    no_telp: 'no_telp',
    alamat: 'alamat',
    email: 'email',
    remember_token: 'remember_token',
    avatar: 'avatar',
    full_name: 'full_name',
    provider: 'provider',
    provider_id: 'provider_id'
  };

  export type userOrderByRelevanceFieldEnum = (typeof userOrderByRelevanceFieldEnum)[keyof typeof userOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type artikelWhereInput = {
    AND?: artikelWhereInput | artikelWhereInput[]
    OR?: artikelWhereInput[]
    NOT?: artikelWhereInput | artikelWhereInput[]
    id?: IntFilter<"artikel"> | number
    judul?: StringFilter<"artikel"> | string
    konten?: StringFilter<"artikel"> | string
    foto?: StringFilter<"artikel"> | string
    id_tags?: IntFilter<"artikel"> | number
    createdAt?: DateTimeFilter<"artikel"> | Date | string
    is_deleted?: BoolFilter<"artikel"> | boolean
    is_published?: BoolFilter<"artikel"> | boolean
    publishAt?: DateTimeFilter<"artikel"> | Date | string
    updatedAt?: DateTimeNullableFilter<"artikel"> | Date | string | null
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
    artikel_comment?: Artikel_commentListRelationFilter
  }

  export type artikelOrderByWithRelationInput = {
    id?: SortOrder
    judul?: SortOrder
    konten?: SortOrder
    foto?: SortOrder
    id_tags?: SortOrder
    createdAt?: SortOrder
    is_deleted?: SortOrder
    is_published?: SortOrder
    publishAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    tags?: tagsOrderByWithRelationInput
    artikel_comment?: artikel_commentOrderByRelationAggregateInput
    _relevance?: artikelOrderByRelevanceInput
  }

  export type artikelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: artikelWhereInput | artikelWhereInput[]
    OR?: artikelWhereInput[]
    NOT?: artikelWhereInput | artikelWhereInput[]
    judul?: StringFilter<"artikel"> | string
    konten?: StringFilter<"artikel"> | string
    foto?: StringFilter<"artikel"> | string
    id_tags?: IntFilter<"artikel"> | number
    createdAt?: DateTimeFilter<"artikel"> | Date | string
    is_deleted?: BoolFilter<"artikel"> | boolean
    is_published?: BoolFilter<"artikel"> | boolean
    publishAt?: DateTimeFilter<"artikel"> | Date | string
    updatedAt?: DateTimeNullableFilter<"artikel"> | Date | string | null
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
    artikel_comment?: Artikel_commentListRelationFilter
  }, "id">

  export type artikelOrderByWithAggregationInput = {
    id?: SortOrder
    judul?: SortOrder
    konten?: SortOrder
    foto?: SortOrder
    id_tags?: SortOrder
    createdAt?: SortOrder
    is_deleted?: SortOrder
    is_published?: SortOrder
    publishAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: artikelCountOrderByAggregateInput
    _avg?: artikelAvgOrderByAggregateInput
    _max?: artikelMaxOrderByAggregateInput
    _min?: artikelMinOrderByAggregateInput
    _sum?: artikelSumOrderByAggregateInput
  }

  export type artikelScalarWhereWithAggregatesInput = {
    AND?: artikelScalarWhereWithAggregatesInput | artikelScalarWhereWithAggregatesInput[]
    OR?: artikelScalarWhereWithAggregatesInput[]
    NOT?: artikelScalarWhereWithAggregatesInput | artikelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"artikel"> | number
    judul?: StringWithAggregatesFilter<"artikel"> | string
    konten?: StringWithAggregatesFilter<"artikel"> | string
    foto?: StringWithAggregatesFilter<"artikel"> | string
    id_tags?: IntWithAggregatesFilter<"artikel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"artikel"> | Date | string
    is_deleted?: BoolWithAggregatesFilter<"artikel"> | boolean
    is_published?: BoolWithAggregatesFilter<"artikel"> | boolean
    publishAt?: DateTimeWithAggregatesFilter<"artikel"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"artikel"> | Date | string | null
  }

  export type artikel_commentWhereInput = {
    AND?: artikel_commentWhereInput | artikel_commentWhereInput[]
    OR?: artikel_commentWhereInput[]
    NOT?: artikel_commentWhereInput | artikel_commentWhereInput[]
    id?: IntFilter<"artikel_comment"> | number
    id_artikel?: IntFilter<"artikel_comment"> | number
    id_user?: IntFilter<"artikel_comment"> | number
    komen_teks?: StringFilter<"artikel_comment"> | string
    artikel?: XOR<ArtikelScalarRelationFilter, artikelWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type artikel_commentOrderByWithRelationInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
    komen_teks?: SortOrder
    artikel?: artikelOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    _relevance?: artikel_commentOrderByRelevanceInput
  }

  export type artikel_commentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: artikel_commentWhereInput | artikel_commentWhereInput[]
    OR?: artikel_commentWhereInput[]
    NOT?: artikel_commentWhereInput | artikel_commentWhereInput[]
    id_artikel?: IntFilter<"artikel_comment"> | number
    id_user?: IntFilter<"artikel_comment"> | number
    komen_teks?: StringFilter<"artikel_comment"> | string
    artikel?: XOR<ArtikelScalarRelationFilter, artikelWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type artikel_commentOrderByWithAggregationInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
    komen_teks?: SortOrder
    _count?: artikel_commentCountOrderByAggregateInput
    _avg?: artikel_commentAvgOrderByAggregateInput
    _max?: artikel_commentMaxOrderByAggregateInput
    _min?: artikel_commentMinOrderByAggregateInput
    _sum?: artikel_commentSumOrderByAggregateInput
  }

  export type artikel_commentScalarWhereWithAggregatesInput = {
    AND?: artikel_commentScalarWhereWithAggregatesInput | artikel_commentScalarWhereWithAggregatesInput[]
    OR?: artikel_commentScalarWhereWithAggregatesInput[]
    NOT?: artikel_commentScalarWhereWithAggregatesInput | artikel_commentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"artikel_comment"> | number
    id_artikel?: IntWithAggregatesFilter<"artikel_comment"> | number
    id_user?: IntWithAggregatesFilter<"artikel_comment"> | number
    komen_teks?: StringWithAggregatesFilter<"artikel_comment"> | string
  }

  export type barangWhereInput = {
    AND?: barangWhereInput | barangWhereInput[]
    OR?: barangWhereInput[]
    NOT?: barangWhereInput | barangWhereInput[]
    id?: IntFilter<"barang"> | number
    stok?: IntFilter<"barang"> | number
    foto?: StringFilter<"barang"> | string
    harga_pinalti_per_jam?: FloatFilter<"barang"> | number
    kategori_id?: IntFilter<"barang"> | number
    harga?: FloatFilter<"barang"> | number
    nama?: StringFilter<"barang"> | string
    kategori?: XOR<KategoriScalarRelationFilter, kategoriWhereInput>
    keranjang?: KeranjangListRelationFilter
    penalti?: PenaltiListRelationFilter
    review?: ReviewListRelationFilter
    sewa_items?: Sewa_itemsListRelationFilter
  }

  export type barangOrderByWithRelationInput = {
    id?: SortOrder
    stok?: SortOrder
    foto?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
    nama?: SortOrder
    kategori?: kategoriOrderByWithRelationInput
    keranjang?: keranjangOrderByRelationAggregateInput
    penalti?: penaltiOrderByRelationAggregateInput
    review?: reviewOrderByRelationAggregateInput
    sewa_items?: sewa_itemsOrderByRelationAggregateInput
    _relevance?: barangOrderByRelevanceInput
  }

  export type barangWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: barangWhereInput | barangWhereInput[]
    OR?: barangWhereInput[]
    NOT?: barangWhereInput | barangWhereInput[]
    stok?: IntFilter<"barang"> | number
    foto?: StringFilter<"barang"> | string
    harga_pinalti_per_jam?: FloatFilter<"barang"> | number
    kategori_id?: IntFilter<"barang"> | number
    harga?: FloatFilter<"barang"> | number
    nama?: StringFilter<"barang"> | string
    kategori?: XOR<KategoriScalarRelationFilter, kategoriWhereInput>
    keranjang?: KeranjangListRelationFilter
    penalti?: PenaltiListRelationFilter
    review?: ReviewListRelationFilter
    sewa_items?: Sewa_itemsListRelationFilter
  }, "id">

  export type barangOrderByWithAggregationInput = {
    id?: SortOrder
    stok?: SortOrder
    foto?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
    nama?: SortOrder
    _count?: barangCountOrderByAggregateInput
    _avg?: barangAvgOrderByAggregateInput
    _max?: barangMaxOrderByAggregateInput
    _min?: barangMinOrderByAggregateInput
    _sum?: barangSumOrderByAggregateInput
  }

  export type barangScalarWhereWithAggregatesInput = {
    AND?: barangScalarWhereWithAggregatesInput | barangScalarWhereWithAggregatesInput[]
    OR?: barangScalarWhereWithAggregatesInput[]
    NOT?: barangScalarWhereWithAggregatesInput | barangScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"barang"> | number
    stok?: IntWithAggregatesFilter<"barang"> | number
    foto?: StringWithAggregatesFilter<"barang"> | string
    harga_pinalti_per_jam?: FloatWithAggregatesFilter<"barang"> | number
    kategori_id?: IntWithAggregatesFilter<"barang"> | number
    harga?: FloatWithAggregatesFilter<"barang"> | number
    nama?: StringWithAggregatesFilter<"barang"> | string
  }

  export type kategoriWhereInput = {
    AND?: kategoriWhereInput | kategoriWhereInput[]
    OR?: kategoriWhereInput[]
    NOT?: kategoriWhereInput | kategoriWhereInput[]
    id?: IntFilter<"kategori"> | number
    nama?: StringFilter<"kategori"> | string
    barang?: BarangListRelationFilter
  }

  export type kategoriOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    barang?: barangOrderByRelationAggregateInput
    _relevance?: kategoriOrderByRelevanceInput
  }

  export type kategoriWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: kategoriWhereInput | kategoriWhereInput[]
    OR?: kategoriWhereInput[]
    NOT?: kategoriWhereInput | kategoriWhereInput[]
    nama?: StringFilter<"kategori"> | string
    barang?: BarangListRelationFilter
  }, "id">

  export type kategoriOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    _count?: kategoriCountOrderByAggregateInput
    _avg?: kategoriAvgOrderByAggregateInput
    _max?: kategoriMaxOrderByAggregateInput
    _min?: kategoriMinOrderByAggregateInput
    _sum?: kategoriSumOrderByAggregateInput
  }

  export type kategoriScalarWhereWithAggregatesInput = {
    AND?: kategoriScalarWhereWithAggregatesInput | kategoriScalarWhereWithAggregatesInput[]
    OR?: kategoriScalarWhereWithAggregatesInput[]
    NOT?: kategoriScalarWhereWithAggregatesInput | kategoriScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"kategori"> | number
    nama?: StringWithAggregatesFilter<"kategori"> | string
  }

  export type keranjangWhereInput = {
    AND?: keranjangWhereInput | keranjangWhereInput[]
    OR?: keranjangWhereInput[]
    NOT?: keranjangWhereInput | keranjangWhereInput[]
    id?: IntFilter<"keranjang"> | number
    id_user?: IntFilter<"keranjang"> | number
    id_barang?: IntFilter<"keranjang"> | number
    jumlah?: IntFilter<"keranjang"> | number
    subtotal?: FloatFilter<"keranjang"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type keranjangOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
    barang?: barangOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type keranjangWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: keranjangWhereInput | keranjangWhereInput[]
    OR?: keranjangWhereInput[]
    NOT?: keranjangWhereInput | keranjangWhereInput[]
    id_user?: IntFilter<"keranjang"> | number
    id_barang?: IntFilter<"keranjang"> | number
    jumlah?: IntFilter<"keranjang"> | number
    subtotal?: FloatFilter<"keranjang"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type keranjangOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
    _count?: keranjangCountOrderByAggregateInput
    _avg?: keranjangAvgOrderByAggregateInput
    _max?: keranjangMaxOrderByAggregateInput
    _min?: keranjangMinOrderByAggregateInput
    _sum?: keranjangSumOrderByAggregateInput
  }

  export type keranjangScalarWhereWithAggregatesInput = {
    AND?: keranjangScalarWhereWithAggregatesInput | keranjangScalarWhereWithAggregatesInput[]
    OR?: keranjangScalarWhereWithAggregatesInput[]
    NOT?: keranjangScalarWhereWithAggregatesInput | keranjangScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"keranjang"> | number
    id_user?: IntWithAggregatesFilter<"keranjang"> | number
    id_barang?: IntWithAggregatesFilter<"keranjang"> | number
    jumlah?: IntWithAggregatesFilter<"keranjang"> | number
    subtotal?: FloatWithAggregatesFilter<"keranjang"> | number
  }

  export type penaltiWhereInput = {
    AND?: penaltiWhereInput | penaltiWhereInput[]
    OR?: penaltiWhereInput[]
    NOT?: penaltiWhereInput | penaltiWhereInput[]
    id?: IntFilter<"penalti"> | number
    id_barang?: IntFilter<"penalti"> | number
    id_user?: IntFilter<"penalti"> | number
    total_bayar?: FloatFilter<"penalti"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type penaltiOrderByWithRelationInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
    barang?: barangOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type penaltiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: penaltiWhereInput | penaltiWhereInput[]
    OR?: penaltiWhereInput[]
    NOT?: penaltiWhereInput | penaltiWhereInput[]
    id_barang?: IntFilter<"penalti"> | number
    id_user?: IntFilter<"penalti"> | number
    total_bayar?: FloatFilter<"penalti"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type penaltiOrderByWithAggregationInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
    _count?: penaltiCountOrderByAggregateInput
    _avg?: penaltiAvgOrderByAggregateInput
    _max?: penaltiMaxOrderByAggregateInput
    _min?: penaltiMinOrderByAggregateInput
    _sum?: penaltiSumOrderByAggregateInput
  }

  export type penaltiScalarWhereWithAggregatesInput = {
    AND?: penaltiScalarWhereWithAggregatesInput | penaltiScalarWhereWithAggregatesInput[]
    OR?: penaltiScalarWhereWithAggregatesInput[]
    NOT?: penaltiScalarWhereWithAggregatesInput | penaltiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"penalti"> | number
    id_barang?: IntWithAggregatesFilter<"penalti"> | number
    id_user?: IntWithAggregatesFilter<"penalti"> | number
    total_bayar?: FloatWithAggregatesFilter<"penalti"> | number
  }

  export type reviewWhereInput = {
    AND?: reviewWhereInput | reviewWhereInput[]
    OR?: reviewWhereInput[]
    NOT?: reviewWhereInput | reviewWhereInput[]
    id?: IntFilter<"review"> | number
    id_user?: IntFilter<"review"> | number
    id_barang?: IntFilter<"review"> | number
    rating?: IntFilter<"review"> | number
    createdAt?: DateTimeFilter<"review"> | Date | string
    komentar?: StringFilter<"review"> | string
    updatedAt?: DateTimeNullableFilter<"review"> | Date | string | null
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type reviewOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    komentar?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    barang?: barangOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    _relevance?: reviewOrderByRelevanceInput
  }

  export type reviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: reviewWhereInput | reviewWhereInput[]
    OR?: reviewWhereInput[]
    NOT?: reviewWhereInput | reviewWhereInput[]
    id_user?: IntFilter<"review"> | number
    id_barang?: IntFilter<"review"> | number
    rating?: IntFilter<"review"> | number
    createdAt?: DateTimeFilter<"review"> | Date | string
    komentar?: StringFilter<"review"> | string
    updatedAt?: DateTimeNullableFilter<"review"> | Date | string | null
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type reviewOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    komentar?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: reviewCountOrderByAggregateInput
    _avg?: reviewAvgOrderByAggregateInput
    _max?: reviewMaxOrderByAggregateInput
    _min?: reviewMinOrderByAggregateInput
    _sum?: reviewSumOrderByAggregateInput
  }

  export type reviewScalarWhereWithAggregatesInput = {
    AND?: reviewScalarWhereWithAggregatesInput | reviewScalarWhereWithAggregatesInput[]
    OR?: reviewScalarWhereWithAggregatesInput[]
    NOT?: reviewScalarWhereWithAggregatesInput | reviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"review"> | number
    id_user?: IntWithAggregatesFilter<"review"> | number
    id_barang?: IntWithAggregatesFilter<"review"> | number
    rating?: IntWithAggregatesFilter<"review"> | number
    createdAt?: DateTimeWithAggregatesFilter<"review"> | Date | string
    komentar?: StringWithAggregatesFilter<"review"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"review"> | Date | string | null
  }

  export type roleWhereInput = {
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    id?: IntFilter<"role"> | number
    role_name?: StringFilter<"role"> | string
    deskripsi?: StringFilter<"role"> | string
    user?: UserListRelationFilter
  }

  export type roleOrderByWithRelationInput = {
    id?: SortOrder
    role_name?: SortOrder
    deskripsi?: SortOrder
    user?: userOrderByRelationAggregateInput
    _relevance?: roleOrderByRelevanceInput
  }

  export type roleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: roleWhereInput | roleWhereInput[]
    OR?: roleWhereInput[]
    NOT?: roleWhereInput | roleWhereInput[]
    role_name?: StringFilter<"role"> | string
    deskripsi?: StringFilter<"role"> | string
    user?: UserListRelationFilter
  }, "id">

  export type roleOrderByWithAggregationInput = {
    id?: SortOrder
    role_name?: SortOrder
    deskripsi?: SortOrder
    _count?: roleCountOrderByAggregateInput
    _avg?: roleAvgOrderByAggregateInput
    _max?: roleMaxOrderByAggregateInput
    _min?: roleMinOrderByAggregateInput
    _sum?: roleSumOrderByAggregateInput
  }

  export type roleScalarWhereWithAggregatesInput = {
    AND?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    OR?: roleScalarWhereWithAggregatesInput[]
    NOT?: roleScalarWhereWithAggregatesInput | roleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"role"> | number
    role_name?: StringWithAggregatesFilter<"role"> | string
    deskripsi?: StringWithAggregatesFilter<"role"> | string
  }

  export type sewa_itemsWhereInput = {
    AND?: sewa_itemsWhereInput | sewa_itemsWhereInput[]
    OR?: sewa_itemsWhereInput[]
    NOT?: sewa_itemsWhereInput | sewa_itemsWhereInput[]
    id?: IntFilter<"sewa_items"> | number
    id_sewa_req?: IntFilter<"sewa_items"> | number
    id_barang?: IntFilter<"sewa_items"> | number
    jumlah?: IntFilter<"sewa_items"> | number
    harga_total?: FloatFilter<"sewa_items"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    sewa_req?: XOR<Sewa_reqScalarRelationFilter, sewa_reqWhereInput>
  }

  export type sewa_itemsOrderByWithRelationInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
    barang?: barangOrderByWithRelationInput
    sewa_req?: sewa_reqOrderByWithRelationInput
  }

  export type sewa_itemsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sewa_itemsWhereInput | sewa_itemsWhereInput[]
    OR?: sewa_itemsWhereInput[]
    NOT?: sewa_itemsWhereInput | sewa_itemsWhereInput[]
    id_sewa_req?: IntFilter<"sewa_items"> | number
    id_barang?: IntFilter<"sewa_items"> | number
    jumlah?: IntFilter<"sewa_items"> | number
    harga_total?: FloatFilter<"sewa_items"> | number
    barang?: XOR<BarangScalarRelationFilter, barangWhereInput>
    sewa_req?: XOR<Sewa_reqScalarRelationFilter, sewa_reqWhereInput>
  }, "id">

  export type sewa_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
    _count?: sewa_itemsCountOrderByAggregateInput
    _avg?: sewa_itemsAvgOrderByAggregateInput
    _max?: sewa_itemsMaxOrderByAggregateInput
    _min?: sewa_itemsMinOrderByAggregateInput
    _sum?: sewa_itemsSumOrderByAggregateInput
  }

  export type sewa_itemsScalarWhereWithAggregatesInput = {
    AND?: sewa_itemsScalarWhereWithAggregatesInput | sewa_itemsScalarWhereWithAggregatesInput[]
    OR?: sewa_itemsScalarWhereWithAggregatesInput[]
    NOT?: sewa_itemsScalarWhereWithAggregatesInput | sewa_itemsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sewa_items"> | number
    id_sewa_req?: IntWithAggregatesFilter<"sewa_items"> | number
    id_barang?: IntWithAggregatesFilter<"sewa_items"> | number
    jumlah?: IntWithAggregatesFilter<"sewa_items"> | number
    harga_total?: FloatWithAggregatesFilter<"sewa_items"> | number
  }

  export type sewa_reqWhereInput = {
    AND?: sewa_reqWhereInput | sewa_reqWhereInput[]
    OR?: sewa_reqWhereInput[]
    NOT?: sewa_reqWhereInput | sewa_reqWhereInput[]
    id?: IntFilter<"sewa_req"> | number
    id_user?: IntFilter<"sewa_req"> | number
    start_date?: DateTimeFilter<"sewa_req"> | Date | string
    end_date?: DateTimeFilter<"sewa_req"> | Date | string
    status?: StringFilter<"sewa_req"> | string
    dikembalikan_pada?: DateTimeNullableFilter<"sewa_req"> | Date | string | null
    sewa_items?: Sewa_itemsListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type sewa_reqOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    dikembalikan_pada?: SortOrderInput | SortOrder
    sewa_items?: sewa_itemsOrderByRelationAggregateInput
    user?: userOrderByWithRelationInput
    _relevance?: sewa_reqOrderByRelevanceInput
  }

  export type sewa_reqWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sewa_reqWhereInput | sewa_reqWhereInput[]
    OR?: sewa_reqWhereInput[]
    NOT?: sewa_reqWhereInput | sewa_reqWhereInput[]
    id_user?: IntFilter<"sewa_req"> | number
    start_date?: DateTimeFilter<"sewa_req"> | Date | string
    end_date?: DateTimeFilter<"sewa_req"> | Date | string
    status?: StringFilter<"sewa_req"> | string
    dikembalikan_pada?: DateTimeNullableFilter<"sewa_req"> | Date | string | null
    sewa_items?: Sewa_itemsListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type sewa_reqOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    dikembalikan_pada?: SortOrderInput | SortOrder
    _count?: sewa_reqCountOrderByAggregateInput
    _avg?: sewa_reqAvgOrderByAggregateInput
    _max?: sewa_reqMaxOrderByAggregateInput
    _min?: sewa_reqMinOrderByAggregateInput
    _sum?: sewa_reqSumOrderByAggregateInput
  }

  export type sewa_reqScalarWhereWithAggregatesInput = {
    AND?: sewa_reqScalarWhereWithAggregatesInput | sewa_reqScalarWhereWithAggregatesInput[]
    OR?: sewa_reqScalarWhereWithAggregatesInput[]
    NOT?: sewa_reqScalarWhereWithAggregatesInput | sewa_reqScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sewa_req"> | number
    id_user?: IntWithAggregatesFilter<"sewa_req"> | number
    start_date?: DateTimeWithAggregatesFilter<"sewa_req"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"sewa_req"> | Date | string
    status?: StringWithAggregatesFilter<"sewa_req"> | string
    dikembalikan_pada?: DateTimeNullableWithAggregatesFilter<"sewa_req"> | Date | string | null
  }

  export type tagsWhereInput = {
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    nama?: StringFilter<"tags"> | string
    id?: IntFilter<"tags"> | number
    artikel?: ArtikelListRelationFilter
  }

  export type tagsOrderByWithRelationInput = {
    nama?: SortOrder
    id?: SortOrder
    artikel?: artikelOrderByRelationAggregateInput
    _relevance?: tagsOrderByRelevanceInput
  }

  export type tagsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    nama?: StringFilter<"tags"> | string
    artikel?: ArtikelListRelationFilter
  }, "id">

  export type tagsOrderByWithAggregationInput = {
    nama?: SortOrder
    id?: SortOrder
    _count?: tagsCountOrderByAggregateInput
    _avg?: tagsAvgOrderByAggregateInput
    _max?: tagsMaxOrderByAggregateInput
    _min?: tagsMinOrderByAggregateInput
    _sum?: tagsSumOrderByAggregateInput
  }

  export type tagsScalarWhereWithAggregatesInput = {
    AND?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    OR?: tagsScalarWhereWithAggregatesInput[]
    NOT?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    nama?: StringWithAggregatesFilter<"tags"> | string
    id?: IntWithAggregatesFilter<"tags"> | number
  }

  export type transaksiWhereInput = {
    AND?: transaksiWhereInput | transaksiWhereInput[]
    OR?: transaksiWhereInput[]
    NOT?: transaksiWhereInput | transaksiWhereInput[]
    id?: IntFilter<"transaksi"> | number
    id_user?: IntFilter<"transaksi"> | number
    total_pembayaran?: FloatFilter<"transaksi"> | number
    tanggal_transaksi?: DateTimeFilter<"transaksi"> | Date | string
    status?: StringFilter<"transaksi"> | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type transaksiOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
    tanggal_transaksi?: SortOrder
    status?: SortOrder
    user?: userOrderByWithRelationInput
    _relevance?: transaksiOrderByRelevanceInput
  }

  export type transaksiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: transaksiWhereInput | transaksiWhereInput[]
    OR?: transaksiWhereInput[]
    NOT?: transaksiWhereInput | transaksiWhereInput[]
    id_user?: IntFilter<"transaksi"> | number
    total_pembayaran?: FloatFilter<"transaksi"> | number
    tanggal_transaksi?: DateTimeFilter<"transaksi"> | Date | string
    status?: StringFilter<"transaksi"> | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type transaksiOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
    tanggal_transaksi?: SortOrder
    status?: SortOrder
    _count?: transaksiCountOrderByAggregateInput
    _avg?: transaksiAvgOrderByAggregateInput
    _max?: transaksiMaxOrderByAggregateInput
    _min?: transaksiMinOrderByAggregateInput
    _sum?: transaksiSumOrderByAggregateInput
  }

  export type transaksiScalarWhereWithAggregatesInput = {
    AND?: transaksiScalarWhereWithAggregatesInput | transaksiScalarWhereWithAggregatesInput[]
    OR?: transaksiScalarWhereWithAggregatesInput[]
    NOT?: transaksiScalarWhereWithAggregatesInput | transaksiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"transaksi"> | number
    id_user?: IntWithAggregatesFilter<"transaksi"> | number
    total_pembayaran?: FloatWithAggregatesFilter<"transaksi"> | number
    tanggal_transaksi?: DateTimeWithAggregatesFilter<"transaksi"> | Date | string
    status?: StringWithAggregatesFilter<"transaksi"> | string
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    username?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    no_telp?: StringNullableFilter<"user"> | string | null
    alamat?: StringNullableFilter<"user"> | string | null
    is_blacklisted?: BoolFilter<"user"> | boolean
    role_id?: IntFilter<"user"> | number
    email?: StringFilter<"user"> | string
    remember_token?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdAt?: DateTimeFilter<"user"> | Date | string
    date_of_birth?: DateTimeNullableFilter<"user"> | Date | string | null
    full_name?: StringNullableFilter<"user"> | string | null
    provider?: StringNullableFilter<"user"> | string | null
    provider_id?: StringNullableFilter<"user"> | string | null
    updatedAt?: DateTimeNullableFilter<"user"> | Date | string | null
    artikel_comment?: Artikel_commentListRelationFilter
    keranjang?: KeranjangListRelationFilter
    penalti?: PenaltiListRelationFilter
    review?: ReviewListRelationFilter
    sewa_req?: Sewa_reqListRelationFilter
    transaksi?: TransaksiListRelationFilter
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    no_telp?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    is_blacklisted?: SortOrder
    role_id?: SortOrder
    email?: SortOrder
    remember_token?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    provider_id?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    artikel_comment?: artikel_commentOrderByRelationAggregateInput
    keranjang?: keranjangOrderByRelationAggregateInput
    penalti?: penaltiOrderByRelationAggregateInput
    review?: reviewOrderByRelationAggregateInput
    sewa_req?: sewa_reqOrderByRelationAggregateInput
    transaksi?: transaksiOrderByRelationAggregateInput
    role?: roleOrderByWithRelationInput
    _relevance?: userOrderByRelevanceInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    username?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    no_telp?: StringNullableFilter<"user"> | string | null
    alamat?: StringNullableFilter<"user"> | string | null
    is_blacklisted?: BoolFilter<"user"> | boolean
    role_id?: IntFilter<"user"> | number
    remember_token?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdAt?: DateTimeFilter<"user"> | Date | string
    date_of_birth?: DateTimeNullableFilter<"user"> | Date | string | null
    full_name?: StringNullableFilter<"user"> | string | null
    provider?: StringNullableFilter<"user"> | string | null
    provider_id?: StringNullableFilter<"user"> | string | null
    updatedAt?: DateTimeNullableFilter<"user"> | Date | string | null
    artikel_comment?: Artikel_commentListRelationFilter
    keranjang?: KeranjangListRelationFilter
    penalti?: PenaltiListRelationFilter
    review?: ReviewListRelationFilter
    sewa_req?: Sewa_reqListRelationFilter
    transaksi?: TransaksiListRelationFilter
    role?: XOR<RoleScalarRelationFilter, roleWhereInput>
  }, "id" | "email">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    no_telp?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    is_blacklisted?: SortOrder
    role_id?: SortOrder
    email?: SortOrder
    remember_token?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    provider_id?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    username?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    no_telp?: StringNullableWithAggregatesFilter<"user"> | string | null
    alamat?: StringNullableWithAggregatesFilter<"user"> | string | null
    is_blacklisted?: BoolWithAggregatesFilter<"user"> | boolean
    role_id?: IntWithAggregatesFilter<"user"> | number
    email?: StringWithAggregatesFilter<"user"> | string
    remember_token?: StringNullableWithAggregatesFilter<"user"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"user"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"user"> | Date | string
    date_of_birth?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    full_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    provider?: StringNullableWithAggregatesFilter<"user"> | string | null
    provider_id?: StringNullableWithAggregatesFilter<"user"> | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
  }

  export type artikelCreateInput = {
    judul: string
    konten: string
    foto: string
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
    tags: tagsCreateNestedOneWithoutArtikelInput
    artikel_comment?: artikel_commentCreateNestedManyWithoutArtikelInput
  }

  export type artikelUncheckedCreateInput = {
    id?: number
    judul: string
    konten: string
    foto: string
    id_tags: number
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutArtikelInput
  }

  export type artikelUpdateInput = {
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: tagsUpdateOneRequiredWithoutArtikelNestedInput
    artikel_comment?: artikel_commentUpdateManyWithoutArtikelNestedInput
  }

  export type artikelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_tags?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutArtikelNestedInput
  }

  export type artikelCreateManyInput = {
    id?: number
    judul: string
    konten: string
    foto: string
    id_tags: number
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
  }

  export type artikelUpdateManyMutationInput = {
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type artikelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_tags?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type artikel_commentCreateInput = {
    komen_teks: string
    artikel: artikelCreateNestedOneWithoutArtikel_commentInput
    user: userCreateNestedOneWithoutArtikel_commentInput
  }

  export type artikel_commentUncheckedCreateInput = {
    id?: number
    id_artikel: number
    id_user: number
    komen_teks: string
  }

  export type artikel_commentUpdateInput = {
    komen_teks?: StringFieldUpdateOperationsInput | string
    artikel?: artikelUpdateOneRequiredWithoutArtikel_commentNestedInput
    user?: userUpdateOneRequiredWithoutArtikel_commentNestedInput
  }

  export type artikel_commentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_artikel?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type artikel_commentCreateManyInput = {
    id?: number
    id_artikel: number
    id_user: number
    komen_teks: string
  }

  export type artikel_commentUpdateManyMutationInput = {
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type artikel_commentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_artikel?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type barangCreateInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    kategori: kategoriCreateNestedOneWithoutBarangInput
    keranjang?: keranjangCreateNestedManyWithoutBarangInput
    penalti?: penaltiCreateNestedManyWithoutBarangInput
    review?: reviewCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    keranjang?: keranjangUncheckedCreateNestedManyWithoutBarangInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutBarangInput
    review?: reviewUncheckedCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangUpdateInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kategori?: kategoriUpdateOneRequiredWithoutBarangNestedInput
    keranjang?: keranjangUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUpdateManyWithoutBarangNestedInput
    review?: reviewUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUncheckedUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutBarangNestedInput
    review?: reviewUncheckedUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type barangCreateManyInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
  }

  export type barangUpdateManyMutationInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type barangUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type kategoriCreateInput = {
    nama: string
    barang?: barangCreateNestedManyWithoutKategoriInput
  }

  export type kategoriUncheckedCreateInput = {
    id?: number
    nama: string
    barang?: barangUncheckedCreateNestedManyWithoutKategoriInput
  }

  export type kategoriUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    barang?: barangUpdateManyWithoutKategoriNestedInput
  }

  export type kategoriUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    barang?: barangUncheckedUpdateManyWithoutKategoriNestedInput
  }

  export type kategoriCreateManyInput = {
    id?: number
    nama: string
  }

  export type kategoriUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type kategoriUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type keranjangCreateInput = {
    jumlah: number
    subtotal: number
    barang: barangCreateNestedOneWithoutKeranjangInput
    user: userCreateNestedOneWithoutKeranjangInput
  }

  export type keranjangUncheckedCreateInput = {
    id?: number
    id_user: number
    id_barang: number
    jumlah: number
    subtotal: number
  }

  export type keranjangUpdateInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutKeranjangNestedInput
    user?: userUpdateOneRequiredWithoutKeranjangNestedInput
  }

  export type keranjangUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type keranjangCreateManyInput = {
    id?: number
    id_user: number
    id_barang: number
    jumlah: number
    subtotal: number
  }

  export type keranjangUpdateManyMutationInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type keranjangUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiCreateInput = {
    total_bayar: number
    barang: barangCreateNestedOneWithoutPenaltiInput
    user: userCreateNestedOneWithoutPenaltiInput
  }

  export type penaltiUncheckedCreateInput = {
    id?: number
    id_barang: number
    id_user: number
    total_bayar: number
  }

  export type penaltiUpdateInput = {
    total_bayar?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutPenaltiNestedInput
    user?: userUpdateOneRequiredWithoutPenaltiNestedInput
  }

  export type penaltiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiCreateManyInput = {
    id?: number
    id_barang: number
    id_user: number
    total_bayar: number
  }

  export type penaltiUpdateManyMutationInput = {
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type reviewCreateInput = {
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
    barang: barangCreateNestedOneWithoutReviewInput
    user: userCreateNestedOneWithoutReviewInput
  }

  export type reviewUncheckedCreateInput = {
    id?: number
    id_user: number
    id_barang: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type reviewUpdateInput = {
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    barang?: barangUpdateOneRequiredWithoutReviewNestedInput
    user?: userUpdateOneRequiredWithoutReviewNestedInput
  }

  export type reviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewCreateManyInput = {
    id?: number
    id_user: number
    id_barang: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type reviewUpdateManyMutationInput = {
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type roleCreateInput = {
    role_name: string
    deskripsi: string
    user?: userCreateNestedManyWithoutRoleInput
  }

  export type roleUncheckedCreateInput = {
    id?: number
    role_name: string
    deskripsi: string
    user?: userUncheckedCreateNestedManyWithoutRoleInput
  }

  export type roleUpdateInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    user?: userUpdateManyWithoutRoleNestedInput
  }

  export type roleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    user?: userUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type roleCreateManyInput = {
    id?: number
    role_name: string
    deskripsi: string
  }

  export type roleUpdateManyMutationInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
  }

  export type roleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
  }

  export type sewa_itemsCreateInput = {
    jumlah: number
    harga_total: number
    barang: barangCreateNestedOneWithoutSewa_itemsInput
    sewa_req: sewa_reqCreateNestedOneWithoutSewa_itemsInput
  }

  export type sewa_itemsUncheckedCreateInput = {
    id?: number
    id_sewa_req: number
    id_barang: number
    jumlah: number
    harga_total: number
  }

  export type sewa_itemsUpdateInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutSewa_itemsNestedInput
    sewa_req?: sewa_reqUpdateOneRequiredWithoutSewa_itemsNestedInput
  }

  export type sewa_itemsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sewa_req?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type sewa_itemsCreateManyInput = {
    id?: number
    id_sewa_req: number
    id_barang: number
    jumlah: number
    harga_total: number
  }

  export type sewa_itemsUpdateManyMutationInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type sewa_itemsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sewa_req?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type sewa_reqCreateInput = {
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
    sewa_items?: sewa_itemsCreateNestedManyWithoutSewa_reqInput
    user: userCreateNestedOneWithoutSewa_reqInput
  }

  export type sewa_reqUncheckedCreateInput = {
    id?: number
    id_user: number
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutSewa_reqInput
  }

  export type sewa_reqUpdateInput = {
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sewa_items?: sewa_itemsUpdateManyWithoutSewa_reqNestedInput
    user?: userUpdateOneRequiredWithoutSewa_reqNestedInput
  }

  export type sewa_reqUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutSewa_reqNestedInput
  }

  export type sewa_reqCreateManyInput = {
    id?: number
    id_user: number
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
  }

  export type sewa_reqUpdateManyMutationInput = {
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sewa_reqUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tagsCreateInput = {
    nama: string
    artikel?: artikelCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateInput = {
    nama: string
    id?: number
    artikel?: artikelUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    artikel?: artikelUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    id?: IntFieldUpdateOperationsInput | number
    artikel?: artikelUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type tagsCreateManyInput = {
    nama: string
    id?: number
  }

  export type tagsUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type tagsUncheckedUpdateManyInput = {
    nama?: StringFieldUpdateOperationsInput | string
    id?: IntFieldUpdateOperationsInput | number
  }

  export type transaksiCreateInput = {
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
    user: userCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateInput = {
    id?: number
    id_user: number
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
  }

  export type transaksiUpdateInput = {
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    user?: userUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type transaksiCreateManyInput = {
    id?: number
    id_user: number
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
  }

  export type transaksiUpdateManyMutationInput = {
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type transaksiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type userCreateInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
  }

  export type userUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TagsScalarRelationFilter = {
    is?: tagsWhereInput
    isNot?: tagsWhereInput
  }

  export type Artikel_commentListRelationFilter = {
    every?: artikel_commentWhereInput
    some?: artikel_commentWhereInput
    none?: artikel_commentWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type artikel_commentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type artikelOrderByRelevanceInput = {
    fields: artikelOrderByRelevanceFieldEnum | artikelOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type artikelCountOrderByAggregateInput = {
    id?: SortOrder
    judul?: SortOrder
    konten?: SortOrder
    foto?: SortOrder
    id_tags?: SortOrder
    createdAt?: SortOrder
    is_deleted?: SortOrder
    is_published?: SortOrder
    publishAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type artikelAvgOrderByAggregateInput = {
    id?: SortOrder
    id_tags?: SortOrder
  }

  export type artikelMaxOrderByAggregateInput = {
    id?: SortOrder
    judul?: SortOrder
    konten?: SortOrder
    foto?: SortOrder
    id_tags?: SortOrder
    createdAt?: SortOrder
    is_deleted?: SortOrder
    is_published?: SortOrder
    publishAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type artikelMinOrderByAggregateInput = {
    id?: SortOrder
    judul?: SortOrder
    konten?: SortOrder
    foto?: SortOrder
    id_tags?: SortOrder
    createdAt?: SortOrder
    is_deleted?: SortOrder
    is_published?: SortOrder
    publishAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type artikelSumOrderByAggregateInput = {
    id?: SortOrder
    id_tags?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ArtikelScalarRelationFilter = {
    is?: artikelWhereInput
    isNot?: artikelWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type artikel_commentOrderByRelevanceInput = {
    fields: artikel_commentOrderByRelevanceFieldEnum | artikel_commentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type artikel_commentCountOrderByAggregateInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
    komen_teks?: SortOrder
  }

  export type artikel_commentAvgOrderByAggregateInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
  }

  export type artikel_commentMaxOrderByAggregateInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
    komen_teks?: SortOrder
  }

  export type artikel_commentMinOrderByAggregateInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
    komen_teks?: SortOrder
  }

  export type artikel_commentSumOrderByAggregateInput = {
    id?: SortOrder
    id_artikel?: SortOrder
    id_user?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type KategoriScalarRelationFilter = {
    is?: kategoriWhereInput
    isNot?: kategoriWhereInput
  }

  export type KeranjangListRelationFilter = {
    every?: keranjangWhereInput
    some?: keranjangWhereInput
    none?: keranjangWhereInput
  }

  export type PenaltiListRelationFilter = {
    every?: penaltiWhereInput
    some?: penaltiWhereInput
    none?: penaltiWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: reviewWhereInput
    some?: reviewWhereInput
    none?: reviewWhereInput
  }

  export type Sewa_itemsListRelationFilter = {
    every?: sewa_itemsWhereInput
    some?: sewa_itemsWhereInput
    none?: sewa_itemsWhereInput
  }

  export type keranjangOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type penaltiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sewa_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type barangOrderByRelevanceInput = {
    fields: barangOrderByRelevanceFieldEnum | barangOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type barangCountOrderByAggregateInput = {
    id?: SortOrder
    stok?: SortOrder
    foto?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
    nama?: SortOrder
  }

  export type barangAvgOrderByAggregateInput = {
    id?: SortOrder
    stok?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
  }

  export type barangMaxOrderByAggregateInput = {
    id?: SortOrder
    stok?: SortOrder
    foto?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
    nama?: SortOrder
  }

  export type barangMinOrderByAggregateInput = {
    id?: SortOrder
    stok?: SortOrder
    foto?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
    nama?: SortOrder
  }

  export type barangSumOrderByAggregateInput = {
    id?: SortOrder
    stok?: SortOrder
    harga_pinalti_per_jam?: SortOrder
    kategori_id?: SortOrder
    harga?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BarangListRelationFilter = {
    every?: barangWhereInput
    some?: barangWhereInput
    none?: barangWhereInput
  }

  export type barangOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type kategoriOrderByRelevanceInput = {
    fields: kategoriOrderByRelevanceFieldEnum | kategoriOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type kategoriCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
  }

  export type kategoriAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type kategoriMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
  }

  export type kategoriMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
  }

  export type kategoriSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BarangScalarRelationFilter = {
    is?: barangWhereInput
    isNot?: barangWhereInput
  }

  export type keranjangCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
  }

  export type keranjangAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
  }

  export type keranjangMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
  }

  export type keranjangMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
  }

  export type keranjangSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    subtotal?: SortOrder
  }

  export type penaltiCountOrderByAggregateInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
  }

  export type penaltiAvgOrderByAggregateInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
  }

  export type penaltiMaxOrderByAggregateInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
  }

  export type penaltiMinOrderByAggregateInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
  }

  export type penaltiSumOrderByAggregateInput = {
    id?: SortOrder
    id_barang?: SortOrder
    id_user?: SortOrder
    total_bayar?: SortOrder
  }

  export type reviewOrderByRelevanceInput = {
    fields: reviewOrderByRelevanceFieldEnum | reviewOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reviewCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    komentar?: SortOrder
    updatedAt?: SortOrder
  }

  export type reviewAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
  }

  export type reviewMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    komentar?: SortOrder
    updatedAt?: SortOrder
  }

  export type reviewMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    komentar?: SortOrder
    updatedAt?: SortOrder
  }

  export type reviewSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    id_barang?: SortOrder
    rating?: SortOrder
  }

  export type UserListRelationFilter = {
    every?: userWhereInput
    some?: userWhereInput
    none?: userWhereInput
  }

  export type userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type roleOrderByRelevanceInput = {
    fields: roleOrderByRelevanceFieldEnum | roleOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type roleCountOrderByAggregateInput = {
    id?: SortOrder
    role_name?: SortOrder
    deskripsi?: SortOrder
  }

  export type roleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type roleMaxOrderByAggregateInput = {
    id?: SortOrder
    role_name?: SortOrder
    deskripsi?: SortOrder
  }

  export type roleMinOrderByAggregateInput = {
    id?: SortOrder
    role_name?: SortOrder
    deskripsi?: SortOrder
  }

  export type roleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Sewa_reqScalarRelationFilter = {
    is?: sewa_reqWhereInput
    isNot?: sewa_reqWhereInput
  }

  export type sewa_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
  }

  export type sewa_itemsAvgOrderByAggregateInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
  }

  export type sewa_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
  }

  export type sewa_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
  }

  export type sewa_itemsSumOrderByAggregateInput = {
    id?: SortOrder
    id_sewa_req?: SortOrder
    id_barang?: SortOrder
    jumlah?: SortOrder
    harga_total?: SortOrder
  }

  export type sewa_reqOrderByRelevanceInput = {
    fields: sewa_reqOrderByRelevanceFieldEnum | sewa_reqOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sewa_reqCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    dikembalikan_pada?: SortOrder
  }

  export type sewa_reqAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type sewa_reqMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    dikembalikan_pada?: SortOrder
  }

  export type sewa_reqMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    dikembalikan_pada?: SortOrder
  }

  export type sewa_reqSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type ArtikelListRelationFilter = {
    every?: artikelWhereInput
    some?: artikelWhereInput
    none?: artikelWhereInput
  }

  export type artikelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tagsOrderByRelevanceInput = {
    fields: tagsOrderByRelevanceFieldEnum | tagsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tagsCountOrderByAggregateInput = {
    nama?: SortOrder
    id?: SortOrder
  }

  export type tagsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tagsMaxOrderByAggregateInput = {
    nama?: SortOrder
    id?: SortOrder
  }

  export type tagsMinOrderByAggregateInput = {
    nama?: SortOrder
    id?: SortOrder
  }

  export type tagsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type transaksiOrderByRelevanceInput = {
    fields: transaksiOrderByRelevanceFieldEnum | transaksiOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type transaksiCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
    tanggal_transaksi?: SortOrder
    status?: SortOrder
  }

  export type transaksiAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
  }

  export type transaksiMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
    tanggal_transaksi?: SortOrder
    status?: SortOrder
  }

  export type transaksiMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
    tanggal_transaksi?: SortOrder
    status?: SortOrder
  }

  export type transaksiSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    total_pembayaran?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Sewa_reqListRelationFilter = {
    every?: sewa_reqWhereInput
    some?: sewa_reqWhereInput
    none?: sewa_reqWhereInput
  }

  export type TransaksiListRelationFilter = {
    every?: transaksiWhereInput
    some?: transaksiWhereInput
    none?: transaksiWhereInput
  }

  export type RoleScalarRelationFilter = {
    is?: roleWhereInput
    isNot?: roleWhereInput
  }

  export type sewa_reqOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transaksiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userOrderByRelevanceInput = {
    fields: userOrderByRelevanceFieldEnum | userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    no_telp?: SortOrder
    alamat?: SortOrder
    is_blacklisted?: SortOrder
    role_id?: SortOrder
    email?: SortOrder
    remember_token?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
    date_of_birth?: SortOrder
    full_name?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    updatedAt?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    no_telp?: SortOrder
    alamat?: SortOrder
    is_blacklisted?: SortOrder
    role_id?: SortOrder
    email?: SortOrder
    remember_token?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
    date_of_birth?: SortOrder
    full_name?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    updatedAt?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    no_telp?: SortOrder
    alamat?: SortOrder
    is_blacklisted?: SortOrder
    role_id?: SortOrder
    email?: SortOrder
    remember_token?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
    date_of_birth?: SortOrder
    full_name?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    updatedAt?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type tagsCreateNestedOneWithoutArtikelInput = {
    create?: XOR<tagsCreateWithoutArtikelInput, tagsUncheckedCreateWithoutArtikelInput>
    connectOrCreate?: tagsCreateOrConnectWithoutArtikelInput
    connect?: tagsWhereUniqueInput
  }

  export type artikel_commentCreateNestedManyWithoutArtikelInput = {
    create?: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput> | artikel_commentCreateWithoutArtikelInput[] | artikel_commentUncheckedCreateWithoutArtikelInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutArtikelInput | artikel_commentCreateOrConnectWithoutArtikelInput[]
    createMany?: artikel_commentCreateManyArtikelInputEnvelope
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
  }

  export type artikel_commentUncheckedCreateNestedManyWithoutArtikelInput = {
    create?: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput> | artikel_commentCreateWithoutArtikelInput[] | artikel_commentUncheckedCreateWithoutArtikelInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutArtikelInput | artikel_commentCreateOrConnectWithoutArtikelInput[]
    createMany?: artikel_commentCreateManyArtikelInputEnvelope
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type tagsUpdateOneRequiredWithoutArtikelNestedInput = {
    create?: XOR<tagsCreateWithoutArtikelInput, tagsUncheckedCreateWithoutArtikelInput>
    connectOrCreate?: tagsCreateOrConnectWithoutArtikelInput
    upsert?: tagsUpsertWithoutArtikelInput
    connect?: tagsWhereUniqueInput
    update?: XOR<XOR<tagsUpdateToOneWithWhereWithoutArtikelInput, tagsUpdateWithoutArtikelInput>, tagsUncheckedUpdateWithoutArtikelInput>
  }

  export type artikel_commentUpdateManyWithoutArtikelNestedInput = {
    create?: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput> | artikel_commentCreateWithoutArtikelInput[] | artikel_commentUncheckedCreateWithoutArtikelInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutArtikelInput | artikel_commentCreateOrConnectWithoutArtikelInput[]
    upsert?: artikel_commentUpsertWithWhereUniqueWithoutArtikelInput | artikel_commentUpsertWithWhereUniqueWithoutArtikelInput[]
    createMany?: artikel_commentCreateManyArtikelInputEnvelope
    set?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    disconnect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    delete?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    update?: artikel_commentUpdateWithWhereUniqueWithoutArtikelInput | artikel_commentUpdateWithWhereUniqueWithoutArtikelInput[]
    updateMany?: artikel_commentUpdateManyWithWhereWithoutArtikelInput | artikel_commentUpdateManyWithWhereWithoutArtikelInput[]
    deleteMany?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type artikel_commentUncheckedUpdateManyWithoutArtikelNestedInput = {
    create?: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput> | artikel_commentCreateWithoutArtikelInput[] | artikel_commentUncheckedCreateWithoutArtikelInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutArtikelInput | artikel_commentCreateOrConnectWithoutArtikelInput[]
    upsert?: artikel_commentUpsertWithWhereUniqueWithoutArtikelInput | artikel_commentUpsertWithWhereUniqueWithoutArtikelInput[]
    createMany?: artikel_commentCreateManyArtikelInputEnvelope
    set?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    disconnect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    delete?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    update?: artikel_commentUpdateWithWhereUniqueWithoutArtikelInput | artikel_commentUpdateWithWhereUniqueWithoutArtikelInput[]
    updateMany?: artikel_commentUpdateManyWithWhereWithoutArtikelInput | artikel_commentUpdateManyWithWhereWithoutArtikelInput[]
    deleteMany?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
  }

  export type artikelCreateNestedOneWithoutArtikel_commentInput = {
    create?: XOR<artikelCreateWithoutArtikel_commentInput, artikelUncheckedCreateWithoutArtikel_commentInput>
    connectOrCreate?: artikelCreateOrConnectWithoutArtikel_commentInput
    connect?: artikelWhereUniqueInput
  }

  export type userCreateNestedOneWithoutArtikel_commentInput = {
    create?: XOR<userCreateWithoutArtikel_commentInput, userUncheckedCreateWithoutArtikel_commentInput>
    connectOrCreate?: userCreateOrConnectWithoutArtikel_commentInput
    connect?: userWhereUniqueInput
  }

  export type artikelUpdateOneRequiredWithoutArtikel_commentNestedInput = {
    create?: XOR<artikelCreateWithoutArtikel_commentInput, artikelUncheckedCreateWithoutArtikel_commentInput>
    connectOrCreate?: artikelCreateOrConnectWithoutArtikel_commentInput
    upsert?: artikelUpsertWithoutArtikel_commentInput
    connect?: artikelWhereUniqueInput
    update?: XOR<XOR<artikelUpdateToOneWithWhereWithoutArtikel_commentInput, artikelUpdateWithoutArtikel_commentInput>, artikelUncheckedUpdateWithoutArtikel_commentInput>
  }

  export type userUpdateOneRequiredWithoutArtikel_commentNestedInput = {
    create?: XOR<userCreateWithoutArtikel_commentInput, userUncheckedCreateWithoutArtikel_commentInput>
    connectOrCreate?: userCreateOrConnectWithoutArtikel_commentInput
    upsert?: userUpsertWithoutArtikel_commentInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutArtikel_commentInput, userUpdateWithoutArtikel_commentInput>, userUncheckedUpdateWithoutArtikel_commentInput>
  }

  export type kategoriCreateNestedOneWithoutBarangInput = {
    create?: XOR<kategoriCreateWithoutBarangInput, kategoriUncheckedCreateWithoutBarangInput>
    connectOrCreate?: kategoriCreateOrConnectWithoutBarangInput
    connect?: kategoriWhereUniqueInput
  }

  export type keranjangCreateNestedManyWithoutBarangInput = {
    create?: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput> | keranjangCreateWithoutBarangInput[] | keranjangUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutBarangInput | keranjangCreateOrConnectWithoutBarangInput[]
    createMany?: keranjangCreateManyBarangInputEnvelope
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
  }

  export type penaltiCreateNestedManyWithoutBarangInput = {
    create?: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput> | penaltiCreateWithoutBarangInput[] | penaltiUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutBarangInput | penaltiCreateOrConnectWithoutBarangInput[]
    createMany?: penaltiCreateManyBarangInputEnvelope
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
  }

  export type reviewCreateNestedManyWithoutBarangInput = {
    create?: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput> | reviewCreateWithoutBarangInput[] | reviewUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutBarangInput | reviewCreateOrConnectWithoutBarangInput[]
    createMany?: reviewCreateManyBarangInputEnvelope
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
  }

  export type sewa_itemsCreateNestedManyWithoutBarangInput = {
    create?: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput> | sewa_itemsCreateWithoutBarangInput[] | sewa_itemsUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutBarangInput | sewa_itemsCreateOrConnectWithoutBarangInput[]
    createMany?: sewa_itemsCreateManyBarangInputEnvelope
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
  }

  export type keranjangUncheckedCreateNestedManyWithoutBarangInput = {
    create?: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput> | keranjangCreateWithoutBarangInput[] | keranjangUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutBarangInput | keranjangCreateOrConnectWithoutBarangInput[]
    createMany?: keranjangCreateManyBarangInputEnvelope
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
  }

  export type penaltiUncheckedCreateNestedManyWithoutBarangInput = {
    create?: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput> | penaltiCreateWithoutBarangInput[] | penaltiUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutBarangInput | penaltiCreateOrConnectWithoutBarangInput[]
    createMany?: penaltiCreateManyBarangInputEnvelope
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
  }

  export type reviewUncheckedCreateNestedManyWithoutBarangInput = {
    create?: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput> | reviewCreateWithoutBarangInput[] | reviewUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutBarangInput | reviewCreateOrConnectWithoutBarangInput[]
    createMany?: reviewCreateManyBarangInputEnvelope
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
  }

  export type sewa_itemsUncheckedCreateNestedManyWithoutBarangInput = {
    create?: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput> | sewa_itemsCreateWithoutBarangInput[] | sewa_itemsUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutBarangInput | sewa_itemsCreateOrConnectWithoutBarangInput[]
    createMany?: sewa_itemsCreateManyBarangInputEnvelope
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type kategoriUpdateOneRequiredWithoutBarangNestedInput = {
    create?: XOR<kategoriCreateWithoutBarangInput, kategoriUncheckedCreateWithoutBarangInput>
    connectOrCreate?: kategoriCreateOrConnectWithoutBarangInput
    upsert?: kategoriUpsertWithoutBarangInput
    connect?: kategoriWhereUniqueInput
    update?: XOR<XOR<kategoriUpdateToOneWithWhereWithoutBarangInput, kategoriUpdateWithoutBarangInput>, kategoriUncheckedUpdateWithoutBarangInput>
  }

  export type keranjangUpdateManyWithoutBarangNestedInput = {
    create?: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput> | keranjangCreateWithoutBarangInput[] | keranjangUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutBarangInput | keranjangCreateOrConnectWithoutBarangInput[]
    upsert?: keranjangUpsertWithWhereUniqueWithoutBarangInput | keranjangUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: keranjangCreateManyBarangInputEnvelope
    set?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    disconnect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    delete?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    update?: keranjangUpdateWithWhereUniqueWithoutBarangInput | keranjangUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: keranjangUpdateManyWithWhereWithoutBarangInput | keranjangUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
  }

  export type penaltiUpdateManyWithoutBarangNestedInput = {
    create?: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput> | penaltiCreateWithoutBarangInput[] | penaltiUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutBarangInput | penaltiCreateOrConnectWithoutBarangInput[]
    upsert?: penaltiUpsertWithWhereUniqueWithoutBarangInput | penaltiUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: penaltiCreateManyBarangInputEnvelope
    set?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    disconnect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    delete?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    update?: penaltiUpdateWithWhereUniqueWithoutBarangInput | penaltiUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: penaltiUpdateManyWithWhereWithoutBarangInput | penaltiUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
  }

  export type reviewUpdateManyWithoutBarangNestedInput = {
    create?: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput> | reviewCreateWithoutBarangInput[] | reviewUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutBarangInput | reviewCreateOrConnectWithoutBarangInput[]
    upsert?: reviewUpsertWithWhereUniqueWithoutBarangInput | reviewUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: reviewCreateManyBarangInputEnvelope
    set?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    disconnect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    delete?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    update?: reviewUpdateWithWhereUniqueWithoutBarangInput | reviewUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: reviewUpdateManyWithWhereWithoutBarangInput | reviewUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: reviewScalarWhereInput | reviewScalarWhereInput[]
  }

  export type sewa_itemsUpdateManyWithoutBarangNestedInput = {
    create?: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput> | sewa_itemsCreateWithoutBarangInput[] | sewa_itemsUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutBarangInput | sewa_itemsCreateOrConnectWithoutBarangInput[]
    upsert?: sewa_itemsUpsertWithWhereUniqueWithoutBarangInput | sewa_itemsUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: sewa_itemsCreateManyBarangInputEnvelope
    set?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    disconnect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    delete?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    update?: sewa_itemsUpdateWithWhereUniqueWithoutBarangInput | sewa_itemsUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: sewa_itemsUpdateManyWithWhereWithoutBarangInput | sewa_itemsUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
  }

  export type keranjangUncheckedUpdateManyWithoutBarangNestedInput = {
    create?: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput> | keranjangCreateWithoutBarangInput[] | keranjangUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutBarangInput | keranjangCreateOrConnectWithoutBarangInput[]
    upsert?: keranjangUpsertWithWhereUniqueWithoutBarangInput | keranjangUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: keranjangCreateManyBarangInputEnvelope
    set?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    disconnect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    delete?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    update?: keranjangUpdateWithWhereUniqueWithoutBarangInput | keranjangUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: keranjangUpdateManyWithWhereWithoutBarangInput | keranjangUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
  }

  export type penaltiUncheckedUpdateManyWithoutBarangNestedInput = {
    create?: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput> | penaltiCreateWithoutBarangInput[] | penaltiUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutBarangInput | penaltiCreateOrConnectWithoutBarangInput[]
    upsert?: penaltiUpsertWithWhereUniqueWithoutBarangInput | penaltiUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: penaltiCreateManyBarangInputEnvelope
    set?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    disconnect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    delete?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    update?: penaltiUpdateWithWhereUniqueWithoutBarangInput | penaltiUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: penaltiUpdateManyWithWhereWithoutBarangInput | penaltiUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
  }

  export type reviewUncheckedUpdateManyWithoutBarangNestedInput = {
    create?: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput> | reviewCreateWithoutBarangInput[] | reviewUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutBarangInput | reviewCreateOrConnectWithoutBarangInput[]
    upsert?: reviewUpsertWithWhereUniqueWithoutBarangInput | reviewUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: reviewCreateManyBarangInputEnvelope
    set?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    disconnect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    delete?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    update?: reviewUpdateWithWhereUniqueWithoutBarangInput | reviewUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: reviewUpdateManyWithWhereWithoutBarangInput | reviewUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: reviewScalarWhereInput | reviewScalarWhereInput[]
  }

  export type sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput = {
    create?: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput> | sewa_itemsCreateWithoutBarangInput[] | sewa_itemsUncheckedCreateWithoutBarangInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutBarangInput | sewa_itemsCreateOrConnectWithoutBarangInput[]
    upsert?: sewa_itemsUpsertWithWhereUniqueWithoutBarangInput | sewa_itemsUpsertWithWhereUniqueWithoutBarangInput[]
    createMany?: sewa_itemsCreateManyBarangInputEnvelope
    set?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    disconnect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    delete?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    update?: sewa_itemsUpdateWithWhereUniqueWithoutBarangInput | sewa_itemsUpdateWithWhereUniqueWithoutBarangInput[]
    updateMany?: sewa_itemsUpdateManyWithWhereWithoutBarangInput | sewa_itemsUpdateManyWithWhereWithoutBarangInput[]
    deleteMany?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
  }

  export type barangCreateNestedManyWithoutKategoriInput = {
    create?: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput> | barangCreateWithoutKategoriInput[] | barangUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: barangCreateOrConnectWithoutKategoriInput | barangCreateOrConnectWithoutKategoriInput[]
    createMany?: barangCreateManyKategoriInputEnvelope
    connect?: barangWhereUniqueInput | barangWhereUniqueInput[]
  }

  export type barangUncheckedCreateNestedManyWithoutKategoriInput = {
    create?: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput> | barangCreateWithoutKategoriInput[] | barangUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: barangCreateOrConnectWithoutKategoriInput | barangCreateOrConnectWithoutKategoriInput[]
    createMany?: barangCreateManyKategoriInputEnvelope
    connect?: barangWhereUniqueInput | barangWhereUniqueInput[]
  }

  export type barangUpdateManyWithoutKategoriNestedInput = {
    create?: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput> | barangCreateWithoutKategoriInput[] | barangUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: barangCreateOrConnectWithoutKategoriInput | barangCreateOrConnectWithoutKategoriInput[]
    upsert?: barangUpsertWithWhereUniqueWithoutKategoriInput | barangUpsertWithWhereUniqueWithoutKategoriInput[]
    createMany?: barangCreateManyKategoriInputEnvelope
    set?: barangWhereUniqueInput | barangWhereUniqueInput[]
    disconnect?: barangWhereUniqueInput | barangWhereUniqueInput[]
    delete?: barangWhereUniqueInput | barangWhereUniqueInput[]
    connect?: barangWhereUniqueInput | barangWhereUniqueInput[]
    update?: barangUpdateWithWhereUniqueWithoutKategoriInput | barangUpdateWithWhereUniqueWithoutKategoriInput[]
    updateMany?: barangUpdateManyWithWhereWithoutKategoriInput | barangUpdateManyWithWhereWithoutKategoriInput[]
    deleteMany?: barangScalarWhereInput | barangScalarWhereInput[]
  }

  export type barangUncheckedUpdateManyWithoutKategoriNestedInput = {
    create?: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput> | barangCreateWithoutKategoriInput[] | barangUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: barangCreateOrConnectWithoutKategoriInput | barangCreateOrConnectWithoutKategoriInput[]
    upsert?: barangUpsertWithWhereUniqueWithoutKategoriInput | barangUpsertWithWhereUniqueWithoutKategoriInput[]
    createMany?: barangCreateManyKategoriInputEnvelope
    set?: barangWhereUniqueInput | barangWhereUniqueInput[]
    disconnect?: barangWhereUniqueInput | barangWhereUniqueInput[]
    delete?: barangWhereUniqueInput | barangWhereUniqueInput[]
    connect?: barangWhereUniqueInput | barangWhereUniqueInput[]
    update?: barangUpdateWithWhereUniqueWithoutKategoriInput | barangUpdateWithWhereUniqueWithoutKategoriInput[]
    updateMany?: barangUpdateManyWithWhereWithoutKategoriInput | barangUpdateManyWithWhereWithoutKategoriInput[]
    deleteMany?: barangScalarWhereInput | barangScalarWhereInput[]
  }

  export type barangCreateNestedOneWithoutKeranjangInput = {
    create?: XOR<barangCreateWithoutKeranjangInput, barangUncheckedCreateWithoutKeranjangInput>
    connectOrCreate?: barangCreateOrConnectWithoutKeranjangInput
    connect?: barangWhereUniqueInput
  }

  export type userCreateNestedOneWithoutKeranjangInput = {
    create?: XOR<userCreateWithoutKeranjangInput, userUncheckedCreateWithoutKeranjangInput>
    connectOrCreate?: userCreateOrConnectWithoutKeranjangInput
    connect?: userWhereUniqueInput
  }

  export type barangUpdateOneRequiredWithoutKeranjangNestedInput = {
    create?: XOR<barangCreateWithoutKeranjangInput, barangUncheckedCreateWithoutKeranjangInput>
    connectOrCreate?: barangCreateOrConnectWithoutKeranjangInput
    upsert?: barangUpsertWithoutKeranjangInput
    connect?: barangWhereUniqueInput
    update?: XOR<XOR<barangUpdateToOneWithWhereWithoutKeranjangInput, barangUpdateWithoutKeranjangInput>, barangUncheckedUpdateWithoutKeranjangInput>
  }

  export type userUpdateOneRequiredWithoutKeranjangNestedInput = {
    create?: XOR<userCreateWithoutKeranjangInput, userUncheckedCreateWithoutKeranjangInput>
    connectOrCreate?: userCreateOrConnectWithoutKeranjangInput
    upsert?: userUpsertWithoutKeranjangInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutKeranjangInput, userUpdateWithoutKeranjangInput>, userUncheckedUpdateWithoutKeranjangInput>
  }

  export type barangCreateNestedOneWithoutPenaltiInput = {
    create?: XOR<barangCreateWithoutPenaltiInput, barangUncheckedCreateWithoutPenaltiInput>
    connectOrCreate?: barangCreateOrConnectWithoutPenaltiInput
    connect?: barangWhereUniqueInput
  }

  export type userCreateNestedOneWithoutPenaltiInput = {
    create?: XOR<userCreateWithoutPenaltiInput, userUncheckedCreateWithoutPenaltiInput>
    connectOrCreate?: userCreateOrConnectWithoutPenaltiInput
    connect?: userWhereUniqueInput
  }

  export type barangUpdateOneRequiredWithoutPenaltiNestedInput = {
    create?: XOR<barangCreateWithoutPenaltiInput, barangUncheckedCreateWithoutPenaltiInput>
    connectOrCreate?: barangCreateOrConnectWithoutPenaltiInput
    upsert?: barangUpsertWithoutPenaltiInput
    connect?: barangWhereUniqueInput
    update?: XOR<XOR<barangUpdateToOneWithWhereWithoutPenaltiInput, barangUpdateWithoutPenaltiInput>, barangUncheckedUpdateWithoutPenaltiInput>
  }

  export type userUpdateOneRequiredWithoutPenaltiNestedInput = {
    create?: XOR<userCreateWithoutPenaltiInput, userUncheckedCreateWithoutPenaltiInput>
    connectOrCreate?: userCreateOrConnectWithoutPenaltiInput
    upsert?: userUpsertWithoutPenaltiInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPenaltiInput, userUpdateWithoutPenaltiInput>, userUncheckedUpdateWithoutPenaltiInput>
  }

  export type barangCreateNestedOneWithoutReviewInput = {
    create?: XOR<barangCreateWithoutReviewInput, barangUncheckedCreateWithoutReviewInput>
    connectOrCreate?: barangCreateOrConnectWithoutReviewInput
    connect?: barangWhereUniqueInput
  }

  export type userCreateNestedOneWithoutReviewInput = {
    create?: XOR<userCreateWithoutReviewInput, userUncheckedCreateWithoutReviewInput>
    connectOrCreate?: userCreateOrConnectWithoutReviewInput
    connect?: userWhereUniqueInput
  }

  export type barangUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<barangCreateWithoutReviewInput, barangUncheckedCreateWithoutReviewInput>
    connectOrCreate?: barangCreateOrConnectWithoutReviewInput
    upsert?: barangUpsertWithoutReviewInput
    connect?: barangWhereUniqueInput
    update?: XOR<XOR<barangUpdateToOneWithWhereWithoutReviewInput, barangUpdateWithoutReviewInput>, barangUncheckedUpdateWithoutReviewInput>
  }

  export type userUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<userCreateWithoutReviewInput, userUncheckedCreateWithoutReviewInput>
    connectOrCreate?: userCreateOrConnectWithoutReviewInput
    upsert?: userUpsertWithoutReviewInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutReviewInput, userUpdateWithoutReviewInput>, userUncheckedUpdateWithoutReviewInput>
  }

  export type userCreateNestedManyWithoutRoleInput = {
    create?: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput> | userCreateWithoutRoleInput[] | userUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userCreateOrConnectWithoutRoleInput | userCreateOrConnectWithoutRoleInput[]
    createMany?: userCreateManyRoleInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput> | userCreateWithoutRoleInput[] | userUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userCreateOrConnectWithoutRoleInput | userCreateOrConnectWithoutRoleInput[]
    createMany?: userCreateManyRoleInputEnvelope
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
  }

  export type userUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput> | userCreateWithoutRoleInput[] | userUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userCreateOrConnectWithoutRoleInput | userCreateOrConnectWithoutRoleInput[]
    upsert?: userUpsertWithWhereUniqueWithoutRoleInput | userUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userCreateManyRoleInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutRoleInput | userUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userUpdateManyWithWhereWithoutRoleInput | userUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type userUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput> | userCreateWithoutRoleInput[] | userUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: userCreateOrConnectWithoutRoleInput | userCreateOrConnectWithoutRoleInput[]
    upsert?: userUpsertWithWhereUniqueWithoutRoleInput | userUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: userCreateManyRoleInputEnvelope
    set?: userWhereUniqueInput | userWhereUniqueInput[]
    disconnect?: userWhereUniqueInput | userWhereUniqueInput[]
    delete?: userWhereUniqueInput | userWhereUniqueInput[]
    connect?: userWhereUniqueInput | userWhereUniqueInput[]
    update?: userUpdateWithWhereUniqueWithoutRoleInput | userUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: userUpdateManyWithWhereWithoutRoleInput | userUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: userScalarWhereInput | userScalarWhereInput[]
  }

  export type barangCreateNestedOneWithoutSewa_itemsInput = {
    create?: XOR<barangCreateWithoutSewa_itemsInput, barangUncheckedCreateWithoutSewa_itemsInput>
    connectOrCreate?: barangCreateOrConnectWithoutSewa_itemsInput
    connect?: barangWhereUniqueInput
  }

  export type sewa_reqCreateNestedOneWithoutSewa_itemsInput = {
    create?: XOR<sewa_reqCreateWithoutSewa_itemsInput, sewa_reqUncheckedCreateWithoutSewa_itemsInput>
    connectOrCreate?: sewa_reqCreateOrConnectWithoutSewa_itemsInput
    connect?: sewa_reqWhereUniqueInput
  }

  export type barangUpdateOneRequiredWithoutSewa_itemsNestedInput = {
    create?: XOR<barangCreateWithoutSewa_itemsInput, barangUncheckedCreateWithoutSewa_itemsInput>
    connectOrCreate?: barangCreateOrConnectWithoutSewa_itemsInput
    upsert?: barangUpsertWithoutSewa_itemsInput
    connect?: barangWhereUniqueInput
    update?: XOR<XOR<barangUpdateToOneWithWhereWithoutSewa_itemsInput, barangUpdateWithoutSewa_itemsInput>, barangUncheckedUpdateWithoutSewa_itemsInput>
  }

  export type sewa_reqUpdateOneRequiredWithoutSewa_itemsNestedInput = {
    create?: XOR<sewa_reqCreateWithoutSewa_itemsInput, sewa_reqUncheckedCreateWithoutSewa_itemsInput>
    connectOrCreate?: sewa_reqCreateOrConnectWithoutSewa_itemsInput
    upsert?: sewa_reqUpsertWithoutSewa_itemsInput
    connect?: sewa_reqWhereUniqueInput
    update?: XOR<XOR<sewa_reqUpdateToOneWithWhereWithoutSewa_itemsInput, sewa_reqUpdateWithoutSewa_itemsInput>, sewa_reqUncheckedUpdateWithoutSewa_itemsInput>
  }

  export type sewa_itemsCreateNestedManyWithoutSewa_reqInput = {
    create?: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput> | sewa_itemsCreateWithoutSewa_reqInput[] | sewa_itemsUncheckedCreateWithoutSewa_reqInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutSewa_reqInput | sewa_itemsCreateOrConnectWithoutSewa_reqInput[]
    createMany?: sewa_itemsCreateManySewa_reqInputEnvelope
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutSewa_reqInput = {
    create?: XOR<userCreateWithoutSewa_reqInput, userUncheckedCreateWithoutSewa_reqInput>
    connectOrCreate?: userCreateOrConnectWithoutSewa_reqInput
    connect?: userWhereUniqueInput
  }

  export type sewa_itemsUncheckedCreateNestedManyWithoutSewa_reqInput = {
    create?: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput> | sewa_itemsCreateWithoutSewa_reqInput[] | sewa_itemsUncheckedCreateWithoutSewa_reqInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutSewa_reqInput | sewa_itemsCreateOrConnectWithoutSewa_reqInput[]
    createMany?: sewa_itemsCreateManySewa_reqInputEnvelope
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
  }

  export type sewa_itemsUpdateManyWithoutSewa_reqNestedInput = {
    create?: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput> | sewa_itemsCreateWithoutSewa_reqInput[] | sewa_itemsUncheckedCreateWithoutSewa_reqInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutSewa_reqInput | sewa_itemsCreateOrConnectWithoutSewa_reqInput[]
    upsert?: sewa_itemsUpsertWithWhereUniqueWithoutSewa_reqInput | sewa_itemsUpsertWithWhereUniqueWithoutSewa_reqInput[]
    createMany?: sewa_itemsCreateManySewa_reqInputEnvelope
    set?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    disconnect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    delete?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    update?: sewa_itemsUpdateWithWhereUniqueWithoutSewa_reqInput | sewa_itemsUpdateWithWhereUniqueWithoutSewa_reqInput[]
    updateMany?: sewa_itemsUpdateManyWithWhereWithoutSewa_reqInput | sewa_itemsUpdateManyWithWhereWithoutSewa_reqInput[]
    deleteMany?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutSewa_reqNestedInput = {
    create?: XOR<userCreateWithoutSewa_reqInput, userUncheckedCreateWithoutSewa_reqInput>
    connectOrCreate?: userCreateOrConnectWithoutSewa_reqInput
    upsert?: userUpsertWithoutSewa_reqInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutSewa_reqInput, userUpdateWithoutSewa_reqInput>, userUncheckedUpdateWithoutSewa_reqInput>
  }

  export type sewa_itemsUncheckedUpdateManyWithoutSewa_reqNestedInput = {
    create?: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput> | sewa_itemsCreateWithoutSewa_reqInput[] | sewa_itemsUncheckedCreateWithoutSewa_reqInput[]
    connectOrCreate?: sewa_itemsCreateOrConnectWithoutSewa_reqInput | sewa_itemsCreateOrConnectWithoutSewa_reqInput[]
    upsert?: sewa_itemsUpsertWithWhereUniqueWithoutSewa_reqInput | sewa_itemsUpsertWithWhereUniqueWithoutSewa_reqInput[]
    createMany?: sewa_itemsCreateManySewa_reqInputEnvelope
    set?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    disconnect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    delete?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    connect?: sewa_itemsWhereUniqueInput | sewa_itemsWhereUniqueInput[]
    update?: sewa_itemsUpdateWithWhereUniqueWithoutSewa_reqInput | sewa_itemsUpdateWithWhereUniqueWithoutSewa_reqInput[]
    updateMany?: sewa_itemsUpdateManyWithWhereWithoutSewa_reqInput | sewa_itemsUpdateManyWithWhereWithoutSewa_reqInput[]
    deleteMany?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
  }

  export type artikelCreateNestedManyWithoutTagsInput = {
    create?: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput> | artikelCreateWithoutTagsInput[] | artikelUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: artikelCreateOrConnectWithoutTagsInput | artikelCreateOrConnectWithoutTagsInput[]
    createMany?: artikelCreateManyTagsInputEnvelope
    connect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
  }

  export type artikelUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput> | artikelCreateWithoutTagsInput[] | artikelUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: artikelCreateOrConnectWithoutTagsInput | artikelCreateOrConnectWithoutTagsInput[]
    createMany?: artikelCreateManyTagsInputEnvelope
    connect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
  }

  export type artikelUpdateManyWithoutTagsNestedInput = {
    create?: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput> | artikelCreateWithoutTagsInput[] | artikelUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: artikelCreateOrConnectWithoutTagsInput | artikelCreateOrConnectWithoutTagsInput[]
    upsert?: artikelUpsertWithWhereUniqueWithoutTagsInput | artikelUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: artikelCreateManyTagsInputEnvelope
    set?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    disconnect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    delete?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    connect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    update?: artikelUpdateWithWhereUniqueWithoutTagsInput | artikelUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: artikelUpdateManyWithWhereWithoutTagsInput | artikelUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: artikelScalarWhereInput | artikelScalarWhereInput[]
  }

  export type artikelUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput> | artikelCreateWithoutTagsInput[] | artikelUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: artikelCreateOrConnectWithoutTagsInput | artikelCreateOrConnectWithoutTagsInput[]
    upsert?: artikelUpsertWithWhereUniqueWithoutTagsInput | artikelUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: artikelCreateManyTagsInputEnvelope
    set?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    disconnect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    delete?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    connect?: artikelWhereUniqueInput | artikelWhereUniqueInput[]
    update?: artikelUpdateWithWhereUniqueWithoutTagsInput | artikelUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: artikelUpdateManyWithWhereWithoutTagsInput | artikelUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: artikelScalarWhereInput | artikelScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<userCreateWithoutTransaksiInput, userUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksiInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutTransaksiNestedInput = {
    create?: XOR<userCreateWithoutTransaksiInput, userUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksiInput
    upsert?: userUpsertWithoutTransaksiInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutTransaksiInput, userUpdateWithoutTransaksiInput>, userUncheckedUpdateWithoutTransaksiInput>
  }

  export type artikel_commentCreateNestedManyWithoutUserInput = {
    create?: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput> | artikel_commentCreateWithoutUserInput[] | artikel_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutUserInput | artikel_commentCreateOrConnectWithoutUserInput[]
    createMany?: artikel_commentCreateManyUserInputEnvelope
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
  }

  export type keranjangCreateNestedManyWithoutUserInput = {
    create?: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput> | keranjangCreateWithoutUserInput[] | keranjangUncheckedCreateWithoutUserInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutUserInput | keranjangCreateOrConnectWithoutUserInput[]
    createMany?: keranjangCreateManyUserInputEnvelope
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
  }

  export type penaltiCreateNestedManyWithoutUserInput = {
    create?: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput> | penaltiCreateWithoutUserInput[] | penaltiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutUserInput | penaltiCreateOrConnectWithoutUserInput[]
    createMany?: penaltiCreateManyUserInputEnvelope
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
  }

  export type reviewCreateNestedManyWithoutUserInput = {
    create?: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput> | reviewCreateWithoutUserInput[] | reviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutUserInput | reviewCreateOrConnectWithoutUserInput[]
    createMany?: reviewCreateManyUserInputEnvelope
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
  }

  export type sewa_reqCreateNestedManyWithoutUserInput = {
    create?: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput> | sewa_reqCreateWithoutUserInput[] | sewa_reqUncheckedCreateWithoutUserInput[]
    connectOrCreate?: sewa_reqCreateOrConnectWithoutUserInput | sewa_reqCreateOrConnectWithoutUserInput[]
    createMany?: sewa_reqCreateManyUserInputEnvelope
    connect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
  }

  export type transaksiCreateNestedManyWithoutUserInput = {
    create?: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput> | transaksiCreateWithoutUserInput[] | transaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUserInput | transaksiCreateOrConnectWithoutUserInput[]
    createMany?: transaksiCreateManyUserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type roleCreateNestedOneWithoutUserInput = {
    create?: XOR<roleCreateWithoutUserInput, roleUncheckedCreateWithoutUserInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserInput
    connect?: roleWhereUniqueInput
  }

  export type artikel_commentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput> | artikel_commentCreateWithoutUserInput[] | artikel_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutUserInput | artikel_commentCreateOrConnectWithoutUserInput[]
    createMany?: artikel_commentCreateManyUserInputEnvelope
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
  }

  export type keranjangUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput> | keranjangCreateWithoutUserInput[] | keranjangUncheckedCreateWithoutUserInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutUserInput | keranjangCreateOrConnectWithoutUserInput[]
    createMany?: keranjangCreateManyUserInputEnvelope
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
  }

  export type penaltiUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput> | penaltiCreateWithoutUserInput[] | penaltiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutUserInput | penaltiCreateOrConnectWithoutUserInput[]
    createMany?: penaltiCreateManyUserInputEnvelope
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
  }

  export type reviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput> | reviewCreateWithoutUserInput[] | reviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutUserInput | reviewCreateOrConnectWithoutUserInput[]
    createMany?: reviewCreateManyUserInputEnvelope
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
  }

  export type sewa_reqUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput> | sewa_reqCreateWithoutUserInput[] | sewa_reqUncheckedCreateWithoutUserInput[]
    connectOrCreate?: sewa_reqCreateOrConnectWithoutUserInput | sewa_reqCreateOrConnectWithoutUserInput[]
    createMany?: sewa_reqCreateManyUserInputEnvelope
    connect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
  }

  export type transaksiUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput> | transaksiCreateWithoutUserInput[] | transaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUserInput | transaksiCreateOrConnectWithoutUserInput[]
    createMany?: transaksiCreateManyUserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type artikel_commentUpdateManyWithoutUserNestedInput = {
    create?: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput> | artikel_commentCreateWithoutUserInput[] | artikel_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutUserInput | artikel_commentCreateOrConnectWithoutUserInput[]
    upsert?: artikel_commentUpsertWithWhereUniqueWithoutUserInput | artikel_commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: artikel_commentCreateManyUserInputEnvelope
    set?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    disconnect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    delete?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    update?: artikel_commentUpdateWithWhereUniqueWithoutUserInput | artikel_commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: artikel_commentUpdateManyWithWhereWithoutUserInput | artikel_commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
  }

  export type keranjangUpdateManyWithoutUserNestedInput = {
    create?: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput> | keranjangCreateWithoutUserInput[] | keranjangUncheckedCreateWithoutUserInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutUserInput | keranjangCreateOrConnectWithoutUserInput[]
    upsert?: keranjangUpsertWithWhereUniqueWithoutUserInput | keranjangUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: keranjangCreateManyUserInputEnvelope
    set?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    disconnect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    delete?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    update?: keranjangUpdateWithWhereUniqueWithoutUserInput | keranjangUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: keranjangUpdateManyWithWhereWithoutUserInput | keranjangUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
  }

  export type penaltiUpdateManyWithoutUserNestedInput = {
    create?: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput> | penaltiCreateWithoutUserInput[] | penaltiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutUserInput | penaltiCreateOrConnectWithoutUserInput[]
    upsert?: penaltiUpsertWithWhereUniqueWithoutUserInput | penaltiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: penaltiCreateManyUserInputEnvelope
    set?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    disconnect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    delete?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    update?: penaltiUpdateWithWhereUniqueWithoutUserInput | penaltiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: penaltiUpdateManyWithWhereWithoutUserInput | penaltiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
  }

  export type reviewUpdateManyWithoutUserNestedInput = {
    create?: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput> | reviewCreateWithoutUserInput[] | reviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutUserInput | reviewCreateOrConnectWithoutUserInput[]
    upsert?: reviewUpsertWithWhereUniqueWithoutUserInput | reviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reviewCreateManyUserInputEnvelope
    set?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    disconnect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    delete?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    update?: reviewUpdateWithWhereUniqueWithoutUserInput | reviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reviewUpdateManyWithWhereWithoutUserInput | reviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reviewScalarWhereInput | reviewScalarWhereInput[]
  }

  export type sewa_reqUpdateManyWithoutUserNestedInput = {
    create?: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput> | sewa_reqCreateWithoutUserInput[] | sewa_reqUncheckedCreateWithoutUserInput[]
    connectOrCreate?: sewa_reqCreateOrConnectWithoutUserInput | sewa_reqCreateOrConnectWithoutUserInput[]
    upsert?: sewa_reqUpsertWithWhereUniqueWithoutUserInput | sewa_reqUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: sewa_reqCreateManyUserInputEnvelope
    set?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    disconnect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    delete?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    connect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    update?: sewa_reqUpdateWithWhereUniqueWithoutUserInput | sewa_reqUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: sewa_reqUpdateManyWithWhereWithoutUserInput | sewa_reqUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: sewa_reqScalarWhereInput | sewa_reqScalarWhereInput[]
  }

  export type transaksiUpdateManyWithoutUserNestedInput = {
    create?: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput> | transaksiCreateWithoutUserInput[] | transaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUserInput | transaksiCreateOrConnectWithoutUserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUserInput | transaksiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transaksiCreateManyUserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUserInput | transaksiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUserInput | transaksiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type roleUpdateOneRequiredWithoutUserNestedInput = {
    create?: XOR<roleCreateWithoutUserInput, roleUncheckedCreateWithoutUserInput>
    connectOrCreate?: roleCreateOrConnectWithoutUserInput
    upsert?: roleUpsertWithoutUserInput
    connect?: roleWhereUniqueInput
    update?: XOR<XOR<roleUpdateToOneWithWhereWithoutUserInput, roleUpdateWithoutUserInput>, roleUncheckedUpdateWithoutUserInput>
  }

  export type artikel_commentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput> | artikel_commentCreateWithoutUserInput[] | artikel_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: artikel_commentCreateOrConnectWithoutUserInput | artikel_commentCreateOrConnectWithoutUserInput[]
    upsert?: artikel_commentUpsertWithWhereUniqueWithoutUserInput | artikel_commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: artikel_commentCreateManyUserInputEnvelope
    set?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    disconnect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    delete?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    connect?: artikel_commentWhereUniqueInput | artikel_commentWhereUniqueInput[]
    update?: artikel_commentUpdateWithWhereUniqueWithoutUserInput | artikel_commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: artikel_commentUpdateManyWithWhereWithoutUserInput | artikel_commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
  }

  export type keranjangUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput> | keranjangCreateWithoutUserInput[] | keranjangUncheckedCreateWithoutUserInput[]
    connectOrCreate?: keranjangCreateOrConnectWithoutUserInput | keranjangCreateOrConnectWithoutUserInput[]
    upsert?: keranjangUpsertWithWhereUniqueWithoutUserInput | keranjangUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: keranjangCreateManyUserInputEnvelope
    set?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    disconnect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    delete?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    connect?: keranjangWhereUniqueInput | keranjangWhereUniqueInput[]
    update?: keranjangUpdateWithWhereUniqueWithoutUserInput | keranjangUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: keranjangUpdateManyWithWhereWithoutUserInput | keranjangUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
  }

  export type penaltiUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput> | penaltiCreateWithoutUserInput[] | penaltiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: penaltiCreateOrConnectWithoutUserInput | penaltiCreateOrConnectWithoutUserInput[]
    upsert?: penaltiUpsertWithWhereUniqueWithoutUserInput | penaltiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: penaltiCreateManyUserInputEnvelope
    set?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    disconnect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    delete?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    connect?: penaltiWhereUniqueInput | penaltiWhereUniqueInput[]
    update?: penaltiUpdateWithWhereUniqueWithoutUserInput | penaltiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: penaltiUpdateManyWithWhereWithoutUserInput | penaltiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
  }

  export type reviewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput> | reviewCreateWithoutUserInput[] | reviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewCreateOrConnectWithoutUserInput | reviewCreateOrConnectWithoutUserInput[]
    upsert?: reviewUpsertWithWhereUniqueWithoutUserInput | reviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reviewCreateManyUserInputEnvelope
    set?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    disconnect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    delete?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    connect?: reviewWhereUniqueInput | reviewWhereUniqueInput[]
    update?: reviewUpdateWithWhereUniqueWithoutUserInput | reviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reviewUpdateManyWithWhereWithoutUserInput | reviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reviewScalarWhereInput | reviewScalarWhereInput[]
  }

  export type sewa_reqUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput> | sewa_reqCreateWithoutUserInput[] | sewa_reqUncheckedCreateWithoutUserInput[]
    connectOrCreate?: sewa_reqCreateOrConnectWithoutUserInput | sewa_reqCreateOrConnectWithoutUserInput[]
    upsert?: sewa_reqUpsertWithWhereUniqueWithoutUserInput | sewa_reqUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: sewa_reqCreateManyUserInputEnvelope
    set?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    disconnect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    delete?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    connect?: sewa_reqWhereUniqueInput | sewa_reqWhereUniqueInput[]
    update?: sewa_reqUpdateWithWhereUniqueWithoutUserInput | sewa_reqUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: sewa_reqUpdateManyWithWhereWithoutUserInput | sewa_reqUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: sewa_reqScalarWhereInput | sewa_reqScalarWhereInput[]
  }

  export type transaksiUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput> | transaksiCreateWithoutUserInput[] | transaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUserInput | transaksiCreateOrConnectWithoutUserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUserInput | transaksiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transaksiCreateManyUserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUserInput | transaksiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUserInput | transaksiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type tagsCreateWithoutArtikelInput = {
    nama: string
  }

  export type tagsUncheckedCreateWithoutArtikelInput = {
    nama: string
    id?: number
  }

  export type tagsCreateOrConnectWithoutArtikelInput = {
    where: tagsWhereUniqueInput
    create: XOR<tagsCreateWithoutArtikelInput, tagsUncheckedCreateWithoutArtikelInput>
  }

  export type artikel_commentCreateWithoutArtikelInput = {
    komen_teks: string
    user: userCreateNestedOneWithoutArtikel_commentInput
  }

  export type artikel_commentUncheckedCreateWithoutArtikelInput = {
    id?: number
    id_user: number
    komen_teks: string
  }

  export type artikel_commentCreateOrConnectWithoutArtikelInput = {
    where: artikel_commentWhereUniqueInput
    create: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput>
  }

  export type artikel_commentCreateManyArtikelInputEnvelope = {
    data: artikel_commentCreateManyArtikelInput | artikel_commentCreateManyArtikelInput[]
    skipDuplicates?: boolean
  }

  export type tagsUpsertWithoutArtikelInput = {
    update: XOR<tagsUpdateWithoutArtikelInput, tagsUncheckedUpdateWithoutArtikelInput>
    create: XOR<tagsCreateWithoutArtikelInput, tagsUncheckedCreateWithoutArtikelInput>
    where?: tagsWhereInput
  }

  export type tagsUpdateToOneWithWhereWithoutArtikelInput = {
    where?: tagsWhereInput
    data: XOR<tagsUpdateWithoutArtikelInput, tagsUncheckedUpdateWithoutArtikelInput>
  }

  export type tagsUpdateWithoutArtikelInput = {
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type tagsUncheckedUpdateWithoutArtikelInput = {
    nama?: StringFieldUpdateOperationsInput | string
    id?: IntFieldUpdateOperationsInput | number
  }

  export type artikel_commentUpsertWithWhereUniqueWithoutArtikelInput = {
    where: artikel_commentWhereUniqueInput
    update: XOR<artikel_commentUpdateWithoutArtikelInput, artikel_commentUncheckedUpdateWithoutArtikelInput>
    create: XOR<artikel_commentCreateWithoutArtikelInput, artikel_commentUncheckedCreateWithoutArtikelInput>
  }

  export type artikel_commentUpdateWithWhereUniqueWithoutArtikelInput = {
    where: artikel_commentWhereUniqueInput
    data: XOR<artikel_commentUpdateWithoutArtikelInput, artikel_commentUncheckedUpdateWithoutArtikelInput>
  }

  export type artikel_commentUpdateManyWithWhereWithoutArtikelInput = {
    where: artikel_commentScalarWhereInput
    data: XOR<artikel_commentUpdateManyMutationInput, artikel_commentUncheckedUpdateManyWithoutArtikelInput>
  }

  export type artikel_commentScalarWhereInput = {
    AND?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
    OR?: artikel_commentScalarWhereInput[]
    NOT?: artikel_commentScalarWhereInput | artikel_commentScalarWhereInput[]
    id?: IntFilter<"artikel_comment"> | number
    id_artikel?: IntFilter<"artikel_comment"> | number
    id_user?: IntFilter<"artikel_comment"> | number
    komen_teks?: StringFilter<"artikel_comment"> | string
  }

  export type artikelCreateWithoutArtikel_commentInput = {
    judul: string
    konten: string
    foto: string
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
    tags: tagsCreateNestedOneWithoutArtikelInput
  }

  export type artikelUncheckedCreateWithoutArtikel_commentInput = {
    id?: number
    judul: string
    konten: string
    foto: string
    id_tags: number
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
  }

  export type artikelCreateOrConnectWithoutArtikel_commentInput = {
    where: artikelWhereUniqueInput
    create: XOR<artikelCreateWithoutArtikel_commentInput, artikelUncheckedCreateWithoutArtikel_commentInput>
  }

  export type userCreateWithoutArtikel_commentInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutArtikel_commentInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutArtikel_commentInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutArtikel_commentInput, userUncheckedCreateWithoutArtikel_commentInput>
  }

  export type artikelUpsertWithoutArtikel_commentInput = {
    update: XOR<artikelUpdateWithoutArtikel_commentInput, artikelUncheckedUpdateWithoutArtikel_commentInput>
    create: XOR<artikelCreateWithoutArtikel_commentInput, artikelUncheckedCreateWithoutArtikel_commentInput>
    where?: artikelWhereInput
  }

  export type artikelUpdateToOneWithWhereWithoutArtikel_commentInput = {
    where?: artikelWhereInput
    data: XOR<artikelUpdateWithoutArtikel_commentInput, artikelUncheckedUpdateWithoutArtikel_commentInput>
  }

  export type artikelUpdateWithoutArtikel_commentInput = {
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: tagsUpdateOneRequiredWithoutArtikelNestedInput
  }

  export type artikelUncheckedUpdateWithoutArtikel_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_tags?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpsertWithoutArtikel_commentInput = {
    update: XOR<userUpdateWithoutArtikel_commentInput, userUncheckedUpdateWithoutArtikel_commentInput>
    create: XOR<userCreateWithoutArtikel_commentInput, userUncheckedCreateWithoutArtikel_commentInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutArtikel_commentInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutArtikel_commentInput, userUncheckedUpdateWithoutArtikel_commentInput>
  }

  export type userUpdateWithoutArtikel_commentInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutArtikel_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type kategoriCreateWithoutBarangInput = {
    nama: string
  }

  export type kategoriUncheckedCreateWithoutBarangInput = {
    id?: number
    nama: string
  }

  export type kategoriCreateOrConnectWithoutBarangInput = {
    where: kategoriWhereUniqueInput
    create: XOR<kategoriCreateWithoutBarangInput, kategoriUncheckedCreateWithoutBarangInput>
  }

  export type keranjangCreateWithoutBarangInput = {
    jumlah: number
    subtotal: number
    user: userCreateNestedOneWithoutKeranjangInput
  }

  export type keranjangUncheckedCreateWithoutBarangInput = {
    id?: number
    id_user: number
    jumlah: number
    subtotal: number
  }

  export type keranjangCreateOrConnectWithoutBarangInput = {
    where: keranjangWhereUniqueInput
    create: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput>
  }

  export type keranjangCreateManyBarangInputEnvelope = {
    data: keranjangCreateManyBarangInput | keranjangCreateManyBarangInput[]
    skipDuplicates?: boolean
  }

  export type penaltiCreateWithoutBarangInput = {
    total_bayar: number
    user: userCreateNestedOneWithoutPenaltiInput
  }

  export type penaltiUncheckedCreateWithoutBarangInput = {
    id?: number
    id_user: number
    total_bayar: number
  }

  export type penaltiCreateOrConnectWithoutBarangInput = {
    where: penaltiWhereUniqueInput
    create: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput>
  }

  export type penaltiCreateManyBarangInputEnvelope = {
    data: penaltiCreateManyBarangInput | penaltiCreateManyBarangInput[]
    skipDuplicates?: boolean
  }

  export type reviewCreateWithoutBarangInput = {
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
    user: userCreateNestedOneWithoutReviewInput
  }

  export type reviewUncheckedCreateWithoutBarangInput = {
    id?: number
    id_user: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type reviewCreateOrConnectWithoutBarangInput = {
    where: reviewWhereUniqueInput
    create: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput>
  }

  export type reviewCreateManyBarangInputEnvelope = {
    data: reviewCreateManyBarangInput | reviewCreateManyBarangInput[]
    skipDuplicates?: boolean
  }

  export type sewa_itemsCreateWithoutBarangInput = {
    jumlah: number
    harga_total: number
    sewa_req: sewa_reqCreateNestedOneWithoutSewa_itemsInput
  }

  export type sewa_itemsUncheckedCreateWithoutBarangInput = {
    id?: number
    id_sewa_req: number
    jumlah: number
    harga_total: number
  }

  export type sewa_itemsCreateOrConnectWithoutBarangInput = {
    where: sewa_itemsWhereUniqueInput
    create: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput>
  }

  export type sewa_itemsCreateManyBarangInputEnvelope = {
    data: sewa_itemsCreateManyBarangInput | sewa_itemsCreateManyBarangInput[]
    skipDuplicates?: boolean
  }

  export type kategoriUpsertWithoutBarangInput = {
    update: XOR<kategoriUpdateWithoutBarangInput, kategoriUncheckedUpdateWithoutBarangInput>
    create: XOR<kategoriCreateWithoutBarangInput, kategoriUncheckedCreateWithoutBarangInput>
    where?: kategoriWhereInput
  }

  export type kategoriUpdateToOneWithWhereWithoutBarangInput = {
    where?: kategoriWhereInput
    data: XOR<kategoriUpdateWithoutBarangInput, kategoriUncheckedUpdateWithoutBarangInput>
  }

  export type kategoriUpdateWithoutBarangInput = {
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type kategoriUncheckedUpdateWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type keranjangUpsertWithWhereUniqueWithoutBarangInput = {
    where: keranjangWhereUniqueInput
    update: XOR<keranjangUpdateWithoutBarangInput, keranjangUncheckedUpdateWithoutBarangInput>
    create: XOR<keranjangCreateWithoutBarangInput, keranjangUncheckedCreateWithoutBarangInput>
  }

  export type keranjangUpdateWithWhereUniqueWithoutBarangInput = {
    where: keranjangWhereUniqueInput
    data: XOR<keranjangUpdateWithoutBarangInput, keranjangUncheckedUpdateWithoutBarangInput>
  }

  export type keranjangUpdateManyWithWhereWithoutBarangInput = {
    where: keranjangScalarWhereInput
    data: XOR<keranjangUpdateManyMutationInput, keranjangUncheckedUpdateManyWithoutBarangInput>
  }

  export type keranjangScalarWhereInput = {
    AND?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
    OR?: keranjangScalarWhereInput[]
    NOT?: keranjangScalarWhereInput | keranjangScalarWhereInput[]
    id?: IntFilter<"keranjang"> | number
    id_user?: IntFilter<"keranjang"> | number
    id_barang?: IntFilter<"keranjang"> | number
    jumlah?: IntFilter<"keranjang"> | number
    subtotal?: FloatFilter<"keranjang"> | number
  }

  export type penaltiUpsertWithWhereUniqueWithoutBarangInput = {
    where: penaltiWhereUniqueInput
    update: XOR<penaltiUpdateWithoutBarangInput, penaltiUncheckedUpdateWithoutBarangInput>
    create: XOR<penaltiCreateWithoutBarangInput, penaltiUncheckedCreateWithoutBarangInput>
  }

  export type penaltiUpdateWithWhereUniqueWithoutBarangInput = {
    where: penaltiWhereUniqueInput
    data: XOR<penaltiUpdateWithoutBarangInput, penaltiUncheckedUpdateWithoutBarangInput>
  }

  export type penaltiUpdateManyWithWhereWithoutBarangInput = {
    where: penaltiScalarWhereInput
    data: XOR<penaltiUpdateManyMutationInput, penaltiUncheckedUpdateManyWithoutBarangInput>
  }

  export type penaltiScalarWhereInput = {
    AND?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
    OR?: penaltiScalarWhereInput[]
    NOT?: penaltiScalarWhereInput | penaltiScalarWhereInput[]
    id?: IntFilter<"penalti"> | number
    id_barang?: IntFilter<"penalti"> | number
    id_user?: IntFilter<"penalti"> | number
    total_bayar?: FloatFilter<"penalti"> | number
  }

  export type reviewUpsertWithWhereUniqueWithoutBarangInput = {
    where: reviewWhereUniqueInput
    update: XOR<reviewUpdateWithoutBarangInput, reviewUncheckedUpdateWithoutBarangInput>
    create: XOR<reviewCreateWithoutBarangInput, reviewUncheckedCreateWithoutBarangInput>
  }

  export type reviewUpdateWithWhereUniqueWithoutBarangInput = {
    where: reviewWhereUniqueInput
    data: XOR<reviewUpdateWithoutBarangInput, reviewUncheckedUpdateWithoutBarangInput>
  }

  export type reviewUpdateManyWithWhereWithoutBarangInput = {
    where: reviewScalarWhereInput
    data: XOR<reviewUpdateManyMutationInput, reviewUncheckedUpdateManyWithoutBarangInput>
  }

  export type reviewScalarWhereInput = {
    AND?: reviewScalarWhereInput | reviewScalarWhereInput[]
    OR?: reviewScalarWhereInput[]
    NOT?: reviewScalarWhereInput | reviewScalarWhereInput[]
    id?: IntFilter<"review"> | number
    id_user?: IntFilter<"review"> | number
    id_barang?: IntFilter<"review"> | number
    rating?: IntFilter<"review"> | number
    createdAt?: DateTimeFilter<"review"> | Date | string
    komentar?: StringFilter<"review"> | string
    updatedAt?: DateTimeNullableFilter<"review"> | Date | string | null
  }

  export type sewa_itemsUpsertWithWhereUniqueWithoutBarangInput = {
    where: sewa_itemsWhereUniqueInput
    update: XOR<sewa_itemsUpdateWithoutBarangInput, sewa_itemsUncheckedUpdateWithoutBarangInput>
    create: XOR<sewa_itemsCreateWithoutBarangInput, sewa_itemsUncheckedCreateWithoutBarangInput>
  }

  export type sewa_itemsUpdateWithWhereUniqueWithoutBarangInput = {
    where: sewa_itemsWhereUniqueInput
    data: XOR<sewa_itemsUpdateWithoutBarangInput, sewa_itemsUncheckedUpdateWithoutBarangInput>
  }

  export type sewa_itemsUpdateManyWithWhereWithoutBarangInput = {
    where: sewa_itemsScalarWhereInput
    data: XOR<sewa_itemsUpdateManyMutationInput, sewa_itemsUncheckedUpdateManyWithoutBarangInput>
  }

  export type sewa_itemsScalarWhereInput = {
    AND?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
    OR?: sewa_itemsScalarWhereInput[]
    NOT?: sewa_itemsScalarWhereInput | sewa_itemsScalarWhereInput[]
    id?: IntFilter<"sewa_items"> | number
    id_sewa_req?: IntFilter<"sewa_items"> | number
    id_barang?: IntFilter<"sewa_items"> | number
    jumlah?: IntFilter<"sewa_items"> | number
    harga_total?: FloatFilter<"sewa_items"> | number
  }

  export type barangCreateWithoutKategoriInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    keranjang?: keranjangCreateNestedManyWithoutBarangInput
    penalti?: penaltiCreateNestedManyWithoutBarangInput
    review?: reviewCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateWithoutKategoriInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    keranjang?: keranjangUncheckedCreateNestedManyWithoutBarangInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutBarangInput
    review?: reviewUncheckedCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangCreateOrConnectWithoutKategoriInput = {
    where: barangWhereUniqueInput
    create: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput>
  }

  export type barangCreateManyKategoriInputEnvelope = {
    data: barangCreateManyKategoriInput | barangCreateManyKategoriInput[]
    skipDuplicates?: boolean
  }

  export type barangUpsertWithWhereUniqueWithoutKategoriInput = {
    where: barangWhereUniqueInput
    update: XOR<barangUpdateWithoutKategoriInput, barangUncheckedUpdateWithoutKategoriInput>
    create: XOR<barangCreateWithoutKategoriInput, barangUncheckedCreateWithoutKategoriInput>
  }

  export type barangUpdateWithWhereUniqueWithoutKategoriInput = {
    where: barangWhereUniqueInput
    data: XOR<barangUpdateWithoutKategoriInput, barangUncheckedUpdateWithoutKategoriInput>
  }

  export type barangUpdateManyWithWhereWithoutKategoriInput = {
    where: barangScalarWhereInput
    data: XOR<barangUpdateManyMutationInput, barangUncheckedUpdateManyWithoutKategoriInput>
  }

  export type barangScalarWhereInput = {
    AND?: barangScalarWhereInput | barangScalarWhereInput[]
    OR?: barangScalarWhereInput[]
    NOT?: barangScalarWhereInput | barangScalarWhereInput[]
    id?: IntFilter<"barang"> | number
    stok?: IntFilter<"barang"> | number
    foto?: StringFilter<"barang"> | string
    harga_pinalti_per_jam?: FloatFilter<"barang"> | number
    kategori_id?: IntFilter<"barang"> | number
    harga?: FloatFilter<"barang"> | number
    nama?: StringFilter<"barang"> | string
  }

  export type barangCreateWithoutKeranjangInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    kategori: kategoriCreateNestedOneWithoutBarangInput
    penalti?: penaltiCreateNestedManyWithoutBarangInput
    review?: reviewCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateWithoutKeranjangInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    penalti?: penaltiUncheckedCreateNestedManyWithoutBarangInput
    review?: reviewUncheckedCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangCreateOrConnectWithoutKeranjangInput = {
    where: barangWhereUniqueInput
    create: XOR<barangCreateWithoutKeranjangInput, barangUncheckedCreateWithoutKeranjangInput>
  }

  export type userCreateWithoutKeranjangInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutKeranjangInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutKeranjangInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutKeranjangInput, userUncheckedCreateWithoutKeranjangInput>
  }

  export type barangUpsertWithoutKeranjangInput = {
    update: XOR<barangUpdateWithoutKeranjangInput, barangUncheckedUpdateWithoutKeranjangInput>
    create: XOR<barangCreateWithoutKeranjangInput, barangUncheckedCreateWithoutKeranjangInput>
    where?: barangWhereInput
  }

  export type barangUpdateToOneWithWhereWithoutKeranjangInput = {
    where?: barangWhereInput
    data: XOR<barangUpdateWithoutKeranjangInput, barangUncheckedUpdateWithoutKeranjangInput>
  }

  export type barangUpdateWithoutKeranjangInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kategori?: kategoriUpdateOneRequiredWithoutBarangNestedInput
    penalti?: penaltiUpdateManyWithoutBarangNestedInput
    review?: reviewUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateWithoutKeranjangInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    penalti?: penaltiUncheckedUpdateManyWithoutBarangNestedInput
    review?: reviewUncheckedUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type userUpsertWithoutKeranjangInput = {
    update: XOR<userUpdateWithoutKeranjangInput, userUncheckedUpdateWithoutKeranjangInput>
    create: XOR<userCreateWithoutKeranjangInput, userUncheckedCreateWithoutKeranjangInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutKeranjangInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutKeranjangInput, userUncheckedUpdateWithoutKeranjangInput>
  }

  export type userUpdateWithoutKeranjangInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutKeranjangInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type barangCreateWithoutPenaltiInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    kategori: kategoriCreateNestedOneWithoutBarangInput
    keranjang?: keranjangCreateNestedManyWithoutBarangInput
    review?: reviewCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateWithoutPenaltiInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    keranjang?: keranjangUncheckedCreateNestedManyWithoutBarangInput
    review?: reviewUncheckedCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangCreateOrConnectWithoutPenaltiInput = {
    where: barangWhereUniqueInput
    create: XOR<barangCreateWithoutPenaltiInput, barangUncheckedCreateWithoutPenaltiInput>
  }

  export type userCreateWithoutPenaltiInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutPenaltiInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutPenaltiInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPenaltiInput, userUncheckedCreateWithoutPenaltiInput>
  }

  export type barangUpsertWithoutPenaltiInput = {
    update: XOR<barangUpdateWithoutPenaltiInput, barangUncheckedUpdateWithoutPenaltiInput>
    create: XOR<barangCreateWithoutPenaltiInput, barangUncheckedCreateWithoutPenaltiInput>
    where?: barangWhereInput
  }

  export type barangUpdateToOneWithWhereWithoutPenaltiInput = {
    where?: barangWhereInput
    data: XOR<barangUpdateWithoutPenaltiInput, barangUncheckedUpdateWithoutPenaltiInput>
  }

  export type barangUpdateWithoutPenaltiInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kategori?: kategoriUpdateOneRequiredWithoutBarangNestedInput
    keranjang?: keranjangUpdateManyWithoutBarangNestedInput
    review?: reviewUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateWithoutPenaltiInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUncheckedUpdateManyWithoutBarangNestedInput
    review?: reviewUncheckedUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type userUpsertWithoutPenaltiInput = {
    update: XOR<userUpdateWithoutPenaltiInput, userUncheckedUpdateWithoutPenaltiInput>
    create: XOR<userCreateWithoutPenaltiInput, userUncheckedCreateWithoutPenaltiInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPenaltiInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPenaltiInput, userUncheckedUpdateWithoutPenaltiInput>
  }

  export type userUpdateWithoutPenaltiInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutPenaltiInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type barangCreateWithoutReviewInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    kategori: kategoriCreateNestedOneWithoutBarangInput
    keranjang?: keranjangCreateNestedManyWithoutBarangInput
    penalti?: penaltiCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateWithoutReviewInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    keranjang?: keranjangUncheckedCreateNestedManyWithoutBarangInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutBarangInput
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangCreateOrConnectWithoutReviewInput = {
    where: barangWhereUniqueInput
    create: XOR<barangCreateWithoutReviewInput, barangUncheckedCreateWithoutReviewInput>
  }

  export type userCreateWithoutReviewInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutReviewInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutReviewInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutReviewInput, userUncheckedCreateWithoutReviewInput>
  }

  export type barangUpsertWithoutReviewInput = {
    update: XOR<barangUpdateWithoutReviewInput, barangUncheckedUpdateWithoutReviewInput>
    create: XOR<barangCreateWithoutReviewInput, barangUncheckedCreateWithoutReviewInput>
    where?: barangWhereInput
  }

  export type barangUpdateToOneWithWhereWithoutReviewInput = {
    where?: barangWhereInput
    data: XOR<barangUpdateWithoutReviewInput, barangUncheckedUpdateWithoutReviewInput>
  }

  export type barangUpdateWithoutReviewInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kategori?: kategoriUpdateOneRequiredWithoutBarangNestedInput
    keranjang?: keranjangUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUncheckedUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type userUpsertWithoutReviewInput = {
    update: XOR<userUpdateWithoutReviewInput, userUncheckedUpdateWithoutReviewInput>
    create: XOR<userCreateWithoutReviewInput, userUncheckedCreateWithoutReviewInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutReviewInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutReviewInput, userUncheckedUpdateWithoutReviewInput>
  }

  export type userUpdateWithoutReviewInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutRoleInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutRoleInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutRoleInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput>
  }

  export type userCreateManyRoleInputEnvelope = {
    data: userCreateManyRoleInput | userCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithWhereUniqueWithoutRoleInput = {
    where: userWhereUniqueInput
    update: XOR<userUpdateWithoutRoleInput, userUncheckedUpdateWithoutRoleInput>
    create: XOR<userCreateWithoutRoleInput, userUncheckedCreateWithoutRoleInput>
  }

  export type userUpdateWithWhereUniqueWithoutRoleInput = {
    where: userWhereUniqueInput
    data: XOR<userUpdateWithoutRoleInput, userUncheckedUpdateWithoutRoleInput>
  }

  export type userUpdateManyWithWhereWithoutRoleInput = {
    where: userScalarWhereInput
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyWithoutRoleInput>
  }

  export type userScalarWhereInput = {
    AND?: userScalarWhereInput | userScalarWhereInput[]
    OR?: userScalarWhereInput[]
    NOT?: userScalarWhereInput | userScalarWhereInput[]
    id?: IntFilter<"user"> | number
    username?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    no_telp?: StringNullableFilter<"user"> | string | null
    alamat?: StringNullableFilter<"user"> | string | null
    is_blacklisted?: BoolFilter<"user"> | boolean
    role_id?: IntFilter<"user"> | number
    email?: StringFilter<"user"> | string
    remember_token?: StringNullableFilter<"user"> | string | null
    avatar?: StringNullableFilter<"user"> | string | null
    createdAt?: DateTimeFilter<"user"> | Date | string
    date_of_birth?: DateTimeNullableFilter<"user"> | Date | string | null
    full_name?: StringNullableFilter<"user"> | string | null
    provider?: StringNullableFilter<"user"> | string | null
    provider_id?: StringNullableFilter<"user"> | string | null
    updatedAt?: DateTimeNullableFilter<"user"> | Date | string | null
  }

  export type barangCreateWithoutSewa_itemsInput = {
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
    kategori: kategoriCreateNestedOneWithoutBarangInput
    keranjang?: keranjangCreateNestedManyWithoutBarangInput
    penalti?: penaltiCreateNestedManyWithoutBarangInput
    review?: reviewCreateNestedManyWithoutBarangInput
  }

  export type barangUncheckedCreateWithoutSewa_itemsInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    kategori_id: number
    harga: number
    nama: string
    keranjang?: keranjangUncheckedCreateNestedManyWithoutBarangInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutBarangInput
    review?: reviewUncheckedCreateNestedManyWithoutBarangInput
  }

  export type barangCreateOrConnectWithoutSewa_itemsInput = {
    where: barangWhereUniqueInput
    create: XOR<barangCreateWithoutSewa_itemsInput, barangUncheckedCreateWithoutSewa_itemsInput>
  }

  export type sewa_reqCreateWithoutSewa_itemsInput = {
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
    user: userCreateNestedOneWithoutSewa_reqInput
  }

  export type sewa_reqUncheckedCreateWithoutSewa_itemsInput = {
    id?: number
    id_user: number
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
  }

  export type sewa_reqCreateOrConnectWithoutSewa_itemsInput = {
    where: sewa_reqWhereUniqueInput
    create: XOR<sewa_reqCreateWithoutSewa_itemsInput, sewa_reqUncheckedCreateWithoutSewa_itemsInput>
  }

  export type barangUpsertWithoutSewa_itemsInput = {
    update: XOR<barangUpdateWithoutSewa_itemsInput, barangUncheckedUpdateWithoutSewa_itemsInput>
    create: XOR<barangCreateWithoutSewa_itemsInput, barangUncheckedCreateWithoutSewa_itemsInput>
    where?: barangWhereInput
  }

  export type barangUpdateToOneWithWhereWithoutSewa_itemsInput = {
    where?: barangWhereInput
    data: XOR<barangUpdateWithoutSewa_itemsInput, barangUncheckedUpdateWithoutSewa_itemsInput>
  }

  export type barangUpdateWithoutSewa_itemsInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kategori?: kategoriUpdateOneRequiredWithoutBarangNestedInput
    keranjang?: keranjangUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUpdateManyWithoutBarangNestedInput
    review?: reviewUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateWithoutSewa_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    kategori_id?: IntFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUncheckedUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutBarangNestedInput
    review?: reviewUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type sewa_reqUpsertWithoutSewa_itemsInput = {
    update: XOR<sewa_reqUpdateWithoutSewa_itemsInput, sewa_reqUncheckedUpdateWithoutSewa_itemsInput>
    create: XOR<sewa_reqCreateWithoutSewa_itemsInput, sewa_reqUncheckedCreateWithoutSewa_itemsInput>
    where?: sewa_reqWhereInput
  }

  export type sewa_reqUpdateToOneWithWhereWithoutSewa_itemsInput = {
    where?: sewa_reqWhereInput
    data: XOR<sewa_reqUpdateWithoutSewa_itemsInput, sewa_reqUncheckedUpdateWithoutSewa_itemsInput>
  }

  export type sewa_reqUpdateWithoutSewa_itemsInput = {
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutSewa_reqNestedInput
  }

  export type sewa_reqUncheckedUpdateWithoutSewa_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sewa_itemsCreateWithoutSewa_reqInput = {
    jumlah: number
    harga_total: number
    barang: barangCreateNestedOneWithoutSewa_itemsInput
  }

  export type sewa_itemsUncheckedCreateWithoutSewa_reqInput = {
    id?: number
    id_barang: number
    jumlah: number
    harga_total: number
  }

  export type sewa_itemsCreateOrConnectWithoutSewa_reqInput = {
    where: sewa_itemsWhereUniqueInput
    create: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput>
  }

  export type sewa_itemsCreateManySewa_reqInputEnvelope = {
    data: sewa_itemsCreateManySewa_reqInput | sewa_itemsCreateManySewa_reqInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutSewa_reqInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    transaksi?: transaksiCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutSewa_reqInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    transaksi?: transaksiUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutSewa_reqInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutSewa_reqInput, userUncheckedCreateWithoutSewa_reqInput>
  }

  export type sewa_itemsUpsertWithWhereUniqueWithoutSewa_reqInput = {
    where: sewa_itemsWhereUniqueInput
    update: XOR<sewa_itemsUpdateWithoutSewa_reqInput, sewa_itemsUncheckedUpdateWithoutSewa_reqInput>
    create: XOR<sewa_itemsCreateWithoutSewa_reqInput, sewa_itemsUncheckedCreateWithoutSewa_reqInput>
  }

  export type sewa_itemsUpdateWithWhereUniqueWithoutSewa_reqInput = {
    where: sewa_itemsWhereUniqueInput
    data: XOR<sewa_itemsUpdateWithoutSewa_reqInput, sewa_itemsUncheckedUpdateWithoutSewa_reqInput>
  }

  export type sewa_itemsUpdateManyWithWhereWithoutSewa_reqInput = {
    where: sewa_itemsScalarWhereInput
    data: XOR<sewa_itemsUpdateManyMutationInput, sewa_itemsUncheckedUpdateManyWithoutSewa_reqInput>
  }

  export type userUpsertWithoutSewa_reqInput = {
    update: XOR<userUpdateWithoutSewa_reqInput, userUncheckedUpdateWithoutSewa_reqInput>
    create: XOR<userCreateWithoutSewa_reqInput, userUncheckedCreateWithoutSewa_reqInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutSewa_reqInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutSewa_reqInput, userUncheckedUpdateWithoutSewa_reqInput>
  }

  export type userUpdateWithoutSewa_reqInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutSewa_reqInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type artikelCreateWithoutTagsInput = {
    judul: string
    konten: string
    foto: string
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutArtikelInput
  }

  export type artikelUncheckedCreateWithoutTagsInput = {
    id?: number
    judul: string
    konten: string
    foto: string
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutArtikelInput
  }

  export type artikelCreateOrConnectWithoutTagsInput = {
    where: artikelWhereUniqueInput
    create: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput>
  }

  export type artikelCreateManyTagsInputEnvelope = {
    data: artikelCreateManyTagsInput | artikelCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type artikelUpsertWithWhereUniqueWithoutTagsInput = {
    where: artikelWhereUniqueInput
    update: XOR<artikelUpdateWithoutTagsInput, artikelUncheckedUpdateWithoutTagsInput>
    create: XOR<artikelCreateWithoutTagsInput, artikelUncheckedCreateWithoutTagsInput>
  }

  export type artikelUpdateWithWhereUniqueWithoutTagsInput = {
    where: artikelWhereUniqueInput
    data: XOR<artikelUpdateWithoutTagsInput, artikelUncheckedUpdateWithoutTagsInput>
  }

  export type artikelUpdateManyWithWhereWithoutTagsInput = {
    where: artikelScalarWhereInput
    data: XOR<artikelUpdateManyMutationInput, artikelUncheckedUpdateManyWithoutTagsInput>
  }

  export type artikelScalarWhereInput = {
    AND?: artikelScalarWhereInput | artikelScalarWhereInput[]
    OR?: artikelScalarWhereInput[]
    NOT?: artikelScalarWhereInput | artikelScalarWhereInput[]
    id?: IntFilter<"artikel"> | number
    judul?: StringFilter<"artikel"> | string
    konten?: StringFilter<"artikel"> | string
    foto?: StringFilter<"artikel"> | string
    id_tags?: IntFilter<"artikel"> | number
    createdAt?: DateTimeFilter<"artikel"> | Date | string
    is_deleted?: BoolFilter<"artikel"> | boolean
    is_published?: BoolFilter<"artikel"> | boolean
    publishAt?: DateTimeFilter<"artikel"> | Date | string
    updatedAt?: DateTimeNullableFilter<"artikel"> | Date | string | null
  }

  export type userCreateWithoutTransaksiInput = {
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentCreateNestedManyWithoutUserInput
    keranjang?: keranjangCreateNestedManyWithoutUserInput
    penalti?: penaltiCreateNestedManyWithoutUserInput
    review?: reviewCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqCreateNestedManyWithoutUserInput
    role: roleCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutTransaksiInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    role_id: number
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
    artikel_comment?: artikel_commentUncheckedCreateNestedManyWithoutUserInput
    keranjang?: keranjangUncheckedCreateNestedManyWithoutUserInput
    penalti?: penaltiUncheckedCreateNestedManyWithoutUserInput
    review?: reviewUncheckedCreateNestedManyWithoutUserInput
    sewa_req?: sewa_reqUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutTransaksiInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutTransaksiInput, userUncheckedCreateWithoutTransaksiInput>
  }

  export type userUpsertWithoutTransaksiInput = {
    update: XOR<userUpdateWithoutTransaksiInput, userUncheckedUpdateWithoutTransaksiInput>
    create: XOR<userCreateWithoutTransaksiInput, userUncheckedCreateWithoutTransaksiInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutTransaksiInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutTransaksiInput, userUncheckedUpdateWithoutTransaksiInput>
  }

  export type userUpdateWithoutTransaksiInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    role?: roleUpdateOneRequiredWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutTransaksiInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    role_id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
  }

  export type artikel_commentCreateWithoutUserInput = {
    komen_teks: string
    artikel: artikelCreateNestedOneWithoutArtikel_commentInput
  }

  export type artikel_commentUncheckedCreateWithoutUserInput = {
    id?: number
    id_artikel: number
    komen_teks: string
  }

  export type artikel_commentCreateOrConnectWithoutUserInput = {
    where: artikel_commentWhereUniqueInput
    create: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput>
  }

  export type artikel_commentCreateManyUserInputEnvelope = {
    data: artikel_commentCreateManyUserInput | artikel_commentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type keranjangCreateWithoutUserInput = {
    jumlah: number
    subtotal: number
    barang: barangCreateNestedOneWithoutKeranjangInput
  }

  export type keranjangUncheckedCreateWithoutUserInput = {
    id?: number
    id_barang: number
    jumlah: number
    subtotal: number
  }

  export type keranjangCreateOrConnectWithoutUserInput = {
    where: keranjangWhereUniqueInput
    create: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput>
  }

  export type keranjangCreateManyUserInputEnvelope = {
    data: keranjangCreateManyUserInput | keranjangCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type penaltiCreateWithoutUserInput = {
    total_bayar: number
    barang: barangCreateNestedOneWithoutPenaltiInput
  }

  export type penaltiUncheckedCreateWithoutUserInput = {
    id?: number
    id_barang: number
    total_bayar: number
  }

  export type penaltiCreateOrConnectWithoutUserInput = {
    where: penaltiWhereUniqueInput
    create: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput>
  }

  export type penaltiCreateManyUserInputEnvelope = {
    data: penaltiCreateManyUserInput | penaltiCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type reviewCreateWithoutUserInput = {
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
    barang: barangCreateNestedOneWithoutReviewInput
  }

  export type reviewUncheckedCreateWithoutUserInput = {
    id?: number
    id_barang: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type reviewCreateOrConnectWithoutUserInput = {
    where: reviewWhereUniqueInput
    create: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput>
  }

  export type reviewCreateManyUserInputEnvelope = {
    data: reviewCreateManyUserInput | reviewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type sewa_reqCreateWithoutUserInput = {
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
    sewa_items?: sewa_itemsCreateNestedManyWithoutSewa_reqInput
  }

  export type sewa_reqUncheckedCreateWithoutUserInput = {
    id?: number
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
    sewa_items?: sewa_itemsUncheckedCreateNestedManyWithoutSewa_reqInput
  }

  export type sewa_reqCreateOrConnectWithoutUserInput = {
    where: sewa_reqWhereUniqueInput
    create: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput>
  }

  export type sewa_reqCreateManyUserInputEnvelope = {
    data: sewa_reqCreateManyUserInput | sewa_reqCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type transaksiCreateWithoutUserInput = {
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
  }

  export type transaksiUncheckedCreateWithoutUserInput = {
    id?: number
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
  }

  export type transaksiCreateOrConnectWithoutUserInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput>
  }

  export type transaksiCreateManyUserInputEnvelope = {
    data: transaksiCreateManyUserInput | transaksiCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type roleCreateWithoutUserInput = {
    role_name: string
    deskripsi: string
  }

  export type roleUncheckedCreateWithoutUserInput = {
    id?: number
    role_name: string
    deskripsi: string
  }

  export type roleCreateOrConnectWithoutUserInput = {
    where: roleWhereUniqueInput
    create: XOR<roleCreateWithoutUserInput, roleUncheckedCreateWithoutUserInput>
  }

  export type artikel_commentUpsertWithWhereUniqueWithoutUserInput = {
    where: artikel_commentWhereUniqueInput
    update: XOR<artikel_commentUpdateWithoutUserInput, artikel_commentUncheckedUpdateWithoutUserInput>
    create: XOR<artikel_commentCreateWithoutUserInput, artikel_commentUncheckedCreateWithoutUserInput>
  }

  export type artikel_commentUpdateWithWhereUniqueWithoutUserInput = {
    where: artikel_commentWhereUniqueInput
    data: XOR<artikel_commentUpdateWithoutUserInput, artikel_commentUncheckedUpdateWithoutUserInput>
  }

  export type artikel_commentUpdateManyWithWhereWithoutUserInput = {
    where: artikel_commentScalarWhereInput
    data: XOR<artikel_commentUpdateManyMutationInput, artikel_commentUncheckedUpdateManyWithoutUserInput>
  }

  export type keranjangUpsertWithWhereUniqueWithoutUserInput = {
    where: keranjangWhereUniqueInput
    update: XOR<keranjangUpdateWithoutUserInput, keranjangUncheckedUpdateWithoutUserInput>
    create: XOR<keranjangCreateWithoutUserInput, keranjangUncheckedCreateWithoutUserInput>
  }

  export type keranjangUpdateWithWhereUniqueWithoutUserInput = {
    where: keranjangWhereUniqueInput
    data: XOR<keranjangUpdateWithoutUserInput, keranjangUncheckedUpdateWithoutUserInput>
  }

  export type keranjangUpdateManyWithWhereWithoutUserInput = {
    where: keranjangScalarWhereInput
    data: XOR<keranjangUpdateManyMutationInput, keranjangUncheckedUpdateManyWithoutUserInput>
  }

  export type penaltiUpsertWithWhereUniqueWithoutUserInput = {
    where: penaltiWhereUniqueInput
    update: XOR<penaltiUpdateWithoutUserInput, penaltiUncheckedUpdateWithoutUserInput>
    create: XOR<penaltiCreateWithoutUserInput, penaltiUncheckedCreateWithoutUserInput>
  }

  export type penaltiUpdateWithWhereUniqueWithoutUserInput = {
    where: penaltiWhereUniqueInput
    data: XOR<penaltiUpdateWithoutUserInput, penaltiUncheckedUpdateWithoutUserInput>
  }

  export type penaltiUpdateManyWithWhereWithoutUserInput = {
    where: penaltiScalarWhereInput
    data: XOR<penaltiUpdateManyMutationInput, penaltiUncheckedUpdateManyWithoutUserInput>
  }

  export type reviewUpsertWithWhereUniqueWithoutUserInput = {
    where: reviewWhereUniqueInput
    update: XOR<reviewUpdateWithoutUserInput, reviewUncheckedUpdateWithoutUserInput>
    create: XOR<reviewCreateWithoutUserInput, reviewUncheckedCreateWithoutUserInput>
  }

  export type reviewUpdateWithWhereUniqueWithoutUserInput = {
    where: reviewWhereUniqueInput
    data: XOR<reviewUpdateWithoutUserInput, reviewUncheckedUpdateWithoutUserInput>
  }

  export type reviewUpdateManyWithWhereWithoutUserInput = {
    where: reviewScalarWhereInput
    data: XOR<reviewUpdateManyMutationInput, reviewUncheckedUpdateManyWithoutUserInput>
  }

  export type sewa_reqUpsertWithWhereUniqueWithoutUserInput = {
    where: sewa_reqWhereUniqueInput
    update: XOR<sewa_reqUpdateWithoutUserInput, sewa_reqUncheckedUpdateWithoutUserInput>
    create: XOR<sewa_reqCreateWithoutUserInput, sewa_reqUncheckedCreateWithoutUserInput>
  }

  export type sewa_reqUpdateWithWhereUniqueWithoutUserInput = {
    where: sewa_reqWhereUniqueInput
    data: XOR<sewa_reqUpdateWithoutUserInput, sewa_reqUncheckedUpdateWithoutUserInput>
  }

  export type sewa_reqUpdateManyWithWhereWithoutUserInput = {
    where: sewa_reqScalarWhereInput
    data: XOR<sewa_reqUpdateManyMutationInput, sewa_reqUncheckedUpdateManyWithoutUserInput>
  }

  export type sewa_reqScalarWhereInput = {
    AND?: sewa_reqScalarWhereInput | sewa_reqScalarWhereInput[]
    OR?: sewa_reqScalarWhereInput[]
    NOT?: sewa_reqScalarWhereInput | sewa_reqScalarWhereInput[]
    id?: IntFilter<"sewa_req"> | number
    id_user?: IntFilter<"sewa_req"> | number
    start_date?: DateTimeFilter<"sewa_req"> | Date | string
    end_date?: DateTimeFilter<"sewa_req"> | Date | string
    status?: StringFilter<"sewa_req"> | string
    dikembalikan_pada?: DateTimeNullableFilter<"sewa_req"> | Date | string | null
  }

  export type transaksiUpsertWithWhereUniqueWithoutUserInput = {
    where: transaksiWhereUniqueInput
    update: XOR<transaksiUpdateWithoutUserInput, transaksiUncheckedUpdateWithoutUserInput>
    create: XOR<transaksiCreateWithoutUserInput, transaksiUncheckedCreateWithoutUserInput>
  }

  export type transaksiUpdateWithWhereUniqueWithoutUserInput = {
    where: transaksiWhereUniqueInput
    data: XOR<transaksiUpdateWithoutUserInput, transaksiUncheckedUpdateWithoutUserInput>
  }

  export type transaksiUpdateManyWithWhereWithoutUserInput = {
    where: transaksiScalarWhereInput
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyWithoutUserInput>
  }

  export type transaksiScalarWhereInput = {
    AND?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
    OR?: transaksiScalarWhereInput[]
    NOT?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
    id?: IntFilter<"transaksi"> | number
    id_user?: IntFilter<"transaksi"> | number
    total_pembayaran?: FloatFilter<"transaksi"> | number
    tanggal_transaksi?: DateTimeFilter<"transaksi"> | Date | string
    status?: StringFilter<"transaksi"> | string
  }

  export type roleUpsertWithoutUserInput = {
    update: XOR<roleUpdateWithoutUserInput, roleUncheckedUpdateWithoutUserInput>
    create: XOR<roleCreateWithoutUserInput, roleUncheckedCreateWithoutUserInput>
    where?: roleWhereInput
  }

  export type roleUpdateToOneWithWhereWithoutUserInput = {
    where?: roleWhereInput
    data: XOR<roleUpdateWithoutUserInput, roleUncheckedUpdateWithoutUserInput>
  }

  export type roleUpdateWithoutUserInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
  }

  export type roleUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    deskripsi?: StringFieldUpdateOperationsInput | string
  }

  export type artikel_commentCreateManyArtikelInput = {
    id?: number
    id_user: number
    komen_teks: string
  }

  export type artikel_commentUpdateWithoutArtikelInput = {
    komen_teks?: StringFieldUpdateOperationsInput | string
    user?: userUpdateOneRequiredWithoutArtikel_commentNestedInput
  }

  export type artikel_commentUncheckedUpdateWithoutArtikelInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type artikel_commentUncheckedUpdateManyWithoutArtikelInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type keranjangCreateManyBarangInput = {
    id?: number
    id_user: number
    jumlah: number
    subtotal: number
  }

  export type penaltiCreateManyBarangInput = {
    id?: number
    id_user: number
    total_bayar: number
  }

  export type reviewCreateManyBarangInput = {
    id?: number
    id_user: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type sewa_itemsCreateManyBarangInput = {
    id?: number
    id_sewa_req: number
    jumlah: number
    harga_total: number
  }

  export type keranjangUpdateWithoutBarangInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    user?: userUpdateOneRequiredWithoutKeranjangNestedInput
  }

  export type keranjangUncheckedUpdateWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type keranjangUncheckedUpdateManyWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiUpdateWithoutBarangInput = {
    total_bayar?: FloatFieldUpdateOperationsInput | number
    user?: userUpdateOneRequiredWithoutPenaltiNestedInput
  }

  export type penaltiUncheckedUpdateWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiUncheckedUpdateManyWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type reviewUpdateWithoutBarangInput = {
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutReviewNestedInput
  }

  export type reviewUncheckedUpdateWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewUncheckedUpdateManyWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sewa_itemsUpdateWithoutBarangInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
    sewa_req?: sewa_reqUpdateOneRequiredWithoutSewa_itemsNestedInput
  }

  export type sewa_itemsUncheckedUpdateWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sewa_req?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type sewa_itemsUncheckedUpdateManyWithoutBarangInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sewa_req?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type barangCreateManyKategoriInput = {
    id?: number
    stok: number
    foto: string
    harga_pinalti_per_jam: number
    harga: number
    nama: string
  }

  export type barangUpdateWithoutKategoriInput = {
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUpdateManyWithoutBarangNestedInput
    review?: reviewUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateWithoutKategoriInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    keranjang?: keranjangUncheckedUpdateManyWithoutBarangNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutBarangNestedInput
    review?: reviewUncheckedUpdateManyWithoutBarangNestedInput
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutBarangNestedInput
  }

  export type barangUncheckedUpdateManyWithoutKategoriInput = {
    id?: IntFieldUpdateOperationsInput | number
    stok?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    harga_pinalti_per_jam?: FloatFieldUpdateOperationsInput | number
    harga?: FloatFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type userCreateManyRoleInput = {
    id?: number
    username: string
    password: string
    no_telp?: string | null
    alamat?: string | null
    is_blacklisted?: boolean
    email: string
    remember_token?: string | null
    avatar?: string | null
    createdAt?: Date | string
    date_of_birth?: Date | string | null
    full_name?: string | null
    provider?: string | null
    provider_id?: string | null
    updatedAt?: Date | string | null
  }

  export type userUpdateWithoutRoleInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUpdateManyWithoutUserNestedInput
    penalti?: penaltiUpdateManyWithoutUserNestedInput
    review?: reviewUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutUserNestedInput
    keranjang?: keranjangUncheckedUpdateManyWithoutUserNestedInput
    penalti?: penaltiUncheckedUpdateManyWithoutUserNestedInput
    review?: reviewUncheckedUpdateManyWithoutUserNestedInput
    sewa_req?: sewa_reqUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: transaksiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    no_telp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    is_blacklisted?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sewa_itemsCreateManySewa_reqInput = {
    id?: number
    id_barang: number
    jumlah: number
    harga_total: number
  }

  export type sewa_itemsUpdateWithoutSewa_reqInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutSewa_itemsNestedInput
  }

  export type sewa_itemsUncheckedUpdateWithoutSewa_reqInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type sewa_itemsUncheckedUpdateManyWithoutSewa_reqInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    harga_total?: FloatFieldUpdateOperationsInput | number
  }

  export type artikelCreateManyTagsInput = {
    id?: number
    judul: string
    konten: string
    foto: string
    createdAt?: Date | string
    is_deleted?: boolean
    is_published?: boolean
    publishAt: Date | string
    updatedAt?: Date | string | null
  }

  export type artikelUpdateWithoutTagsInput = {
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUpdateManyWithoutArtikelNestedInput
  }

  export type artikelUncheckedUpdateWithoutTagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    artikel_comment?: artikel_commentUncheckedUpdateManyWithoutArtikelNestedInput
  }

  export type artikelUncheckedUpdateManyWithoutTagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    judul?: StringFieldUpdateOperationsInput | string
    konten?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_published?: BoolFieldUpdateOperationsInput | boolean
    publishAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type artikel_commentCreateManyUserInput = {
    id?: number
    id_artikel: number
    komen_teks: string
  }

  export type keranjangCreateManyUserInput = {
    id?: number
    id_barang: number
    jumlah: number
    subtotal: number
  }

  export type penaltiCreateManyUserInput = {
    id?: number
    id_barang: number
    total_bayar: number
  }

  export type reviewCreateManyUserInput = {
    id?: number
    id_barang: number
    rating: number
    createdAt: Date | string
    komentar: string
    updatedAt?: Date | string | null
  }

  export type sewa_reqCreateManyUserInput = {
    id?: number
    start_date: Date | string
    end_date: Date | string
    status: string
    dikembalikan_pada?: Date | string | null
  }

  export type transaksiCreateManyUserInput = {
    id?: number
    total_pembayaran: number
    tanggal_transaksi: Date | string
    status: string
  }

  export type artikel_commentUpdateWithoutUserInput = {
    komen_teks?: StringFieldUpdateOperationsInput | string
    artikel?: artikelUpdateOneRequiredWithoutArtikel_commentNestedInput
  }

  export type artikel_commentUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_artikel?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type artikel_commentUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_artikel?: IntFieldUpdateOperationsInput | number
    komen_teks?: StringFieldUpdateOperationsInput | string
  }

  export type keranjangUpdateWithoutUserInput = {
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutKeranjangNestedInput
  }

  export type keranjangUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type keranjangUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    jumlah?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiUpdateWithoutUserInput = {
    total_bayar?: FloatFieldUpdateOperationsInput | number
    barang?: barangUpdateOneRequiredWithoutPenaltiNestedInput
  }

  export type penaltiUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type penaltiUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    total_bayar?: FloatFieldUpdateOperationsInput | number
  }

  export type reviewUpdateWithoutUserInput = {
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    barang?: barangUpdateOneRequiredWithoutReviewNestedInput
  }

  export type reviewUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_barang?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    komentar?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sewa_reqUpdateWithoutUserInput = {
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sewa_items?: sewa_itemsUpdateManyWithoutSewa_reqNestedInput
  }

  export type sewa_reqUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sewa_items?: sewa_itemsUncheckedUpdateManyWithoutSewa_reqNestedInput
  }

  export type sewa_reqUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    dikembalikan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaksiUpdateWithoutUserInput = {
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type transaksiUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type transaksiUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    total_pembayaran?: FloatFieldUpdateOperationsInput | number
    tanggal_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}