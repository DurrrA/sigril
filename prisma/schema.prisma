generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model artikel {
  id              Int               @id @default(autoincrement())
  judul           String
  konten          String            @db.Text
  foto            String
  id_tags         Int
  createdAt       DateTime          @default(now())
  is_deleted      Boolean           @default(false)
  is_published    Boolean           @default(false)
  publishAt       DateTime
  updatedAt       DateTime?
  tags            tags              @relation(fields: [id_tags], references: [id], map: "Artikel_id_tags_fkey")
  artikel_comment artikel_comment[]

  @@index([id_tags], map: "Artikel_id_tags_fkey")
}

model artikel_comment {
  id         Int     @id @default(autoincrement())
  id_artikel Int
  id_user    Int
  komen_teks String
  artikel    artikel @relation(fields: [id_artikel], references: [id], map: "Artikel_Comment_id_artikel_fkey")
  user       user    @relation(fields: [id_user], references: [id], map: "Artikel_Comment_id_user_fkey")

  @@index([id_artikel], map: "Artikel_Comment_id_artikel_fkey")
  @@index([id_user], map: "Artikel_Comment_id_user_fkey")
}

model barang {
  id                    Int          @id @default(autoincrement())
  stok                  Int
  foto                  String
  harga_pinalti_per_jam Float
  deskripsi             String
  kategori_id           Int
  harga                 Float
  nama                  String
  kategori              kategori     @relation(fields: [kategori_id], references: [id], map: "Barang_kategori_id_fkey")
  keranjang             keranjang[]
  penalti               penalti[]
  review                review[]
  sewa_items            sewa_items[]

  @@index([kategori_id], map: "Barang_kategori_id_fkey")
}

model kategori {
  id     Int      @id @default(autoincrement())
  nama   String
  barang barang[]
}

model keranjang {
  id        Int    @id @default(autoincrement())
  id_user   Int
  id_barang Int
  jumlah    Int
  subtotal  Float
  start_date DateTime
  end_date   DateTime
  rental_days Int
  barang    barang @relation(fields: [id_barang], references: [id], map: "Keranjang_id_barang_fkey")
  user      user   @relation(fields: [id_user], references: [id], map: "Keranjang_id_user_fkey")

  @@index([id_barang], map: "Keranjang_id_barang_fkey")
  @@index([id_user], map: "Keranjang_id_user_fkey")
}

model penalti {
  id          Int       @id @default(autoincrement())
  id_sewa     Int       // Add to link directly to the rental
  id_barang   Int
  id_user     Int
  total_bayar Float
  alasan      String    // Add reason for penalty
  status      String    @default("unpaid") // Add status field
  created_at  DateTime  @default(now())
  barang      barang    @relation(fields: [id_barang], references: [id])
  user        user      @relation(fields: [id_user], references: [id])
  sewa_req    sewa_req  @relation(fields: [id_sewa], references: [id]) // Add this relation

  @@index([id_barang])
  @@index([id_user])
  @@index([id_sewa])
}

model review {
  id        Int       @id @default(autoincrement())
  id_user   Int
  id_barang Int
  rating    Int
  createdAt DateTime
  komentar  String
  updatedAt DateTime?
  barang    barang    @relation(fields: [id_barang], references: [id], map: "Review_id_barang_fkey")
  user      user      @relation(fields: [id_user], references: [id], map: "Review_id_user_fkey")

  @@index([id_barang], map: "Review_id_barang_fkey")
  @@index([id_user], map: "Review_id_user_fkey")
}

model role {
  id        Int    @id @default(autoincrement())
  role_name String
  deskripsi String
  user      user[]
}

model sewa_items {
  id          Int      @id @default(autoincrement())
  id_sewa_req Int
  id_barang   Int
  jumlah      Int
  harga_total Float
  barang      barang   @relation(fields: [id_barang], references: [id], map: "Sewa_items_id_barang_fkey")
  sewa_req    sewa_req @relation(fields: [id_sewa_req], references: [id], map: "Sewa_items_id_sewa_req_fkey")

  @@index([id_barang], map: "Sewa_items_id_barang_fkey")
  @@index([id_sewa_req], map: "Sewa_items_id_sewa_req_fkey")
}

model sewa_req {
  id                Int          @id @default(autoincrement())
  id_user           Int
  start_date        DateTime
  end_date          DateTime
  status            String
  dikembalikan_pada DateTime?
  sewa_items        sewa_items[]
  penalties_applied Boolean      @default(false)
  has_been_inspected Boolean     @default(false)
  payment_status      String       @default("unpaid")
  total_amount        Float?
  user              user         @relation(fields: [id_user], references: [id], map: "Sewa_req_id_user_fkey")
  penalti        penalti[]

  @@index([id_user], map: "Sewa_req_id_user_fkey")
}

model tags {
  nama    String
  id      Int       @id @default(autoincrement())
  artikel artikel[]
}

model transaksi {
  id                Int      @id @default(autoincrement())
  id_user           Int
  total_pembayaran  Float
  tanggal_transaksi DateTime
  bukti_pembayaran  String
  status            String
  user              user     @relation(fields: [id_user], references: [id], map: "Transaksi_id_user_fkey")

  @@index([id_user], map: "Transaksi_id_user_fkey")
}

model user {
  id              Int               @id @default(autoincrement())
  username        String
  password        String
  no_telp         String?
  alamat          String?
  is_blacklisted  Boolean           @default(false)
  role_id         Int
  email           String            @unique(map: "User_email_key")
  remember_token  String?
  avatar          String?
  createdAt       DateTime          @default(now())
  date_of_birth   DateTime?
  full_name       String?
  provider        String?
  provider_id     String?
  updatedAt       DateTime?
  artikel_comment artikel_comment[]
  keranjang       keranjang[]
  penalti         penalti[]
  review          review[]
  sewa_req        sewa_req[]
  transaksi       transaksi[]
  role            role              @relation(fields: [role_id], references: [id], map: "User_role_id_fkey")

  @@index([role_id], map: "User_role_id_fkey")
}
